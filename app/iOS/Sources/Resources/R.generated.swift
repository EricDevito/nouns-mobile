//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap { Locale(identifier: $0) } ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)

  /// Find first language and bundle for which the table exists
  fileprivate static func localeBundle(tableName: String, preferredLanguages: [String]) -> (Foundation.Locale, Foundation.Bundle)? {
    // Filter preferredLanguages to localizations, use first locale
    var languages = preferredLanguages
      .map { Locale(identifier: $0) }
      .prefix(1)
      .flatMap { locale -> [String] in
        if hostingBundle.localizations.contains(locale.identifier) {
          if let language = locale.languageCode, hostingBundle.localizations.contains(language) {
            return [locale.identifier, language]
          } else {
            return [locale.identifier]
          }
        } else if let language = locale.languageCode, hostingBundle.localizations.contains(language) {
          return [language]
        } else {
          return []
        }
      }

    // If there's no languages, use development language as backstop
    if languages.isEmpty {
      if let developmentLocalization = hostingBundle.developmentLocalization {
        languages = [developmentLocalization]
      }
    } else {
      // Insert Base as second item (between locale identifier and languageCode)
      languages.insert("Base", at: 1)

      // Add development language as backstop
      if let developmentLocalization = hostingBundle.developmentLocalization {
        languages.append(developmentLocalization)
      }
    }

    // Find first language for which table exists
    // Note: key might not exist in chosen language (in that case, key will be shown)
    for language in languages {
      if let lproj = hostingBundle.url(forResource: language, withExtension: "lproj"),
         let lbundle = Bundle(url: lproj)
      {
        let strings = lbundle.url(forResource: tableName, withExtension: "strings")
        let stringsdict = lbundle.url(forResource: tableName, withExtension: "stringsdict")

        if strings != nil || stringsdict != nil {
          return (Locale(identifier: language), lbundle)
        }
      }
    }

    // If table is available in main bundle, don't look for localized resources
    let strings = hostingBundle.url(forResource: tableName, withExtension: "strings", subdirectory: nil, localization: nil)
    let stringsdict = hostingBundle.url(forResource: tableName, withExtension: "stringsdict", subdirectory: nil, localization: nil)

    if strings != nil || stringsdict != nil {
      return (applicationLocale, hostingBundle)
    }

    // If table is not found for requested languages, key will be shown
    return nil
  }

  /// Load string from Info.plist file
  fileprivate static func infoPlistString(path: [String], key: String) -> String? {
    var dict = hostingBundle.infoDictionary
    for step in path {
      guard let obj = dict?[step] as? [String: Any] else { return nil }
      dict = obj
    }
    return dict?[key] as? String
  }

  static func validate() throws {
    try intern.validate()
  }

  #if os(iOS) || os(tvOS)
  /// This `R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()

    #if os(iOS) || os(tvOS)
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    #endif

    fileprivate init() {}
  }
  #endif

  /// This `R.color` struct is generated, and contains static references to 2 colors.
  struct color {
    /// Color `AccentColor`.
    static let accentColor = Rswift.ColorResource(bundle: R.hostingBundle, name: "AccentColor")
    /// Color `launch.screen.background`.
    static let launchScreenBackground = Rswift.ColorResource(bundle: R.hostingBundle, name: "launch.screen.background")

    #if os(iOS) || os(tvOS)
    /// `UIColor(named: "AccentColor", bundle: ..., traitCollection: ...)`
    @available(tvOS 11.0, *)
    @available(iOS 11.0, *)
    static func accentColor(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIColor? {
      return UIKit.UIColor(resource: R.color.accentColor, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIColor(named: "launch.screen.background", bundle: ..., traitCollection: ...)`
    @available(tvOS 11.0, *)
    @available(iOS 11.0, *)
    static func launchScreenBackground(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIColor? {
      return UIKit.UIColor(resource: R.color.launchScreenBackground, compatibleWith: traitCollection)
    }
    #endif

    #if os(watchOS)
    /// `UIColor(named: "AccentColor", bundle: ..., traitCollection: ...)`
    @available(watchOSApplicationExtension 4.0, *)
    static func accentColor(_: Void = ()) -> UIKit.UIColor? {
      return UIKit.UIColor(named: R.color.accentColor.name)
    }
    #endif

    #if os(watchOS)
    /// `UIColor(named: "launch.screen.background", bundle: ..., traitCollection: ...)`
    @available(watchOSApplicationExtension 4.0, *)
    static func launchScreenBackground(_: Void = ()) -> UIKit.UIColor? {
      return UIKit.UIColor(named: R.color.launchScreenBackground.name)
    }
    #endif

    fileprivate init() {}
  }

  /// This `R.entitlements` struct is generated, and contains static references to 1 properties.
  struct entitlements {
    static let apsEnvironment = infoPlistString(path: [], key: "aps-environment") ?? "development"

    fileprivate init() {}
  }

  /// This `R.file` struct is generated, and contains static references to 3 files.
  struct file {
    /// Resource file `AppIcons.plist`.
    static let appIconsPlist = Rswift.FileResource(bundle: R.hostingBundle, name: "AppIcons", pathExtension: "plist")
    /// Resource file `GoogleService-Info.plist`.
    static let googleServiceInfoPlist = Rswift.FileResource(bundle: R.hostingBundle, name: "GoogleService-Info", pathExtension: "plist")
    /// Resource file `nounfetti.json`.
    static let nounfettiJson = Rswift.FileResource(bundle: R.hostingBundle, name: "nounfetti", pathExtension: "json")

    /// `bundle.url(forResource: "AppIcons", withExtension: "plist")`
    static func appIconsPlist(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.appIconsPlist
      return fileResource.bundle.url(forResource: fileResource)
    }

    /// `bundle.url(forResource: "GoogleService-Info", withExtension: "plist")`
    static func googleServiceInfoPlist(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.googleServiceInfoPlist
      return fileResource.bundle.url(forResource: fileResource)
    }

    /// `bundle.url(forResource: "nounfetti", withExtension: "json")`
    static func nounfettiJson(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.nounfettiJson
      return fileResource.bundle.url(forResource: fileResource)
    }

    fileprivate init() {}
  }

  /// This `R.image` struct is generated, and contains static references to 299 images.
  struct image {
    /// Image `AppIcon_Preview`.
    static let appIcon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "AppIcon_Preview")
    /// Image `BonsaiNeon_Preview`.
    static let bonsaiNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "BonsaiNeon_Preview")
    /// Image `Bonsai_Preview`.
    static let bonsai_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Bonsai_Preview")
    /// Image `CannedHamNeon_Preview`.
    static let cannedHamNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "CannedHamNeon_Preview")
    /// Image `CannedHam_Preview`.
    static let cannedHam_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "CannedHam_Preview")
    /// Image `ConeNeon_Preview`.
    static let coneNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "ConeNeon_Preview")
    /// Image `Cone_Preview`.
    static let cone_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Cone_Preview")
    /// Image `CowNeon_Preview`.
    static let cowNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "CowNeon_Preview")
    /// Image `Cow_Preview`.
    static let cow_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Cow_Preview")
    /// Image `CrabNeon_Preview`.
    static let crabNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "CrabNeon_Preview")
    /// Image `Crab_Preview`.
    static let crab_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Crab_Preview")
    /// Image `DNANeon_Preview`.
    static let dnaNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "DNANeon_Preview")
    /// Image `DNA_Preview`.
    static let dna_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "DNA_Preview")
    /// Image `DictionaryNeon_Preview`.
    static let dictionaryNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "DictionaryNeon_Preview")
    /// Image `Dictionary_Preview`.
    static let dictionary_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Dictionary_Preview")
    /// Image `EarthNeon_Preview`.
    static let earthNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "EarthNeon_Preview")
    /// Image `Earth_Preview`.
    static let earth_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Earth_Preview")
    /// Image `FanNeon_Preview`.
    static let fanNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "FanNeon_Preview")
    /// Image `Fan_Preview`.
    static let fan_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Fan_Preview")
    /// Image `FoxNeon_Preview`.
    static let foxNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "FoxNeon_Preview")
    /// Image `Fox_Preview`.
    static let fox_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Fox_Preview")
    /// Image `GnomeNeon_Preview`.
    static let gnomeNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "GnomeNeon_Preview")
    /// Image `Gnome_Preview`.
    static let gnome_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Gnome_Preview")
    /// Image `HighHeelNeon_Preview`.
    static let highHeelNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "HighHeelNeon_Preview")
    /// Image `HighHeel_Preview`.
    static let highHeel_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "HighHeel_Preview")
    /// Image `KetchupNeon_Preview`.
    static let ketchupNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "KetchupNeon_Preview")
    /// Image `Ketchup_Preview`.
    static let ketchup_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Ketchup_Preview")
    /// Image `LaptopNeon_Preview`.
    static let laptopNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaptopNeon_Preview")
    /// Image `Laptop_Preview`.
    static let laptop_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Laptop_Preview")
    /// Image `MilkNeon_Preview`.
    static let milkNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "MilkNeon_Preview")
    /// Image `Milk_Preview`.
    static let milk_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Milk_Preview")
    /// Image `NoodlesNeon_Preview`.
    static let noodlesNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "NoodlesNeon_Preview")
    /// Image `Noodles_Preview`.
    static let noodles_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Noodles_Preview")
    /// Image `NounsWatermark`.
    static let nounsWatermark = Rswift.ImageResource(bundle: R.hostingBundle, name: "NounsWatermark")
    /// Image `RobotNeon_Preview`.
    static let robotNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "RobotNeon_Preview")
    /// Image `Robot_Preview`.
    static let robot_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Robot_Preview")
    /// Image `SharkNeon_Preview`.
    static let sharkNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "SharkNeon_Preview")
    /// Image `Shark_Preview`.
    static let shark_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Shark_Preview")
    /// Image `StarsparklesNeon_Preview`.
    static let starsparklesNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "StarsparklesNeon_Preview")
    /// Image `Starsparkles_Preview`.
    static let starsparkles_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Starsparkles_Preview")
    /// Image `TacoNeon_Preview`.
    static let tacoNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "TacoNeon_Preview")
    /// Image `Taco_Preview`.
    static let taco_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Taco_Preview")
    /// Image `UFONeon_Preview`.
    static let ufoNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "UFONeon_Preview")
    /// Image `UFO_Preview`.
    static let ufo_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "UFO_Preview")
    /// Image `VoidNeon_Preview`.
    static let voidNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "VoidNeon_Preview")
    /// Image `Void_Preview`.
    static let void_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Void_Preview")
    /// Image `VolcanoNeon_Preview`.
    static let volcanoNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "VolcanoNeon_Preview")
    /// Image `Volcano_Preview`.
    static let volcano_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Volcano_Preview")
    /// Image `WaveNeon_Preview`.
    static let waveNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "WaveNeon_Preview")
    /// Image `Wave_Preview`.
    static let wave_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Wave_Preview")
    /// Image `WeedNeon_Preview`.
    static let weedNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "WeedNeon_Preview")
    /// Image `Weed_Preview`.
    static let weed_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "Weed_Preview")
    /// Image `WizardHatNeon_Preview`.
    static let wizardHatNeon_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "WizardHatNeon_Preview")
    /// Image `WizardHat_Preview`.
    static let wizardHat_Preview = Rswift.ImageResource(bundle: R.hostingBundle, name: "WizardHat_Preview")
    /// Image `bell-noun`.
    static let bellNoun = Rswift.ImageResource(bundle: R.hostingBundle, name: "bell-noun")
    /// Image `confetti-10`.
    static let confetti10 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-10")
    /// Image `confetti-1`.
    static let confetti1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-1")
    /// Image `confetti-2`.
    static let confetti2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-2")
    /// Image `confetti-3`.
    static let confetti3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-3")
    /// Image `confetti-4`.
    static let confetti4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-4")
    /// Image `confetti-5`.
    static let confetti5 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-5")
    /// Image `confetti-6`.
    static let confetti6 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-6")
    /// Image `confetti-7`.
    static let confetti7 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-7")
    /// Image `confetti-8`.
    static let confetti8 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-8")
    /// Image `confetti-9`.
    static let confetti9 = Rswift.ImageResource(bundle: R.hostingBundle, name: "confetti-9")
    /// Image `create-noun-pizza`.
    static let createNounPizza = Rswift.ImageResource(bundle: R.hostingBundle, name: "create-noun-pizza")
    /// Image `explore-onboarding`.
    static let exploreOnboarding = Rswift.ImageResource(bundle: R.hostingBundle, name: "explore-onboarding")
    /// Image `eyes-blink_1`.
    static let eyesBlink_1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-blink_1")
    /// Image `eyes-blink_2`.
    static let eyesBlink_2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-blink_2")
    /// Image `eyes-blink_3`.
    static let eyesBlink_3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-blink_3")
    /// Image `eyes-blink_4`.
    static let eyesBlink_4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-blink_4")
    /// Image `eyes-blink_5`.
    static let eyesBlink_5 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-blink_5")
    /// Image `eyes-shift_0`.
    static let eyesShift_0 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-shift_0")
    /// Image `eyes-shift_1`.
    static let eyesShift_1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-shift_1")
    /// Image `eyes-shift_2`.
    static let eyesShift_2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-shift_2")
    /// Image `eyes-shift_3`.
    static let eyesShift_3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-shift_3")
    /// Image `eyes-shift_4`.
    static let eyesShift_4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-shift_4")
    /// Image `eyes-shift_5`.
    static let eyesShift_5 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-shift_5")
    /// Image `eyes-shift_6`.
    static let eyesShift_6 = Rswift.ImageResource(bundle: R.hostingBundle, name: "eyes-shift_6")
    /// Image `head-ape-mouth-1`.
    static let headApeMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-ape-mouth-1")
    /// Image `head-ape-mouth-2`.
    static let headApeMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-ape-mouth-2")
    /// Image `head-ape-mouth-3`.
    static let headApeMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-ape-mouth-3")
    /// Image `head-ape-mouth-4`.
    static let headApeMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-ape-mouth-4")
    /// Image `head-baseball-gameball-mouth-1`.
    static let headBaseballGameballMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-baseball-gameball-mouth-1")
    /// Image `head-baseball-gameball-mouth-2`.
    static let headBaseballGameballMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-baseball-gameball-mouth-2")
    /// Image `head-baseball-gameball-mouth-3`.
    static let headBaseballGameballMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-baseball-gameball-mouth-3")
    /// Image `head-baseball-gameball-mouth-4`.
    static let headBaseballGameballMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-baseball-gameball-mouth-4")
    /// Image `head-basketball-mouth-1`.
    static let headBasketballMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-basketball-mouth-1")
    /// Image `head-basketball-mouth-2`.
    static let headBasketballMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-basketball-mouth-2")
    /// Image `head-basketball-mouth-3`.
    static let headBasketballMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-basketball-mouth-3")
    /// Image `head-basketball-mouth-4`.
    static let headBasketballMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-basketball-mouth-4")
    /// Image `head-bat-mouth-1`.
    static let headBatMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-bat-mouth-1")
    /// Image `head-bat-mouth-2`.
    static let headBatMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-bat-mouth-2")
    /// Image `head-bat-mouth-3`.
    static let headBatMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-bat-mouth-3")
    /// Image `head-bat-mouth-4`.
    static let headBatMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-bat-mouth-4")
    /// Image `head-bear-mouth-1`.
    static let headBearMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-bear-mouth-1")
    /// Image `head-bear-mouth-2`.
    static let headBearMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-bear-mouth-2")
    /// Image `head-bear-mouth-3`.
    static let headBearMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-bear-mouth-3")
    /// Image `head-bear-mouth-4`.
    static let headBearMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-bear-mouth-4")
    /// Image `head-blueberry-mouth-1`.
    static let headBlueberryMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-blueberry-mouth-1")
    /// Image `head-blueberry-mouth-2`.
    static let headBlueberryMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-blueberry-mouth-2")
    /// Image `head-blueberry-mouth-3`.
    static let headBlueberryMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-blueberry-mouth-3")
    /// Image `head-blueberry-mouth-4`.
    static let headBlueberryMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-blueberry-mouth-4")
    /// Image `head-cannedham-mouth-1`.
    static let headCannedhamMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cannedham-mouth-1")
    /// Image `head-cannedham-mouth-2`.
    static let headCannedhamMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cannedham-mouth-2")
    /// Image `head-cannedham-mouth-3`.
    static let headCannedhamMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cannedham-mouth-3")
    /// Image `head-cannedham-mouth-4`.
    static let headCannedhamMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cannedham-mouth-4")
    /// Image `head-cash-register-mouth-1`.
    static let headCashRegisterMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cash-register-mouth-1")
    /// Image `head-cash-register-mouth-2`.
    static let headCashRegisterMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cash-register-mouth-2")
    /// Image `head-cash-register-mouth-3`.
    static let headCashRegisterMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cash-register-mouth-3")
    /// Image `head-cash-register-mouth-4`.
    static let headCashRegisterMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cash-register-mouth-4")
    /// Image `head-chainsaw-mouth-1`.
    static let headChainsawMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chainsaw-mouth-1")
    /// Image `head-chainsaw-mouth-2`.
    static let headChainsawMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chainsaw-mouth-2")
    /// Image `head-chainsaw-mouth-3`.
    static let headChainsawMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chainsaw-mouth-3")
    /// Image `head-chainsaw-mouth-4`.
    static let headChainsawMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chainsaw-mouth-4")
    /// Image `head-chameleon-mouth-1`.
    static let headChameleonMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chameleon-mouth-1")
    /// Image `head-chameleon-mouth-2`.
    static let headChameleonMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chameleon-mouth-2")
    /// Image `head-chameleon-mouth-3`.
    static let headChameleonMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chameleon-mouth-3")
    /// Image `head-chameleon-mouth-4`.
    static let headChameleonMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chameleon-mouth-4")
    /// Image `head-chicken-mouth-1`.
    static let headChickenMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chicken-mouth-1")
    /// Image `head-chicken-mouth-2`.
    static let headChickenMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chicken-mouth-2")
    /// Image `head-chicken-mouth-3`.
    static let headChickenMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chicken-mouth-3")
    /// Image `head-chicken-mouth-4`.
    static let headChickenMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chicken-mouth-4")
    /// Image `head-chipboard-mouth-1`.
    static let headChipboardMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chipboard-mouth-1")
    /// Image `head-chipboard-mouth-2`.
    static let headChipboardMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chipboard-mouth-2")
    /// Image `head-chipboard-mouth-3`.
    static let headChipboardMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chipboard-mouth-3")
    /// Image `head-chipboard-mouth-4`.
    static let headChipboardMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-chipboard-mouth-4")
    /// Image `head-clutch-mouth-1`.
    static let headClutchMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-clutch-mouth-1")
    /// Image `head-clutch-mouth-2`.
    static let headClutchMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-clutch-mouth-2")
    /// Image `head-clutch-mouth-3`.
    static let headClutchMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-clutch-mouth-3")
    /// Image `head-clutch-mouth-4`.
    static let headClutchMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-clutch-mouth-4")
    /// Image `head-cow-mouth-1`.
    static let headCowMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cow-mouth-1")
    /// Image `head-cow-mouth-2`.
    static let headCowMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cow-mouth-2")
    /// Image `head-cow-mouth-3`.
    static let headCowMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cow-mouth-3")
    /// Image `head-cow-mouth-4`.
    static let headCowMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-cow-mouth-4")
    /// Image `head-croc-hat-mouth-1`.
    static let headCrocHatMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-croc-hat-mouth-1")
    /// Image `head-croc-hat-mouth-2`.
    static let headCrocHatMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-croc-hat-mouth-2")
    /// Image `head-croc-hat-mouth-3`.
    static let headCrocHatMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-croc-hat-mouth-3")
    /// Image `head-croc-hat-mouth-4`.
    static let headCrocHatMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-croc-hat-mouth-4")
    /// Image `head-default-mouth-1`.
    static let headDefaultMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-default-mouth-1")
    /// Image `head-default-mouth-2`.
    static let headDefaultMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-default-mouth-2")
    /// Image `head-default-mouth-3`.
    static let headDefaultMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-default-mouth-3")
    /// Image `head-default-mouth-4`.
    static let headDefaultMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-default-mouth-4")
    /// Image `head-dino-mouth-1`.
    static let headDinoMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-dino-mouth-1")
    /// Image `head-dino-mouth-2`.
    static let headDinoMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-dino-mouth-2")
    /// Image `head-dino-mouth-3`.
    static let headDinoMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-dino-mouth-3")
    /// Image `head-dino-mouth-4`.
    static let headDinoMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-dino-mouth-4")
    /// Image `head-dog-mouth-1`.
    static let headDogMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-dog-mouth-1")
    /// Image `head-dog-mouth-2`.
    static let headDogMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-dog-mouth-2")
    /// Image `head-dog-mouth-3`.
    static let headDogMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-dog-mouth-3")
    /// Image `head-dog-mouth-4`.
    static let headDogMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-dog-mouth-4")
    /// Image `head-drill-mouth-1`.
    static let headDrillMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-drill-mouth-1")
    /// Image `head-drill-mouth-2`.
    static let headDrillMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-drill-mouth-2")
    /// Image `head-drill-mouth-3`.
    static let headDrillMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-drill-mouth-3")
    /// Image `head-drill-mouth-4`.
    static let headDrillMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-drill-mouth-4")
    /// Image `head-duck-mouth-1`.
    static let headDuckMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-duck-mouth-1")
    /// Image `head-duck-mouth-2`.
    static let headDuckMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-duck-mouth-2")
    /// Image `head-duck-mouth-3`.
    static let headDuckMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-duck-mouth-3")
    /// Image `head-duck-mouth-4`.
    static let headDuckMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-duck-mouth-4")
    /// Image `head-factory-dark-mouth-1`.
    static let headFactoryDarkMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-factory-dark-mouth-1")
    /// Image `head-factory-dark-mouth-2`.
    static let headFactoryDarkMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-factory-dark-mouth-2")
    /// Image `head-factory-dark-mouth-3`.
    static let headFactoryDarkMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-factory-dark-mouth-3")
    /// Image `head-factory-dark-mouth-4`.
    static let headFactoryDarkMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-factory-dark-mouth-4")
    /// Image `head-frog-mouth-1`.
    static let headFrogMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-frog-mouth-1")
    /// Image `head-frog-mouth-2`.
    static let headFrogMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-frog-mouth-2")
    /// Image `head-frog-mouth-3`.
    static let headFrogMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-frog-mouth-3")
    /// Image `head-frog-mouth-4`.
    static let headFrogMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-frog-mouth-4")
    /// Image `head-gnome-mouth-1`.
    static let headGnomeMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-gnome-mouth-1")
    /// Image `head-gnome-mouth-2`.
    static let headGnomeMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-gnome-mouth-2")
    /// Image `head-gnome-mouth-3`.
    static let headGnomeMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-gnome-mouth-3")
    /// Image `head-gnome-mouth-4`.
    static let headGnomeMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-gnome-mouth-4")
    /// Image `head-goat-mouth-1`.
    static let headGoatMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-goat-mouth-1")
    /// Image `head-goat-mouth-2`.
    static let headGoatMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-goat-mouth-2")
    /// Image `head-goat-mouth-3`.
    static let headGoatMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-goat-mouth-3")
    /// Image `head-goat-mouth-4`.
    static let headGoatMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-goat-mouth-4")
    /// Image `head-goldfish-mouth-1`.
    static let headGoldfishMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-goldfish-mouth-1")
    /// Image `head-goldfish-mouth-2`.
    static let headGoldfishMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-goldfish-mouth-2")
    /// Image `head-goldfish-mouth-3`.
    static let headGoldfishMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-goldfish-mouth-3")
    /// Image `head-goldfish-mouth-4`.
    static let headGoldfishMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-goldfish-mouth-4")
    /// Image `head-hardhat-mouth-1`.
    static let headHardhatMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-hardhat-mouth-1")
    /// Image `head-hardhat-mouth-2`.
    static let headHardhatMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-hardhat-mouth-2")
    /// Image `head-hardhat-mouth-3`.
    static let headHardhatMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-hardhat-mouth-3")
    /// Image `head-hardhat-mouth-4`.
    static let headHardhatMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-hardhat-mouth-4")
    /// Image `head-horse-deepfried-mouth-1`.
    static let headHorseDeepfriedMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-horse-deepfried-mouth-1")
    /// Image `head-horse-deepfried-mouth-2`.
    static let headHorseDeepfriedMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-horse-deepfried-mouth-2")
    /// Image `head-horse-deepfried-mouth-3`.
    static let headHorseDeepfriedMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-horse-deepfried-mouth-3")
    /// Image `head-horse-deepfried-mouth-4`.
    static let headHorseDeepfriedMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-horse-deepfried-mouth-4")
    /// Image `head-jupiter-mouth-1`.
    static let headJupiterMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-jupiter-mouth-1")
    /// Image `head-jupiter-mouth-2`.
    static let headJupiterMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-jupiter-mouth-2")
    /// Image `head-jupiter-mouth-3`.
    static let headJupiterMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-jupiter-mouth-3")
    /// Image `head-jupiter-mouth-4`.
    static let headJupiterMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-jupiter-mouth-4")
    /// Image `head-laptop-mouth-1`.
    static let headLaptopMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-laptop-mouth-1")
    /// Image `head-laptop-mouth-2`.
    static let headLaptopMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-laptop-mouth-2")
    /// Image `head-laptop-mouth-3`.
    static let headLaptopMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-laptop-mouth-3")
    /// Image `head-laptop-mouth-4`.
    static let headLaptopMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-laptop-mouth-4")
    /// Image `head-moose-mouth-1`.
    static let headMooseMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-moose-mouth-1")
    /// Image `head-moose-mouth-2`.
    static let headMooseMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-moose-mouth-2")
    /// Image `head-moose-mouth-3`.
    static let headMooseMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-moose-mouth-3")
    /// Image `head-moose-mouth-4`.
    static let headMooseMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-moose-mouth-4")
    /// Image `head-mushroom-mouth-1`.
    static let headMushroomMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-mushroom-mouth-1")
    /// Image `head-mushroom-mouth-2`.
    static let headMushroomMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-mushroom-mouth-2")
    /// Image `head-mushroom-mouth-3`.
    static let headMushroomMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-mushroom-mouth-3")
    /// Image `head-mushroom-mouth-4`.
    static let headMushroomMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-mushroom-mouth-4")
    /// Image `head-orangutan-mouth-1`.
    static let headOrangutanMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-orangutan-mouth-1")
    /// Image `head-orangutan-mouth-2`.
    static let headOrangutanMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-orangutan-mouth-2")
    /// Image `head-orangutan-mouth-3`.
    static let headOrangutanMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-orangutan-mouth-3")
    /// Image `head-orangutan-mouth-4`.
    static let headOrangutanMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-orangutan-mouth-4")
    /// Image `head-peyote-mouth-1`.
    static let headPeyoteMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-peyote-mouth-1")
    /// Image `head-peyote-mouth-2`.
    static let headPeyoteMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-peyote-mouth-2")
    /// Image `head-peyote-mouth-3`.
    static let headPeyoteMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-peyote-mouth-3")
    /// Image `head-peyote-mouth-4`.
    static let headPeyoteMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-peyote-mouth-4")
    /// Image `head-piano-mouth-1`.
    static let headPianoMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-piano-mouth-1")
    /// Image `head-piano-mouth-2`.
    static let headPianoMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-piano-mouth-2")
    /// Image `head-piano-mouth-3`.
    static let headPianoMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-piano-mouth-3")
    /// Image `head-piano-mouth-4`.
    static let headPianoMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-piano-mouth-4")
    /// Image `head-pineapple-mouth-1`.
    static let headPineappleMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pineapple-mouth-1")
    /// Image `head-pineapple-mouth-2`.
    static let headPineappleMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pineapple-mouth-2")
    /// Image `head-pineapple-mouth-3`.
    static let headPineappleMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pineapple-mouth-3")
    /// Image `head-pineapple-mouth-4`.
    static let headPineappleMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pineapple-mouth-4")
    /// Image `head-pipe-mouth-1`.
    static let headPipeMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pipe-mouth-1")
    /// Image `head-pipe-mouth-2`.
    static let headPipeMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pipe-mouth-2")
    /// Image `head-pipe-mouth-3`.
    static let headPipeMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pipe-mouth-3")
    /// Image `head-pipe-mouth-4`.
    static let headPipeMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pipe-mouth-4")
    /// Image `head-pirateship-mouth-1`.
    static let headPirateshipMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pirateship-mouth-1")
    /// Image `head-pirateship-mouth-2`.
    static let headPirateshipMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pirateship-mouth-2")
    /// Image `head-pirateship-mouth-3`.
    static let headPirateshipMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pirateship-mouth-3")
    /// Image `head-pirateship-mouth-4`.
    static let headPirateshipMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pirateship-mouth-4")
    /// Image `head-pufferfish-mouth-1`.
    static let headPufferfishMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pufferfish-mouth-1")
    /// Image `head-pufferfish-mouth-2`.
    static let headPufferfishMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pufferfish-mouth-2")
    /// Image `head-pufferfish-mouth-3`.
    static let headPufferfishMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pufferfish-mouth-3")
    /// Image `head-pufferfish-mouth-4`.
    static let headPufferfishMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pufferfish-mouth-4")
    /// Image `head-pumpkin-mouth-1`.
    static let headPumpkinMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pumpkin-mouth-1")
    /// Image `head-pumpkin-mouth-2`.
    static let headPumpkinMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pumpkin-mouth-2")
    /// Image `head-pumpkin-mouth-3`.
    static let headPumpkinMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pumpkin-mouth-3")
    /// Image `head-pumpkin-mouth-4`.
    static let headPumpkinMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-pumpkin-mouth-4")
    /// Image `head-rabbit-mouth-1`.
    static let headRabbitMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-rabbit-mouth-1")
    /// Image `head-rabbit-mouth-2`.
    static let headRabbitMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-rabbit-mouth-2")
    /// Image `head-rabbit-mouth-3`.
    static let headRabbitMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-rabbit-mouth-3")
    /// Image `head-rabbit-mouth-4`.
    static let headRabbitMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-rabbit-mouth-4")
    /// Image `head-raven-mouth-1`.
    static let headRavenMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-raven-mouth-1")
    /// Image `head-raven-mouth-2`.
    static let headRavenMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-raven-mouth-2")
    /// Image `head-raven-mouth-3`.
    static let headRavenMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-raven-mouth-3")
    /// Image `head-raven-mouth-4`.
    static let headRavenMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-raven-mouth-4")
    /// Image `head-retainer-mouth-1`.
    static let headRetainerMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-retainer-mouth-1")
    /// Image `head-retainer-mouth-2`.
    static let headRetainerMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-retainer-mouth-2")
    /// Image `head-retainer-mouth-3`.
    static let headRetainerMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-retainer-mouth-3")
    /// Image `head-retainer-mouth-4`.
    static let headRetainerMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-retainer-mouth-4")
    /// Image `head-robot-mouth-1`.
    static let headRobotMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-robot-mouth-1")
    /// Image `head-robot-mouth-2`.
    static let headRobotMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-robot-mouth-2")
    /// Image `head-robot-mouth-3`.
    static let headRobotMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-robot-mouth-3")
    /// Image `head-robot-mouth-4`.
    static let headRobotMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-robot-mouth-4")
    /// Image `head-scorpion-mouth-1`.
    static let headScorpionMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-scorpion-mouth-1")
    /// Image `head-scorpion-mouth-2`.
    static let headScorpionMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-scorpion-mouth-2")
    /// Image `head-scorpion-mouth-3`.
    static let headScorpionMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-scorpion-mouth-3")
    /// Image `head-scorpion-mouth-4`.
    static let headScorpionMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-scorpion-mouth-4")
    /// Image `head-shark-mouth-1`.
    static let headSharkMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-shark-mouth-1")
    /// Image `head-shark-mouth-2`.
    static let headSharkMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-shark-mouth-2")
    /// Image `head-shark-mouth-3`.
    static let headSharkMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-shark-mouth-3")
    /// Image `head-shark-mouth-4`.
    static let headSharkMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-shark-mouth-4")
    /// Image `head-skeleton-hat-mouth-1`.
    static let headSkeletonHatMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-skeleton-hat-mouth-1")
    /// Image `head-skeleton-hat-mouth-2`.
    static let headSkeletonHatMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-skeleton-hat-mouth-2")
    /// Image `head-skeleton-hat-mouth-3`.
    static let headSkeletonHatMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-skeleton-hat-mouth-3")
    /// Image `head-skeleton-hat-mouth-4`.
    static let headSkeletonHatMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-skeleton-hat-mouth-4")
    /// Image `head-squid-mouth-1`.
    static let headSquidMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-squid-mouth-1")
    /// Image `head-squid-mouth-2`.
    static let headSquidMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-squid-mouth-2")
    /// Image `head-squid-mouth-3`.
    static let headSquidMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-squid-mouth-3")
    /// Image `head-squid-mouth-4`.
    static let headSquidMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-squid-mouth-4")
    /// Image `head-steak-mouth-1`.
    static let headSteakMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-steak-mouth-1")
    /// Image `head-steak-mouth-2`.
    static let headSteakMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-steak-mouth-2")
    /// Image `head-steak-mouth-3`.
    static let headSteakMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-steak-mouth-3")
    /// Image `head-steak-mouth-4`.
    static let headSteakMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-steak-mouth-4")
    /// Image `head-toiletpaper-full-mouth-1`.
    static let headToiletpaperFullMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-toiletpaper-full-mouth-1")
    /// Image `head-toiletpaper-full-mouth-2`.
    static let headToiletpaperFullMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-toiletpaper-full-mouth-2")
    /// Image `head-toiletpaper-full-mouth-3`.
    static let headToiletpaperFullMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-toiletpaper-full-mouth-3")
    /// Image `head-toiletpaper-full-mouth-4`.
    static let headToiletpaperFullMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-toiletpaper-full-mouth-4")
    /// Image `head-turing-mouth-1`.
    static let headTuringMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-turing-mouth-1")
    /// Image `head-turing-mouth-2`.
    static let headTuringMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-turing-mouth-2")
    /// Image `head-turing-mouth-3`.
    static let headTuringMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-turing-mouth-3")
    /// Image `head-turing-mouth-4`.
    static let headTuringMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-turing-mouth-4")
    /// Image `head-ufo-mouth-1`.
    static let headUfoMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-ufo-mouth-1")
    /// Image `head-ufo-mouth-2`.
    static let headUfoMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-ufo-mouth-2")
    /// Image `head-ufo-mouth-3`.
    static let headUfoMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-ufo-mouth-3")
    /// Image `head-ufo-mouth-4`.
    static let headUfoMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-ufo-mouth-4")
    /// Image `head-werewolf-mouth-1`.
    static let headWerewolfMouth1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-werewolf-mouth-1")
    /// Image `head-werewolf-mouth-2`.
    static let headWerewolfMouth2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-werewolf-mouth-2")
    /// Image `head-werewolf-mouth-3`.
    static let headWerewolfMouth3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-werewolf-mouth-3")
    /// Image `head-werewolf-mouth-4`.
    static let headWerewolfMouth4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "head-werewolf-mouth-4")
    /// Image `home-slice-chat`.
    static let homeSliceChat = Rswift.ImageResource(bundle: R.hostingBundle, name: "home-slice-chat")
    /// Image `noun-logo`.
    static let nounLogo = Rswift.ImageResource(bundle: R.hostingBundle, name: "noun-logo")
    /// Image `noun`.
    static let noun = Rswift.ImageResource(bundle: R.hostingBundle, name: "noun")
    /// Image `onboarding-create-background`.
    static let onboardingCreateBackground = Rswift.ImageResource(bundle: R.hostingBundle, name: "onboarding-create-background")
    /// Image `onboarding-explore-background`.
    static let onboardingExploreBackground = Rswift.ImageResource(bundle: R.hostingBundle, name: "onboarding-explore-background")
    /// Image `onboarding-noun-background`.
    static let onboardingNounBackground = Rswift.ImageResource(bundle: R.hostingBundle, name: "onboarding-noun-background")
    /// Image `onboarding-play-background`.
    static let onboardingPlayBackground = Rswift.ImageResource(bundle: R.hostingBundle, name: "onboarding-play-background")
    /// Image `pizza-noun`.
    static let pizzaNoun = Rswift.ImageResource(bundle: R.hostingBundle, name: "pizza-noun")
    /// Image `placeholder-ens`.
    static let placeholderEns = Rswift.ImageResource(bundle: R.hostingBundle, name: "placeholder-ens")
    /// Image `placeholder`.
    static let placeholder = Rswift.ImageResource(bundle: R.hostingBundle, name: "placeholder")
    /// Image `shadow`.
    static let shadow = Rswift.ImageResource(bundle: R.hostingBundle, name: "shadow")
    /// Image `shark-noun`.
    static let sharkNoun = Rswift.ImageResource(bundle: R.hostingBundle, name: "shark-noun")

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "AppIcon_Preview", bundle: ..., traitCollection: ...)`
    static func appIcon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.appIcon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "BonsaiNeon_Preview", bundle: ..., traitCollection: ...)`
    static func bonsaiNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.bonsaiNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Bonsai_Preview", bundle: ..., traitCollection: ...)`
    static func bonsai_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.bonsai_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "CannedHamNeon_Preview", bundle: ..., traitCollection: ...)`
    static func cannedHamNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.cannedHamNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "CannedHam_Preview", bundle: ..., traitCollection: ...)`
    static func cannedHam_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.cannedHam_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "ConeNeon_Preview", bundle: ..., traitCollection: ...)`
    static func coneNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.coneNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Cone_Preview", bundle: ..., traitCollection: ...)`
    static func cone_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.cone_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "CowNeon_Preview", bundle: ..., traitCollection: ...)`
    static func cowNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.cowNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Cow_Preview", bundle: ..., traitCollection: ...)`
    static func cow_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.cow_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "CrabNeon_Preview", bundle: ..., traitCollection: ...)`
    static func crabNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.crabNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Crab_Preview", bundle: ..., traitCollection: ...)`
    static func crab_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.crab_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "DNANeon_Preview", bundle: ..., traitCollection: ...)`
    static func dnaNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.dnaNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "DNA_Preview", bundle: ..., traitCollection: ...)`
    static func dna_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.dna_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "DictionaryNeon_Preview", bundle: ..., traitCollection: ...)`
    static func dictionaryNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.dictionaryNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Dictionary_Preview", bundle: ..., traitCollection: ...)`
    static func dictionary_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.dictionary_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "EarthNeon_Preview", bundle: ..., traitCollection: ...)`
    static func earthNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.earthNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Earth_Preview", bundle: ..., traitCollection: ...)`
    static func earth_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.earth_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "FanNeon_Preview", bundle: ..., traitCollection: ...)`
    static func fanNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.fanNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Fan_Preview", bundle: ..., traitCollection: ...)`
    static func fan_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.fan_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "FoxNeon_Preview", bundle: ..., traitCollection: ...)`
    static func foxNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.foxNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Fox_Preview", bundle: ..., traitCollection: ...)`
    static func fox_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.fox_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "GnomeNeon_Preview", bundle: ..., traitCollection: ...)`
    static func gnomeNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.gnomeNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Gnome_Preview", bundle: ..., traitCollection: ...)`
    static func gnome_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.gnome_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "HighHeelNeon_Preview", bundle: ..., traitCollection: ...)`
    static func highHeelNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.highHeelNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "HighHeel_Preview", bundle: ..., traitCollection: ...)`
    static func highHeel_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.highHeel_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "KetchupNeon_Preview", bundle: ..., traitCollection: ...)`
    static func ketchupNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ketchupNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Ketchup_Preview", bundle: ..., traitCollection: ...)`
    static func ketchup_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ketchup_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "LaptopNeon_Preview", bundle: ..., traitCollection: ...)`
    static func laptopNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.laptopNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Laptop_Preview", bundle: ..., traitCollection: ...)`
    static func laptop_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.laptop_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "MilkNeon_Preview", bundle: ..., traitCollection: ...)`
    static func milkNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.milkNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Milk_Preview", bundle: ..., traitCollection: ...)`
    static func milk_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.milk_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "NoodlesNeon_Preview", bundle: ..., traitCollection: ...)`
    static func noodlesNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.noodlesNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Noodles_Preview", bundle: ..., traitCollection: ...)`
    static func noodles_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.noodles_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "NounsWatermark", bundle: ..., traitCollection: ...)`
    static func nounsWatermark(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.nounsWatermark, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "RobotNeon_Preview", bundle: ..., traitCollection: ...)`
    static func robotNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.robotNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Robot_Preview", bundle: ..., traitCollection: ...)`
    static func robot_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.robot_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "SharkNeon_Preview", bundle: ..., traitCollection: ...)`
    static func sharkNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharkNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Shark_Preview", bundle: ..., traitCollection: ...)`
    static func shark_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.shark_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "StarsparklesNeon_Preview", bundle: ..., traitCollection: ...)`
    static func starsparklesNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.starsparklesNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Starsparkles_Preview", bundle: ..., traitCollection: ...)`
    static func starsparkles_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.starsparkles_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "TacoNeon_Preview", bundle: ..., traitCollection: ...)`
    static func tacoNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tacoNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Taco_Preview", bundle: ..., traitCollection: ...)`
    static func taco_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.taco_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "UFONeon_Preview", bundle: ..., traitCollection: ...)`
    static func ufoNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ufoNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "UFO_Preview", bundle: ..., traitCollection: ...)`
    static func ufo_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ufo_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "VoidNeon_Preview", bundle: ..., traitCollection: ...)`
    static func voidNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.voidNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Void_Preview", bundle: ..., traitCollection: ...)`
    static func void_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.void_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "VolcanoNeon_Preview", bundle: ..., traitCollection: ...)`
    static func volcanoNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.volcanoNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Volcano_Preview", bundle: ..., traitCollection: ...)`
    static func volcano_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.volcano_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "WaveNeon_Preview", bundle: ..., traitCollection: ...)`
    static func waveNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.waveNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Wave_Preview", bundle: ..., traitCollection: ...)`
    static func wave_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.wave_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "WeedNeon_Preview", bundle: ..., traitCollection: ...)`
    static func weedNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.weedNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "Weed_Preview", bundle: ..., traitCollection: ...)`
    static func weed_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.weed_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "WizardHatNeon_Preview", bundle: ..., traitCollection: ...)`
    static func wizardHatNeon_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.wizardHatNeon_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "WizardHat_Preview", bundle: ..., traitCollection: ...)`
    static func wizardHat_Preview(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.wizardHat_Preview, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "bell-noun", bundle: ..., traitCollection: ...)`
    static func bellNoun(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.bellNoun, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-1", bundle: ..., traitCollection: ...)`
    static func confetti1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-10", bundle: ..., traitCollection: ...)`
    static func confetti10(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti10, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-2", bundle: ..., traitCollection: ...)`
    static func confetti2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-3", bundle: ..., traitCollection: ...)`
    static func confetti3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-4", bundle: ..., traitCollection: ...)`
    static func confetti4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-5", bundle: ..., traitCollection: ...)`
    static func confetti5(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti5, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-6", bundle: ..., traitCollection: ...)`
    static func confetti6(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti6, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-7", bundle: ..., traitCollection: ...)`
    static func confetti7(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti7, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-8", bundle: ..., traitCollection: ...)`
    static func confetti8(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti8, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "confetti-9", bundle: ..., traitCollection: ...)`
    static func confetti9(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.confetti9, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "create-noun-pizza", bundle: ..., traitCollection: ...)`
    static func createNounPizza(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.createNounPizza, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "explore-onboarding", bundle: ..., traitCollection: ...)`
    static func exploreOnboarding(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.exploreOnboarding, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-blink_1", bundle: ..., traitCollection: ...)`
    static func eyesBlink_1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesBlink_1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-blink_2", bundle: ..., traitCollection: ...)`
    static func eyesBlink_2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesBlink_2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-blink_3", bundle: ..., traitCollection: ...)`
    static func eyesBlink_3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesBlink_3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-blink_4", bundle: ..., traitCollection: ...)`
    static func eyesBlink_4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesBlink_4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-blink_5", bundle: ..., traitCollection: ...)`
    static func eyesBlink_5(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesBlink_5, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-shift_0", bundle: ..., traitCollection: ...)`
    static func eyesShift_0(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesShift_0, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-shift_1", bundle: ..., traitCollection: ...)`
    static func eyesShift_1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesShift_1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-shift_2", bundle: ..., traitCollection: ...)`
    static func eyesShift_2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesShift_2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-shift_3", bundle: ..., traitCollection: ...)`
    static func eyesShift_3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesShift_3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-shift_4", bundle: ..., traitCollection: ...)`
    static func eyesShift_4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesShift_4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-shift_5", bundle: ..., traitCollection: ...)`
    static func eyesShift_5(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesShift_5, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "eyes-shift_6", bundle: ..., traitCollection: ...)`
    static func eyesShift_6(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.eyesShift_6, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-ape-mouth-1", bundle: ..., traitCollection: ...)`
    static func headApeMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headApeMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-ape-mouth-2", bundle: ..., traitCollection: ...)`
    static func headApeMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headApeMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-ape-mouth-3", bundle: ..., traitCollection: ...)`
    static func headApeMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headApeMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-ape-mouth-4", bundle: ..., traitCollection: ...)`
    static func headApeMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headApeMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-baseball-gameball-mouth-1", bundle: ..., traitCollection: ...)`
    static func headBaseballGameballMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBaseballGameballMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-baseball-gameball-mouth-2", bundle: ..., traitCollection: ...)`
    static func headBaseballGameballMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBaseballGameballMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-baseball-gameball-mouth-3", bundle: ..., traitCollection: ...)`
    static func headBaseballGameballMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBaseballGameballMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-baseball-gameball-mouth-4", bundle: ..., traitCollection: ...)`
    static func headBaseballGameballMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBaseballGameballMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-basketball-mouth-1", bundle: ..., traitCollection: ...)`
    static func headBasketballMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBasketballMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-basketball-mouth-2", bundle: ..., traitCollection: ...)`
    static func headBasketballMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBasketballMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-basketball-mouth-3", bundle: ..., traitCollection: ...)`
    static func headBasketballMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBasketballMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-basketball-mouth-4", bundle: ..., traitCollection: ...)`
    static func headBasketballMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBasketballMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-bat-mouth-1", bundle: ..., traitCollection: ...)`
    static func headBatMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBatMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-bat-mouth-2", bundle: ..., traitCollection: ...)`
    static func headBatMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBatMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-bat-mouth-3", bundle: ..., traitCollection: ...)`
    static func headBatMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBatMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-bat-mouth-4", bundle: ..., traitCollection: ...)`
    static func headBatMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBatMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-bear-mouth-1", bundle: ..., traitCollection: ...)`
    static func headBearMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBearMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-bear-mouth-2", bundle: ..., traitCollection: ...)`
    static func headBearMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBearMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-bear-mouth-3", bundle: ..., traitCollection: ...)`
    static func headBearMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBearMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-bear-mouth-4", bundle: ..., traitCollection: ...)`
    static func headBearMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBearMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-blueberry-mouth-1", bundle: ..., traitCollection: ...)`
    static func headBlueberryMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBlueberryMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-blueberry-mouth-2", bundle: ..., traitCollection: ...)`
    static func headBlueberryMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBlueberryMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-blueberry-mouth-3", bundle: ..., traitCollection: ...)`
    static func headBlueberryMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBlueberryMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-blueberry-mouth-4", bundle: ..., traitCollection: ...)`
    static func headBlueberryMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headBlueberryMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cannedham-mouth-1", bundle: ..., traitCollection: ...)`
    static func headCannedhamMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCannedhamMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cannedham-mouth-2", bundle: ..., traitCollection: ...)`
    static func headCannedhamMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCannedhamMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cannedham-mouth-3", bundle: ..., traitCollection: ...)`
    static func headCannedhamMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCannedhamMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cannedham-mouth-4", bundle: ..., traitCollection: ...)`
    static func headCannedhamMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCannedhamMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cash-register-mouth-1", bundle: ..., traitCollection: ...)`
    static func headCashRegisterMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCashRegisterMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cash-register-mouth-2", bundle: ..., traitCollection: ...)`
    static func headCashRegisterMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCashRegisterMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cash-register-mouth-3", bundle: ..., traitCollection: ...)`
    static func headCashRegisterMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCashRegisterMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cash-register-mouth-4", bundle: ..., traitCollection: ...)`
    static func headCashRegisterMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCashRegisterMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chainsaw-mouth-1", bundle: ..., traitCollection: ...)`
    static func headChainsawMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChainsawMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chainsaw-mouth-2", bundle: ..., traitCollection: ...)`
    static func headChainsawMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChainsawMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chainsaw-mouth-3", bundle: ..., traitCollection: ...)`
    static func headChainsawMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChainsawMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chainsaw-mouth-4", bundle: ..., traitCollection: ...)`
    static func headChainsawMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChainsawMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chameleon-mouth-1", bundle: ..., traitCollection: ...)`
    static func headChameleonMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChameleonMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chameleon-mouth-2", bundle: ..., traitCollection: ...)`
    static func headChameleonMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChameleonMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chameleon-mouth-3", bundle: ..., traitCollection: ...)`
    static func headChameleonMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChameleonMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chameleon-mouth-4", bundle: ..., traitCollection: ...)`
    static func headChameleonMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChameleonMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chicken-mouth-1", bundle: ..., traitCollection: ...)`
    static func headChickenMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChickenMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chicken-mouth-2", bundle: ..., traitCollection: ...)`
    static func headChickenMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChickenMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chicken-mouth-3", bundle: ..., traitCollection: ...)`
    static func headChickenMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChickenMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chicken-mouth-4", bundle: ..., traitCollection: ...)`
    static func headChickenMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChickenMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chipboard-mouth-1", bundle: ..., traitCollection: ...)`
    static func headChipboardMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChipboardMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chipboard-mouth-2", bundle: ..., traitCollection: ...)`
    static func headChipboardMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChipboardMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chipboard-mouth-3", bundle: ..., traitCollection: ...)`
    static func headChipboardMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChipboardMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-chipboard-mouth-4", bundle: ..., traitCollection: ...)`
    static func headChipboardMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headChipboardMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-clutch-mouth-1", bundle: ..., traitCollection: ...)`
    static func headClutchMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headClutchMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-clutch-mouth-2", bundle: ..., traitCollection: ...)`
    static func headClutchMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headClutchMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-clutch-mouth-3", bundle: ..., traitCollection: ...)`
    static func headClutchMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headClutchMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-clutch-mouth-4", bundle: ..., traitCollection: ...)`
    static func headClutchMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headClutchMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cow-mouth-1", bundle: ..., traitCollection: ...)`
    static func headCowMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCowMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cow-mouth-2", bundle: ..., traitCollection: ...)`
    static func headCowMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCowMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cow-mouth-3", bundle: ..., traitCollection: ...)`
    static func headCowMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCowMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-cow-mouth-4", bundle: ..., traitCollection: ...)`
    static func headCowMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCowMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-croc-hat-mouth-1", bundle: ..., traitCollection: ...)`
    static func headCrocHatMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCrocHatMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-croc-hat-mouth-2", bundle: ..., traitCollection: ...)`
    static func headCrocHatMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCrocHatMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-croc-hat-mouth-3", bundle: ..., traitCollection: ...)`
    static func headCrocHatMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCrocHatMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-croc-hat-mouth-4", bundle: ..., traitCollection: ...)`
    static func headCrocHatMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headCrocHatMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-default-mouth-1", bundle: ..., traitCollection: ...)`
    static func headDefaultMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDefaultMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-default-mouth-2", bundle: ..., traitCollection: ...)`
    static func headDefaultMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDefaultMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-default-mouth-3", bundle: ..., traitCollection: ...)`
    static func headDefaultMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDefaultMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-default-mouth-4", bundle: ..., traitCollection: ...)`
    static func headDefaultMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDefaultMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-dino-mouth-1", bundle: ..., traitCollection: ...)`
    static func headDinoMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDinoMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-dino-mouth-2", bundle: ..., traitCollection: ...)`
    static func headDinoMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDinoMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-dino-mouth-3", bundle: ..., traitCollection: ...)`
    static func headDinoMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDinoMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-dino-mouth-4", bundle: ..., traitCollection: ...)`
    static func headDinoMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDinoMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-dog-mouth-1", bundle: ..., traitCollection: ...)`
    static func headDogMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDogMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-dog-mouth-2", bundle: ..., traitCollection: ...)`
    static func headDogMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDogMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-dog-mouth-3", bundle: ..., traitCollection: ...)`
    static func headDogMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDogMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-dog-mouth-4", bundle: ..., traitCollection: ...)`
    static func headDogMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDogMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-drill-mouth-1", bundle: ..., traitCollection: ...)`
    static func headDrillMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDrillMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-drill-mouth-2", bundle: ..., traitCollection: ...)`
    static func headDrillMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDrillMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-drill-mouth-3", bundle: ..., traitCollection: ...)`
    static func headDrillMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDrillMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-drill-mouth-4", bundle: ..., traitCollection: ...)`
    static func headDrillMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDrillMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-duck-mouth-1", bundle: ..., traitCollection: ...)`
    static func headDuckMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDuckMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-duck-mouth-2", bundle: ..., traitCollection: ...)`
    static func headDuckMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDuckMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-duck-mouth-3", bundle: ..., traitCollection: ...)`
    static func headDuckMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDuckMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-duck-mouth-4", bundle: ..., traitCollection: ...)`
    static func headDuckMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headDuckMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-factory-dark-mouth-1", bundle: ..., traitCollection: ...)`
    static func headFactoryDarkMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headFactoryDarkMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-factory-dark-mouth-2", bundle: ..., traitCollection: ...)`
    static func headFactoryDarkMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headFactoryDarkMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-factory-dark-mouth-3", bundle: ..., traitCollection: ...)`
    static func headFactoryDarkMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headFactoryDarkMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-factory-dark-mouth-4", bundle: ..., traitCollection: ...)`
    static func headFactoryDarkMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headFactoryDarkMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-frog-mouth-1", bundle: ..., traitCollection: ...)`
    static func headFrogMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headFrogMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-frog-mouth-2", bundle: ..., traitCollection: ...)`
    static func headFrogMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headFrogMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-frog-mouth-3", bundle: ..., traitCollection: ...)`
    static func headFrogMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headFrogMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-frog-mouth-4", bundle: ..., traitCollection: ...)`
    static func headFrogMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headFrogMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-gnome-mouth-1", bundle: ..., traitCollection: ...)`
    static func headGnomeMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGnomeMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-gnome-mouth-2", bundle: ..., traitCollection: ...)`
    static func headGnomeMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGnomeMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-gnome-mouth-3", bundle: ..., traitCollection: ...)`
    static func headGnomeMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGnomeMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-gnome-mouth-4", bundle: ..., traitCollection: ...)`
    static func headGnomeMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGnomeMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-goat-mouth-1", bundle: ..., traitCollection: ...)`
    static func headGoatMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGoatMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-goat-mouth-2", bundle: ..., traitCollection: ...)`
    static func headGoatMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGoatMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-goat-mouth-3", bundle: ..., traitCollection: ...)`
    static func headGoatMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGoatMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-goat-mouth-4", bundle: ..., traitCollection: ...)`
    static func headGoatMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGoatMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-goldfish-mouth-1", bundle: ..., traitCollection: ...)`
    static func headGoldfishMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGoldfishMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-goldfish-mouth-2", bundle: ..., traitCollection: ...)`
    static func headGoldfishMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGoldfishMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-goldfish-mouth-3", bundle: ..., traitCollection: ...)`
    static func headGoldfishMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGoldfishMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-goldfish-mouth-4", bundle: ..., traitCollection: ...)`
    static func headGoldfishMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headGoldfishMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-hardhat-mouth-1", bundle: ..., traitCollection: ...)`
    static func headHardhatMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headHardhatMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-hardhat-mouth-2", bundle: ..., traitCollection: ...)`
    static func headHardhatMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headHardhatMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-hardhat-mouth-3", bundle: ..., traitCollection: ...)`
    static func headHardhatMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headHardhatMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-hardhat-mouth-4", bundle: ..., traitCollection: ...)`
    static func headHardhatMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headHardhatMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-horse-deepfried-mouth-1", bundle: ..., traitCollection: ...)`
    static func headHorseDeepfriedMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headHorseDeepfriedMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-horse-deepfried-mouth-2", bundle: ..., traitCollection: ...)`
    static func headHorseDeepfriedMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headHorseDeepfriedMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-horse-deepfried-mouth-3", bundle: ..., traitCollection: ...)`
    static func headHorseDeepfriedMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headHorseDeepfriedMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-horse-deepfried-mouth-4", bundle: ..., traitCollection: ...)`
    static func headHorseDeepfriedMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headHorseDeepfriedMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-jupiter-mouth-1", bundle: ..., traitCollection: ...)`
    static func headJupiterMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headJupiterMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-jupiter-mouth-2", bundle: ..., traitCollection: ...)`
    static func headJupiterMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headJupiterMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-jupiter-mouth-3", bundle: ..., traitCollection: ...)`
    static func headJupiterMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headJupiterMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-jupiter-mouth-4", bundle: ..., traitCollection: ...)`
    static func headJupiterMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headJupiterMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-laptop-mouth-1", bundle: ..., traitCollection: ...)`
    static func headLaptopMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headLaptopMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-laptop-mouth-2", bundle: ..., traitCollection: ...)`
    static func headLaptopMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headLaptopMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-laptop-mouth-3", bundle: ..., traitCollection: ...)`
    static func headLaptopMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headLaptopMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-laptop-mouth-4", bundle: ..., traitCollection: ...)`
    static func headLaptopMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headLaptopMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-moose-mouth-1", bundle: ..., traitCollection: ...)`
    static func headMooseMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headMooseMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-moose-mouth-2", bundle: ..., traitCollection: ...)`
    static func headMooseMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headMooseMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-moose-mouth-3", bundle: ..., traitCollection: ...)`
    static func headMooseMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headMooseMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-moose-mouth-4", bundle: ..., traitCollection: ...)`
    static func headMooseMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headMooseMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-mushroom-mouth-1", bundle: ..., traitCollection: ...)`
    static func headMushroomMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headMushroomMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-mushroom-mouth-2", bundle: ..., traitCollection: ...)`
    static func headMushroomMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headMushroomMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-mushroom-mouth-3", bundle: ..., traitCollection: ...)`
    static func headMushroomMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headMushroomMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-mushroom-mouth-4", bundle: ..., traitCollection: ...)`
    static func headMushroomMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headMushroomMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-orangutan-mouth-1", bundle: ..., traitCollection: ...)`
    static func headOrangutanMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headOrangutanMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-orangutan-mouth-2", bundle: ..., traitCollection: ...)`
    static func headOrangutanMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headOrangutanMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-orangutan-mouth-3", bundle: ..., traitCollection: ...)`
    static func headOrangutanMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headOrangutanMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-orangutan-mouth-4", bundle: ..., traitCollection: ...)`
    static func headOrangutanMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headOrangutanMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-peyote-mouth-1", bundle: ..., traitCollection: ...)`
    static func headPeyoteMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPeyoteMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-peyote-mouth-2", bundle: ..., traitCollection: ...)`
    static func headPeyoteMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPeyoteMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-peyote-mouth-3", bundle: ..., traitCollection: ...)`
    static func headPeyoteMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPeyoteMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-peyote-mouth-4", bundle: ..., traitCollection: ...)`
    static func headPeyoteMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPeyoteMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-piano-mouth-1", bundle: ..., traitCollection: ...)`
    static func headPianoMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPianoMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-piano-mouth-2", bundle: ..., traitCollection: ...)`
    static func headPianoMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPianoMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-piano-mouth-3", bundle: ..., traitCollection: ...)`
    static func headPianoMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPianoMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-piano-mouth-4", bundle: ..., traitCollection: ...)`
    static func headPianoMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPianoMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pineapple-mouth-1", bundle: ..., traitCollection: ...)`
    static func headPineappleMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPineappleMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pineapple-mouth-2", bundle: ..., traitCollection: ...)`
    static func headPineappleMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPineappleMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pineapple-mouth-3", bundle: ..., traitCollection: ...)`
    static func headPineappleMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPineappleMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pineapple-mouth-4", bundle: ..., traitCollection: ...)`
    static func headPineappleMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPineappleMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pipe-mouth-1", bundle: ..., traitCollection: ...)`
    static func headPipeMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPipeMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pipe-mouth-2", bundle: ..., traitCollection: ...)`
    static func headPipeMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPipeMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pipe-mouth-3", bundle: ..., traitCollection: ...)`
    static func headPipeMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPipeMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pipe-mouth-4", bundle: ..., traitCollection: ...)`
    static func headPipeMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPipeMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pirateship-mouth-1", bundle: ..., traitCollection: ...)`
    static func headPirateshipMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPirateshipMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pirateship-mouth-2", bundle: ..., traitCollection: ...)`
    static func headPirateshipMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPirateshipMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pirateship-mouth-3", bundle: ..., traitCollection: ...)`
    static func headPirateshipMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPirateshipMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pirateship-mouth-4", bundle: ..., traitCollection: ...)`
    static func headPirateshipMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPirateshipMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pufferfish-mouth-1", bundle: ..., traitCollection: ...)`
    static func headPufferfishMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPufferfishMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pufferfish-mouth-2", bundle: ..., traitCollection: ...)`
    static func headPufferfishMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPufferfishMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pufferfish-mouth-3", bundle: ..., traitCollection: ...)`
    static func headPufferfishMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPufferfishMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pufferfish-mouth-4", bundle: ..., traitCollection: ...)`
    static func headPufferfishMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPufferfishMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pumpkin-mouth-1", bundle: ..., traitCollection: ...)`
    static func headPumpkinMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPumpkinMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pumpkin-mouth-2", bundle: ..., traitCollection: ...)`
    static func headPumpkinMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPumpkinMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pumpkin-mouth-3", bundle: ..., traitCollection: ...)`
    static func headPumpkinMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPumpkinMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-pumpkin-mouth-4", bundle: ..., traitCollection: ...)`
    static func headPumpkinMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headPumpkinMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-rabbit-mouth-1", bundle: ..., traitCollection: ...)`
    static func headRabbitMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRabbitMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-rabbit-mouth-2", bundle: ..., traitCollection: ...)`
    static func headRabbitMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRabbitMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-rabbit-mouth-3", bundle: ..., traitCollection: ...)`
    static func headRabbitMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRabbitMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-rabbit-mouth-4", bundle: ..., traitCollection: ...)`
    static func headRabbitMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRabbitMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-raven-mouth-1", bundle: ..., traitCollection: ...)`
    static func headRavenMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRavenMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-raven-mouth-2", bundle: ..., traitCollection: ...)`
    static func headRavenMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRavenMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-raven-mouth-3", bundle: ..., traitCollection: ...)`
    static func headRavenMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRavenMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-raven-mouth-4", bundle: ..., traitCollection: ...)`
    static func headRavenMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRavenMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-retainer-mouth-1", bundle: ..., traitCollection: ...)`
    static func headRetainerMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRetainerMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-retainer-mouth-2", bundle: ..., traitCollection: ...)`
    static func headRetainerMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRetainerMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-retainer-mouth-3", bundle: ..., traitCollection: ...)`
    static func headRetainerMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRetainerMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-retainer-mouth-4", bundle: ..., traitCollection: ...)`
    static func headRetainerMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRetainerMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-robot-mouth-1", bundle: ..., traitCollection: ...)`
    static func headRobotMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRobotMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-robot-mouth-2", bundle: ..., traitCollection: ...)`
    static func headRobotMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRobotMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-robot-mouth-3", bundle: ..., traitCollection: ...)`
    static func headRobotMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRobotMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-robot-mouth-4", bundle: ..., traitCollection: ...)`
    static func headRobotMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headRobotMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-scorpion-mouth-1", bundle: ..., traitCollection: ...)`
    static func headScorpionMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headScorpionMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-scorpion-mouth-2", bundle: ..., traitCollection: ...)`
    static func headScorpionMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headScorpionMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-scorpion-mouth-3", bundle: ..., traitCollection: ...)`
    static func headScorpionMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headScorpionMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-scorpion-mouth-4", bundle: ..., traitCollection: ...)`
    static func headScorpionMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headScorpionMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-shark-mouth-1", bundle: ..., traitCollection: ...)`
    static func headSharkMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSharkMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-shark-mouth-2", bundle: ..., traitCollection: ...)`
    static func headSharkMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSharkMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-shark-mouth-3", bundle: ..., traitCollection: ...)`
    static func headSharkMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSharkMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-shark-mouth-4", bundle: ..., traitCollection: ...)`
    static func headSharkMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSharkMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-skeleton-hat-mouth-1", bundle: ..., traitCollection: ...)`
    static func headSkeletonHatMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSkeletonHatMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-skeleton-hat-mouth-2", bundle: ..., traitCollection: ...)`
    static func headSkeletonHatMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSkeletonHatMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-skeleton-hat-mouth-3", bundle: ..., traitCollection: ...)`
    static func headSkeletonHatMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSkeletonHatMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-skeleton-hat-mouth-4", bundle: ..., traitCollection: ...)`
    static func headSkeletonHatMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSkeletonHatMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-squid-mouth-1", bundle: ..., traitCollection: ...)`
    static func headSquidMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSquidMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-squid-mouth-2", bundle: ..., traitCollection: ...)`
    static func headSquidMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSquidMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-squid-mouth-3", bundle: ..., traitCollection: ...)`
    static func headSquidMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSquidMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-squid-mouth-4", bundle: ..., traitCollection: ...)`
    static func headSquidMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSquidMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-steak-mouth-1", bundle: ..., traitCollection: ...)`
    static func headSteakMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSteakMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-steak-mouth-2", bundle: ..., traitCollection: ...)`
    static func headSteakMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSteakMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-steak-mouth-3", bundle: ..., traitCollection: ...)`
    static func headSteakMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSteakMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-steak-mouth-4", bundle: ..., traitCollection: ...)`
    static func headSteakMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headSteakMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-toiletpaper-full-mouth-1", bundle: ..., traitCollection: ...)`
    static func headToiletpaperFullMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headToiletpaperFullMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-toiletpaper-full-mouth-2", bundle: ..., traitCollection: ...)`
    static func headToiletpaperFullMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headToiletpaperFullMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-toiletpaper-full-mouth-3", bundle: ..., traitCollection: ...)`
    static func headToiletpaperFullMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headToiletpaperFullMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-toiletpaper-full-mouth-4", bundle: ..., traitCollection: ...)`
    static func headToiletpaperFullMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headToiletpaperFullMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-turing-mouth-1", bundle: ..., traitCollection: ...)`
    static func headTuringMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headTuringMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-turing-mouth-2", bundle: ..., traitCollection: ...)`
    static func headTuringMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headTuringMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-turing-mouth-3", bundle: ..., traitCollection: ...)`
    static func headTuringMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headTuringMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-turing-mouth-4", bundle: ..., traitCollection: ...)`
    static func headTuringMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headTuringMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-ufo-mouth-1", bundle: ..., traitCollection: ...)`
    static func headUfoMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headUfoMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-ufo-mouth-2", bundle: ..., traitCollection: ...)`
    static func headUfoMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headUfoMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-ufo-mouth-3", bundle: ..., traitCollection: ...)`
    static func headUfoMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headUfoMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-ufo-mouth-4", bundle: ..., traitCollection: ...)`
    static func headUfoMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headUfoMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-werewolf-mouth-1", bundle: ..., traitCollection: ...)`
    static func headWerewolfMouth1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headWerewolfMouth1, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-werewolf-mouth-2", bundle: ..., traitCollection: ...)`
    static func headWerewolfMouth2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headWerewolfMouth2, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-werewolf-mouth-3", bundle: ..., traitCollection: ...)`
    static func headWerewolfMouth3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headWerewolfMouth3, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "head-werewolf-mouth-4", bundle: ..., traitCollection: ...)`
    static func headWerewolfMouth4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.headWerewolfMouth4, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "home-slice-chat", bundle: ..., traitCollection: ...)`
    static func homeSliceChat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.homeSliceChat, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "noun", bundle: ..., traitCollection: ...)`
    static func noun(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.noun, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "noun-logo", bundle: ..., traitCollection: ...)`
    static func nounLogo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.nounLogo, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "onboarding-create-background", bundle: ..., traitCollection: ...)`
    static func onboardingCreateBackground(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.onboardingCreateBackground, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "onboarding-explore-background", bundle: ..., traitCollection: ...)`
    static func onboardingExploreBackground(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.onboardingExploreBackground, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "onboarding-noun-background", bundle: ..., traitCollection: ...)`
    static func onboardingNounBackground(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.onboardingNounBackground, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "onboarding-play-background", bundle: ..., traitCollection: ...)`
    static func onboardingPlayBackground(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.onboardingPlayBackground, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "pizza-noun", bundle: ..., traitCollection: ...)`
    static func pizzaNoun(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.pizzaNoun, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "placeholder", bundle: ..., traitCollection: ...)`
    static func placeholder(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.placeholder, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "placeholder-ens", bundle: ..., traitCollection: ...)`
    static func placeholderEns(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.placeholderEns, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "shadow", bundle: ..., traitCollection: ...)`
    static func shadow(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.shadow, compatibleWith: traitCollection)
    }
    #endif

    #if os(iOS) || os(tvOS)
    /// `UIImage(named: "shark-noun", bundle: ..., traitCollection: ...)`
    static func sharkNoun(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.sharkNoun, compatibleWith: traitCollection)
    }
    #endif

    /// This `R.image.headsLessMouth` struct is generated, and contains static references to 234 images.
    struct headsLessMouth {
      /// Image `head-aardvark`.
      static let headAardvark = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-aardvark")
      /// Image `head-abstract`.
      static let headAbstract = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-abstract")
      /// Image `head-ape`.
      static let headApe = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-ape")
      /// Image `head-bag`.
      static let headBag = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bag")
      /// Image `head-bagpipe`.
      static let headBagpipe = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bagpipe")
      /// Image `head-banana`.
      static let headBanana = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-banana")
      /// Image `head-bank`.
      static let headBank = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bank")
      /// Image `head-baseball-gameball`.
      static let headBaseballGameball = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-baseball-gameball")
      /// Image `head-basketball`.
      static let headBasketball = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-basketball")
      /// Image `head-bat`.
      static let headBat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bat")
      /// Image `head-bear`.
      static let headBear = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bear")
      /// Image `head-beer`.
      static let headBeer = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-beer")
      /// Image `head-beet`.
      static let headBeet = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-beet")
      /// Image `head-bell`.
      static let headBell = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bell")
      /// Image `head-bigfoot-yeti`.
      static let headBigfootYeti = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bigfoot-yeti")
      /// Image `head-bigfoot`.
      static let headBigfoot = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bigfoot")
      /// Image `head-blackhole`.
      static let headBlackhole = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-blackhole")
      /// Image `head-blueberry`.
      static let headBlueberry = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-blueberry")
      /// Image `head-bomb`.
      static let headBomb = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bomb")
      /// Image `head-bonsai`.
      static let headBonsai = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bonsai")
      /// Image `head-boombox`.
      static let headBoombox = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-boombox")
      /// Image `head-boot`.
      static let headBoot = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-boot")
      /// Image `head-box`.
      static let headBox = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-box")
      /// Image `head-boxingglove`.
      static let headBoxingglove = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-boxingglove")
      /// Image `head-brain`.
      static let headBrain = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-brain")
      /// Image `head-bubble-speech`.
      static let headBubbleSpeech = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bubble-speech")
      /// Image `head-bubblegum`.
      static let headBubblegum = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-bubblegum")
      /// Image `head-burger-dollarmenu`.
      static let headBurgerDollarmenu = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-burger-dollarmenu")
      /// Image `head-cake`.
      static let headCake = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cake")
      /// Image `head-calculator`.
      static let headCalculator = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-calculator")
      /// Image `head-calendar`.
      static let headCalendar = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-calendar")
      /// Image `head-camcorder`.
      static let headCamcorder = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-camcorder")
      /// Image `head-cannedham`.
      static let headCannedham = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cannedham")
      /// Image `head-car`.
      static let headCar = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-car")
      /// Image `head-cash-register`.
      static let headCashRegister = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cash-register")
      /// Image `head-cassettetape`.
      static let headCassettetape = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cassettetape")
      /// Image `head-cat`.
      static let headCat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cat")
      /// Image `head-cd`.
      static let headCd = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cd")
      /// Image `head-chain`.
      static let headChain = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chain")
      /// Image `head-chainsaw`.
      static let headChainsaw = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chainsaw")
      /// Image `head-chameleon`.
      static let headChameleon = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chameleon")
      /// Image `head-chart-bars`.
      static let headChartBars = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chart-bars")
      /// Image `head-cheese`.
      static let headCheese = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cheese")
      /// Image `head-chefhat`.
      static let headChefhat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chefhat")
      /// Image `head-cherry`.
      static let headCherry = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cherry")
      /// Image `head-chicken`.
      static let headChicken = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chicken")
      /// Image `head-chilli`.
      static let headChilli = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chilli")
      /// Image `head-chipboard`.
      static let headChipboard = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chipboard")
      /// Image `head-chips`.
      static let headChips = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chips")
      /// Image `head-chocolate`.
      static let headChocolate = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-chocolate")
      /// Image `head-cloud`.
      static let headCloud = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cloud")
      /// Image `head-clover`.
      static let headClover = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-clover")
      /// Image `head-clutch`.
      static let headClutch = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-clutch")
      /// Image `head-coffeebean`.
      static let headCoffeebean = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-coffeebean")
      /// Image `head-cone`.
      static let headCone = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cone")
      /// Image `head-console-handheld`.
      static let headConsoleHandheld = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-console-handheld")
      /// Image `head-cookie`.
      static let headCookie = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cookie")
      /// Image `head-cordlessphone`.
      static let headCordlessphone = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cordlessphone")
      /// Image `head-cottonball`.
      static let headCottonball = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cottonball")
      /// Image `head-cow`.
      static let headCow = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-cow")
      /// Image `head-crab`.
      static let headCrab = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-crab")
      /// Image `head-crane`.
      static let headCrane = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-crane")
      /// Image `head-croc-hat`.
      static let headCrocHat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-croc-hat")
      /// Image `head-crown`.
      static let headCrown = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-crown")
      /// Image `head-crt-bsod`.
      static let headCrtBsod = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-crt-bsod")
      /// Image `head-crystalball`.
      static let headCrystalball = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-crystalball")
      /// Image `head-diamond-blue`.
      static let headDiamondBlue = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-diamond-blue")
      /// Image `head-diamond-red`.
      static let headDiamondRed = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-diamond-red")
      /// Image `head-dictionary`.
      static let headDictionary = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-dictionary")
      /// Image `head-dino`.
      static let headDino = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-dino")
      /// Image `head-dna`.
      static let headDna = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-dna")
      /// Image `head-dog`.
      static let headDog = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-dog")
      /// Image `head-doughnut`.
      static let headDoughnut = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-doughnut")
      /// Image `head-drill`.
      static let headDrill = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-drill")
      /// Image `head-duck`.
      static let headDuck = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-duck")
      /// Image `head-ducky`.
      static let headDucky = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-ducky")
      /// Image `head-earth`.
      static let headEarth = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-earth")
      /// Image `head-egg`.
      static let headEgg = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-egg")
      /// Image `head-faberge`.
      static let headFaberge = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-faberge")
      /// Image `head-factory-dark`.
      static let headFactoryDark = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-factory-dark")
      /// Image `head-fan`.
      static let headFan = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-fan")
      /// Image `head-fence`.
      static let headFence = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-fence")
      /// Image `head-film-35mm`.
      static let headFilm35mm = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-film-35mm")
      /// Image `head-film-strip`.
      static let headFilmStrip = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-film-strip")
      /// Image `head-fir`.
      static let headFir = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-fir")
      /// Image `head-firehydrant`.
      static let headFirehydrant = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-firehydrant")
      /// Image `head-flamingo`.
      static let headFlamingo = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-flamingo")
      /// Image `head-flower`.
      static let headFlower = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-flower")
      /// Image `head-fox`.
      static let headFox = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-fox")
      /// Image `head-frog`.
      static let headFrog = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-frog")
      /// Image `head-garlic`.
      static let headGarlic = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-garlic")
      /// Image `head-gavel`.
      static let headGavel = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-gavel")
      /// Image `head-ghost-B`.
      static let headGhostB = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-ghost-B")
      /// Image `head-glasses-big`.
      static let headGlassesBig = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-glasses-big")
      /// Image `head-gnome`.
      static let headGnome = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-gnome")
      /// Image `head-goat`.
      static let headGoat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-goat")
      /// Image `head-goldcoin`.
      static let headGoldcoin = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-goldcoin")
      /// Image `head-goldfish`.
      static let headGoldfish = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-goldfish")
      /// Image `head-grouper`.
      static let headGrouper = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-grouper")
      /// Image `head-hair`.
      static let headHair = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-hair")
      /// Image `head-hardhat`.
      static let headHardhat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-hardhat")
      /// Image `head-heart`.
      static let headHeart = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-heart")
      /// Image `head-helicopter`.
      static let headHelicopter = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-helicopter")
      /// Image `head-highheel`.
      static let headHighheel = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-highheel")
      /// Image `head-hockeypuck`.
      static let headHockeypuck = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-hockeypuck")
      /// Image `head-horse-deepfried`.
      static let headHorseDeepfried = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-horse-deepfried")
      /// Image `head-hotdog`.
      static let headHotdog = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-hotdog")
      /// Image `head-house`.
      static let headHouse = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-house")
      /// Image `head-icepop-b`.
      static let headIcepopB = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-icepop-b")
      /// Image `head-igloo`.
      static let headIgloo = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-igloo")
      /// Image `head-island`.
      static let headIsland = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-island")
      /// Image `head-jellyfish`.
      static let headJellyfish = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-jellyfish")
      /// Image `head-jupiter`.
      static let headJupiter = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-jupiter")
      /// Image `head-kangaroo`.
      static let headKangaroo = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-kangaroo")
      /// Image `head-ketchup`.
      static let headKetchup = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-ketchup")
      /// Image `head-laptop`.
      static let headLaptop = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-laptop")
      /// Image `head-lightning-bolt`.
      static let headLightningBolt = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-lightning-bolt")
      /// Image `head-lint`.
      static let headLint = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-lint")
      /// Image `head-lips`.
      static let headLips = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-lips")
      /// Image `head-lipstick2`.
      static let headLipstick2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-lipstick2")
      /// Image `head-lock`.
      static let headLock = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-lock")
      /// Image `head-macaroni`.
      static let headMacaroni = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-macaroni")
      /// Image `head-mailbox`.
      static let headMailbox = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mailbox")
      /// Image `head-maze`.
      static let headMaze = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-maze")
      /// Image `head-microwave`.
      static let headMicrowave = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-microwave")
      /// Image `head-milk`.
      static let headMilk = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-milk")
      /// Image `head-mirror`.
      static let headMirror = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mirror")
      /// Image `head-mixer`.
      static let headMixer = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mixer")
      /// Image `head-moon`.
      static let headMoon = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-moon")
      /// Image `head-moose`.
      static let headMoose = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-moose")
      /// Image `head-mosquito`.
      static let headMosquito = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mosquito")
      /// Image `head-mountain-snowcap`.
      static let headMountainSnowcap = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mountain-snowcap")
      /// Image `head-mouse`.
      static let headMouse = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mouse")
      /// Image `head-mug`.
      static let headMug = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mug")
      /// Image `head-mushroom`.
      static let headMushroom = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mushroom")
      /// Image `head-mustard`.
      static let headMustard = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-mustard")
      /// Image `head-nigiri`.
      static let headNigiri = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-nigiri")
      /// Image `head-noodles`.
      static let headNoodles = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-noodles")
      /// Image `head-onion`.
      static let headOnion = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-onion")
      /// Image `head-orangutan`.
      static let headOrangutan = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-orangutan")
      /// Image `head-orca`.
      static let headOrca = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-orca")
      /// Image `head-otter`.
      static let headOtter = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-otter")
      /// Image `head-outlet`.
      static let headOutlet = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-outlet")
      /// Image `head-owl`.
      static let headOwl = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-owl")
      /// Image `head-oyster`.
      static let headOyster = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-oyster")
      /// Image `head-paintbrush`.
      static let headPaintbrush = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-paintbrush")
      /// Image `head-panda`.
      static let headPanda = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-panda")
      /// Image `head-paperclip`.
      static let headPaperclip = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-paperclip")
      /// Image `head-peanut`.
      static let headPeanut = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-peanut")
      /// Image `head-pencil-tip`.
      static let headPencilTip = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pencil-tip")
      /// Image `head-peyote`.
      static let headPeyote = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-peyote")
      /// Image `head-piano`.
      static let headPiano = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-piano")
      /// Image `head-pickle`.
      static let headPickle = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pickle")
      /// Image `head-pie`.
      static let headPie = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pie")
      /// Image `head-piggybank`.
      static let headPiggybank = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-piggybank")
      /// Image `head-pill`.
      static let headPill = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pill")
      /// Image `head-pillow`.
      static let headPillow = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pillow")
      /// Image `head-pineapple`.
      static let headPineapple = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pineapple")
      /// Image `head-pipe`.
      static let headPipe = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pipe")
      /// Image `head-pirateship`.
      static let headPirateship = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pirateship")
      /// Image `head-pizza`.
      static let headPizza = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pizza")
      /// Image `head-plane`.
      static let headPlane = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-plane")
      /// Image `head-pop`.
      static let headPop = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pop")
      /// Image `head-porkbao`.
      static let headPorkbao = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-porkbao")
      /// Image `head-potato`.
      static let headPotato = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-potato")
      /// Image `head-pufferfish`.
      static let headPufferfish = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pufferfish")
      /// Image `head-pumpkin`.
      static let headPumpkin = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pumpkin")
      /// Image `head-pyramid`.
      static let headPyramid = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-pyramid")
      /// Image `head-queencrown`.
      static let headQueencrown = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-queencrown")
      /// Image `head-rabbit`.
      static let headRabbit = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-rabbit")
      /// Image `head-rainbow`.
      static let headRainbow = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-rainbow")
      /// Image `head-rangefinder`.
      static let headRangefinder = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-rangefinder")
      /// Image `head-raven`.
      static let headRaven = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-raven")
      /// Image `head-retainer`.
      static let headRetainer = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-retainer")
      /// Image `head-rgb`.
      static let headRgb = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-rgb")
      /// Image `head-ring`.
      static let headRing = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-ring")
      /// Image `head-road`.
      static let headRoad = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-road")
      /// Image `head-robot`.
      static let headRobot = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-robot")
      /// Image `head-rock`.
      static let headRock = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-rock")
      /// Image `head-rosebud`.
      static let headRosebud = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-rosebud")
      /// Image `head-ruler-triangular`.
      static let headRulerTriangular = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-ruler-triangular")
      /// Image `head-saguaro`.
      static let headSaguaro = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-saguaro")
      /// Image `head-sailboat`.
      static let headSailboat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-sailboat")
      /// Image `head-sandwich`.
      static let headSandwich = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-sandwich")
      /// Image `head-saturn`.
      static let headSaturn = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-saturn")
      /// Image `head-saw`.
      static let headSaw = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-saw")
      /// Image `head-scorpion`.
      static let headScorpion = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-scorpion")
      /// Image `head-shark`.
      static let headShark = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-shark")
      /// Image `head-shower`.
      static let headShower = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-shower")
      /// Image `head-skateboard`.
      static let headSkateboard = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-skateboard")
      /// Image `head-skeleton-hat`.
      static let headSkeletonHat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-skeleton-hat")
      /// Image `head-skilift`.
      static let headSkilift = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-skilift")
      /// Image `head-smile`.
      static let headSmile = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-smile")
      /// Image `head-snowglobe`.
      static let headSnowglobe = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-snowglobe")
      /// Image `head-snowmobile`.
      static let headSnowmobile = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-snowmobile")
      /// Image `head-spaghetti`.
      static let headSpaghetti = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-spaghetti")
      /// Image `head-sponge`.
      static let headSponge = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-sponge")
      /// Image `head-squid`.
      static let headSquid = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-squid")
      /// Image `head-stapler`.
      static let headStapler = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-stapler")
      /// Image `head-star-sparkles`.
      static let headStarSparkles = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-star-sparkles")
      /// Image `head-steak`.
      static let headSteak = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-steak")
      /// Image `head-sunset`.
      static let headSunset = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-sunset")
      /// Image `head-taco-classic`.
      static let headTacoClassic = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-taco-classic")
      /// Image `head-taxi`.
      static let headTaxi = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-taxi")
      /// Image `head-thumbsup`.
      static let headThumbsup = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-thumbsup")
      /// Image `head-toaster`.
      static let headToaster = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-toaster")
      /// Image `head-toiletpaper-full`.
      static let headToiletpaperFull = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-toiletpaper-full")
      /// Image `head-tooth`.
      static let headTooth = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-tooth")
      /// Image `head-toothbrush-fresh`.
      static let headToothbrushFresh = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-toothbrush-fresh")
      /// Image `head-tornado`.
      static let headTornado = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-tornado")
      /// Image `head-trashcan`.
      static let headTrashcan = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-trashcan")
      /// Image `head-turing`.
      static let headTuring = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-turing")
      /// Image `head-ufo`.
      static let headUfo = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-ufo")
      /// Image `head-undead`.
      static let headUndead = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-undead")
      /// Image `head-unicorn`.
      static let headUnicorn = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-unicorn")
      /// Image `head-vent`.
      static let headVent = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-vent")
      /// Image `head-void`.
      static let headVoid = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-void")
      /// Image `head-volcano`.
      static let headVolcano = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-volcano")
      /// Image `head-volleyball`.
      static let headVolleyball = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-volleyball")
      /// Image `head-wall`.
      static let headWall = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-wall")
      /// Image `head-wallet`.
      static let headWallet = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-wallet")
      /// Image `head-wallsafe`.
      static let headWallsafe = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-wallsafe")
      /// Image `head-washingmachine`.
      static let headWashingmachine = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-washingmachine")
      /// Image `head-watch`.
      static let headWatch = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-watch")
      /// Image `head-watermelon`.
      static let headWatermelon = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-watermelon")
      /// Image `head-wave`.
      static let headWave = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-wave")
      /// Image `head-weed`.
      static let headWeed = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-weed")
      /// Image `head-weight`.
      static let headWeight = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-weight")
      /// Image `head-werewolf`.
      static let headWerewolf = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-werewolf")
      /// Image `head-whale-alive`.
      static let headWhaleAlive = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-whale-alive")
      /// Image `head-whale`.
      static let headWhale = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-whale")
      /// Image `head-wine`.
      static let headWine = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-wine")
      /// Image `head-wizardhat`.
      static let headWizardhat = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-wizardhat")
      /// Image `head-zebra`.
      static let headZebra = Rswift.ImageResource(bundle: R.hostingBundle, name: "heads-less-mouth/head-zebra")

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-aardvark", bundle: ..., traitCollection: ...)`
      static func headAardvark(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headAardvark, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-abstract", bundle: ..., traitCollection: ...)`
      static func headAbstract(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headAbstract, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-ape", bundle: ..., traitCollection: ...)`
      static func headApe(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headApe, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bag", bundle: ..., traitCollection: ...)`
      static func headBag(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBag, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bagpipe", bundle: ..., traitCollection: ...)`
      static func headBagpipe(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBagpipe, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-banana", bundle: ..., traitCollection: ...)`
      static func headBanana(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBanana, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bank", bundle: ..., traitCollection: ...)`
      static func headBank(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBank, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-baseball-gameball", bundle: ..., traitCollection: ...)`
      static func headBaseballGameball(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBaseballGameball, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-basketball", bundle: ..., traitCollection: ...)`
      static func headBasketball(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBasketball, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bat", bundle: ..., traitCollection: ...)`
      static func headBat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bear", bundle: ..., traitCollection: ...)`
      static func headBear(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBear, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-beer", bundle: ..., traitCollection: ...)`
      static func headBeer(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBeer, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-beet", bundle: ..., traitCollection: ...)`
      static func headBeet(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBeet, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bell", bundle: ..., traitCollection: ...)`
      static func headBell(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBell, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bigfoot", bundle: ..., traitCollection: ...)`
      static func headBigfoot(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBigfoot, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bigfoot-yeti", bundle: ..., traitCollection: ...)`
      static func headBigfootYeti(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBigfootYeti, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-blackhole", bundle: ..., traitCollection: ...)`
      static func headBlackhole(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBlackhole, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-blueberry", bundle: ..., traitCollection: ...)`
      static func headBlueberry(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBlueberry, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bomb", bundle: ..., traitCollection: ...)`
      static func headBomb(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBomb, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bonsai", bundle: ..., traitCollection: ...)`
      static func headBonsai(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBonsai, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-boombox", bundle: ..., traitCollection: ...)`
      static func headBoombox(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBoombox, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-boot", bundle: ..., traitCollection: ...)`
      static func headBoot(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBoot, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-box", bundle: ..., traitCollection: ...)`
      static func headBox(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBox, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-boxingglove", bundle: ..., traitCollection: ...)`
      static func headBoxingglove(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBoxingglove, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-brain", bundle: ..., traitCollection: ...)`
      static func headBrain(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBrain, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bubble-speech", bundle: ..., traitCollection: ...)`
      static func headBubbleSpeech(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBubbleSpeech, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-bubblegum", bundle: ..., traitCollection: ...)`
      static func headBubblegum(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBubblegum, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-burger-dollarmenu", bundle: ..., traitCollection: ...)`
      static func headBurgerDollarmenu(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headBurgerDollarmenu, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cake", bundle: ..., traitCollection: ...)`
      static func headCake(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCake, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-calculator", bundle: ..., traitCollection: ...)`
      static func headCalculator(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCalculator, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-calendar", bundle: ..., traitCollection: ...)`
      static func headCalendar(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCalendar, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-camcorder", bundle: ..., traitCollection: ...)`
      static func headCamcorder(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCamcorder, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cannedham", bundle: ..., traitCollection: ...)`
      static func headCannedham(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCannedham, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-car", bundle: ..., traitCollection: ...)`
      static func headCar(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCar, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cash-register", bundle: ..., traitCollection: ...)`
      static func headCashRegister(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCashRegister, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cassettetape", bundle: ..., traitCollection: ...)`
      static func headCassettetape(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCassettetape, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cat", bundle: ..., traitCollection: ...)`
      static func headCat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cd", bundle: ..., traitCollection: ...)`
      static func headCd(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCd, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chain", bundle: ..., traitCollection: ...)`
      static func headChain(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChain, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chainsaw", bundle: ..., traitCollection: ...)`
      static func headChainsaw(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChainsaw, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chameleon", bundle: ..., traitCollection: ...)`
      static func headChameleon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChameleon, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chart-bars", bundle: ..., traitCollection: ...)`
      static func headChartBars(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChartBars, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cheese", bundle: ..., traitCollection: ...)`
      static func headCheese(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCheese, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chefhat", bundle: ..., traitCollection: ...)`
      static func headChefhat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChefhat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cherry", bundle: ..., traitCollection: ...)`
      static func headCherry(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCherry, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chicken", bundle: ..., traitCollection: ...)`
      static func headChicken(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChicken, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chilli", bundle: ..., traitCollection: ...)`
      static func headChilli(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChilli, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chipboard", bundle: ..., traitCollection: ...)`
      static func headChipboard(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChipboard, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chips", bundle: ..., traitCollection: ...)`
      static func headChips(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChips, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-chocolate", bundle: ..., traitCollection: ...)`
      static func headChocolate(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headChocolate, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cloud", bundle: ..., traitCollection: ...)`
      static func headCloud(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCloud, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-clover", bundle: ..., traitCollection: ...)`
      static func headClover(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headClover, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-clutch", bundle: ..., traitCollection: ...)`
      static func headClutch(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headClutch, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-coffeebean", bundle: ..., traitCollection: ...)`
      static func headCoffeebean(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCoffeebean, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cone", bundle: ..., traitCollection: ...)`
      static func headCone(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCone, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-console-handheld", bundle: ..., traitCollection: ...)`
      static func headConsoleHandheld(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headConsoleHandheld, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cookie", bundle: ..., traitCollection: ...)`
      static func headCookie(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCookie, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cordlessphone", bundle: ..., traitCollection: ...)`
      static func headCordlessphone(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCordlessphone, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cottonball", bundle: ..., traitCollection: ...)`
      static func headCottonball(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCottonball, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-cow", bundle: ..., traitCollection: ...)`
      static func headCow(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCow, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-crab", bundle: ..., traitCollection: ...)`
      static func headCrab(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCrab, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-crane", bundle: ..., traitCollection: ...)`
      static func headCrane(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCrane, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-croc-hat", bundle: ..., traitCollection: ...)`
      static func headCrocHat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCrocHat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-crown", bundle: ..., traitCollection: ...)`
      static func headCrown(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCrown, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-crt-bsod", bundle: ..., traitCollection: ...)`
      static func headCrtBsod(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCrtBsod, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-crystalball", bundle: ..., traitCollection: ...)`
      static func headCrystalball(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headCrystalball, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-diamond-blue", bundle: ..., traitCollection: ...)`
      static func headDiamondBlue(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDiamondBlue, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-diamond-red", bundle: ..., traitCollection: ...)`
      static func headDiamondRed(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDiamondRed, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-dictionary", bundle: ..., traitCollection: ...)`
      static func headDictionary(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDictionary, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-dino", bundle: ..., traitCollection: ...)`
      static func headDino(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDino, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-dna", bundle: ..., traitCollection: ...)`
      static func headDna(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDna, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-dog", bundle: ..., traitCollection: ...)`
      static func headDog(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDog, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-doughnut", bundle: ..., traitCollection: ...)`
      static func headDoughnut(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDoughnut, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-drill", bundle: ..., traitCollection: ...)`
      static func headDrill(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDrill, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-duck", bundle: ..., traitCollection: ...)`
      static func headDuck(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDuck, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-ducky", bundle: ..., traitCollection: ...)`
      static func headDucky(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headDucky, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-earth", bundle: ..., traitCollection: ...)`
      static func headEarth(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headEarth, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-egg", bundle: ..., traitCollection: ...)`
      static func headEgg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headEgg, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-faberge", bundle: ..., traitCollection: ...)`
      static func headFaberge(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFaberge, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-factory-dark", bundle: ..., traitCollection: ...)`
      static func headFactoryDark(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFactoryDark, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-fan", bundle: ..., traitCollection: ...)`
      static func headFan(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFan, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-fence", bundle: ..., traitCollection: ...)`
      static func headFence(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFence, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-film-35mm", bundle: ..., traitCollection: ...)`
      static func headFilm35mm(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFilm35mm, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-film-strip", bundle: ..., traitCollection: ...)`
      static func headFilmStrip(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFilmStrip, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-fir", bundle: ..., traitCollection: ...)`
      static func headFir(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFir, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-firehydrant", bundle: ..., traitCollection: ...)`
      static func headFirehydrant(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFirehydrant, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-flamingo", bundle: ..., traitCollection: ...)`
      static func headFlamingo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFlamingo, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-flower", bundle: ..., traitCollection: ...)`
      static func headFlower(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFlower, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-fox", bundle: ..., traitCollection: ...)`
      static func headFox(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFox, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-frog", bundle: ..., traitCollection: ...)`
      static func headFrog(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headFrog, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-garlic", bundle: ..., traitCollection: ...)`
      static func headGarlic(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGarlic, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-gavel", bundle: ..., traitCollection: ...)`
      static func headGavel(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGavel, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-ghost-B", bundle: ..., traitCollection: ...)`
      static func headGhostB(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGhostB, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-glasses-big", bundle: ..., traitCollection: ...)`
      static func headGlassesBig(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGlassesBig, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-gnome", bundle: ..., traitCollection: ...)`
      static func headGnome(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGnome, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-goat", bundle: ..., traitCollection: ...)`
      static func headGoat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGoat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-goldcoin", bundle: ..., traitCollection: ...)`
      static func headGoldcoin(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGoldcoin, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-goldfish", bundle: ..., traitCollection: ...)`
      static func headGoldfish(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGoldfish, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-grouper", bundle: ..., traitCollection: ...)`
      static func headGrouper(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headGrouper, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-hair", bundle: ..., traitCollection: ...)`
      static func headHair(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHair, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-hardhat", bundle: ..., traitCollection: ...)`
      static func headHardhat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHardhat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-heart", bundle: ..., traitCollection: ...)`
      static func headHeart(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHeart, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-helicopter", bundle: ..., traitCollection: ...)`
      static func headHelicopter(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHelicopter, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-highheel", bundle: ..., traitCollection: ...)`
      static func headHighheel(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHighheel, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-hockeypuck", bundle: ..., traitCollection: ...)`
      static func headHockeypuck(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHockeypuck, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-horse-deepfried", bundle: ..., traitCollection: ...)`
      static func headHorseDeepfried(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHorseDeepfried, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-hotdog", bundle: ..., traitCollection: ...)`
      static func headHotdog(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHotdog, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-house", bundle: ..., traitCollection: ...)`
      static func headHouse(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headHouse, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-icepop-b", bundle: ..., traitCollection: ...)`
      static func headIcepopB(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headIcepopB, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-igloo", bundle: ..., traitCollection: ...)`
      static func headIgloo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headIgloo, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-island", bundle: ..., traitCollection: ...)`
      static func headIsland(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headIsland, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-jellyfish", bundle: ..., traitCollection: ...)`
      static func headJellyfish(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headJellyfish, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-jupiter", bundle: ..., traitCollection: ...)`
      static func headJupiter(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headJupiter, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-kangaroo", bundle: ..., traitCollection: ...)`
      static func headKangaroo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headKangaroo, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-ketchup", bundle: ..., traitCollection: ...)`
      static func headKetchup(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headKetchup, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-laptop", bundle: ..., traitCollection: ...)`
      static func headLaptop(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headLaptop, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-lightning-bolt", bundle: ..., traitCollection: ...)`
      static func headLightningBolt(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headLightningBolt, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-lint", bundle: ..., traitCollection: ...)`
      static func headLint(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headLint, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-lips", bundle: ..., traitCollection: ...)`
      static func headLips(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headLips, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-lipstick2", bundle: ..., traitCollection: ...)`
      static func headLipstick2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headLipstick2, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-lock", bundle: ..., traitCollection: ...)`
      static func headLock(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headLock, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-macaroni", bundle: ..., traitCollection: ...)`
      static func headMacaroni(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMacaroni, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mailbox", bundle: ..., traitCollection: ...)`
      static func headMailbox(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMailbox, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-maze", bundle: ..., traitCollection: ...)`
      static func headMaze(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMaze, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-microwave", bundle: ..., traitCollection: ...)`
      static func headMicrowave(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMicrowave, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-milk", bundle: ..., traitCollection: ...)`
      static func headMilk(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMilk, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mirror", bundle: ..., traitCollection: ...)`
      static func headMirror(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMirror, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mixer", bundle: ..., traitCollection: ...)`
      static func headMixer(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMixer, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-moon", bundle: ..., traitCollection: ...)`
      static func headMoon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMoon, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-moose", bundle: ..., traitCollection: ...)`
      static func headMoose(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMoose, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mosquito", bundle: ..., traitCollection: ...)`
      static func headMosquito(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMosquito, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mountain-snowcap", bundle: ..., traitCollection: ...)`
      static func headMountainSnowcap(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMountainSnowcap, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mouse", bundle: ..., traitCollection: ...)`
      static func headMouse(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMouse, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mug", bundle: ..., traitCollection: ...)`
      static func headMug(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMug, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mushroom", bundle: ..., traitCollection: ...)`
      static func headMushroom(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMushroom, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-mustard", bundle: ..., traitCollection: ...)`
      static func headMustard(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headMustard, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-nigiri", bundle: ..., traitCollection: ...)`
      static func headNigiri(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headNigiri, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-noodles", bundle: ..., traitCollection: ...)`
      static func headNoodles(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headNoodles, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-onion", bundle: ..., traitCollection: ...)`
      static func headOnion(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headOnion, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-orangutan", bundle: ..., traitCollection: ...)`
      static func headOrangutan(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headOrangutan, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-orca", bundle: ..., traitCollection: ...)`
      static func headOrca(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headOrca, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-otter", bundle: ..., traitCollection: ...)`
      static func headOtter(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headOtter, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-outlet", bundle: ..., traitCollection: ...)`
      static func headOutlet(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headOutlet, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-owl", bundle: ..., traitCollection: ...)`
      static func headOwl(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headOwl, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-oyster", bundle: ..., traitCollection: ...)`
      static func headOyster(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headOyster, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-paintbrush", bundle: ..., traitCollection: ...)`
      static func headPaintbrush(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPaintbrush, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-panda", bundle: ..., traitCollection: ...)`
      static func headPanda(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPanda, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-paperclip", bundle: ..., traitCollection: ...)`
      static func headPaperclip(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPaperclip, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-peanut", bundle: ..., traitCollection: ...)`
      static func headPeanut(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPeanut, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pencil-tip", bundle: ..., traitCollection: ...)`
      static func headPencilTip(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPencilTip, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-peyote", bundle: ..., traitCollection: ...)`
      static func headPeyote(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPeyote, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-piano", bundle: ..., traitCollection: ...)`
      static func headPiano(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPiano, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pickle", bundle: ..., traitCollection: ...)`
      static func headPickle(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPickle, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pie", bundle: ..., traitCollection: ...)`
      static func headPie(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPie, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-piggybank", bundle: ..., traitCollection: ...)`
      static func headPiggybank(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPiggybank, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pill", bundle: ..., traitCollection: ...)`
      static func headPill(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPill, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pillow", bundle: ..., traitCollection: ...)`
      static func headPillow(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPillow, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pineapple", bundle: ..., traitCollection: ...)`
      static func headPineapple(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPineapple, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pipe", bundle: ..., traitCollection: ...)`
      static func headPipe(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPipe, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pirateship", bundle: ..., traitCollection: ...)`
      static func headPirateship(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPirateship, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pizza", bundle: ..., traitCollection: ...)`
      static func headPizza(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPizza, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-plane", bundle: ..., traitCollection: ...)`
      static func headPlane(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPlane, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pop", bundle: ..., traitCollection: ...)`
      static func headPop(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPop, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-porkbao", bundle: ..., traitCollection: ...)`
      static func headPorkbao(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPorkbao, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-potato", bundle: ..., traitCollection: ...)`
      static func headPotato(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPotato, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pufferfish", bundle: ..., traitCollection: ...)`
      static func headPufferfish(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPufferfish, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pumpkin", bundle: ..., traitCollection: ...)`
      static func headPumpkin(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPumpkin, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-pyramid", bundle: ..., traitCollection: ...)`
      static func headPyramid(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headPyramid, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-queencrown", bundle: ..., traitCollection: ...)`
      static func headQueencrown(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headQueencrown, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-rabbit", bundle: ..., traitCollection: ...)`
      static func headRabbit(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRabbit, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-rainbow", bundle: ..., traitCollection: ...)`
      static func headRainbow(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRainbow, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-rangefinder", bundle: ..., traitCollection: ...)`
      static func headRangefinder(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRangefinder, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-raven", bundle: ..., traitCollection: ...)`
      static func headRaven(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRaven, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-retainer", bundle: ..., traitCollection: ...)`
      static func headRetainer(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRetainer, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-rgb", bundle: ..., traitCollection: ...)`
      static func headRgb(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRgb, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-ring", bundle: ..., traitCollection: ...)`
      static func headRing(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRing, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-road", bundle: ..., traitCollection: ...)`
      static func headRoad(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRoad, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-robot", bundle: ..., traitCollection: ...)`
      static func headRobot(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRobot, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-rock", bundle: ..., traitCollection: ...)`
      static func headRock(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRock, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-rosebud", bundle: ..., traitCollection: ...)`
      static func headRosebud(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRosebud, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-ruler-triangular", bundle: ..., traitCollection: ...)`
      static func headRulerTriangular(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headRulerTriangular, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-saguaro", bundle: ..., traitCollection: ...)`
      static func headSaguaro(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSaguaro, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-sailboat", bundle: ..., traitCollection: ...)`
      static func headSailboat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSailboat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-sandwich", bundle: ..., traitCollection: ...)`
      static func headSandwich(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSandwich, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-saturn", bundle: ..., traitCollection: ...)`
      static func headSaturn(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSaturn, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-saw", bundle: ..., traitCollection: ...)`
      static func headSaw(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSaw, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-scorpion", bundle: ..., traitCollection: ...)`
      static func headScorpion(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headScorpion, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-shark", bundle: ..., traitCollection: ...)`
      static func headShark(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headShark, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-shower", bundle: ..., traitCollection: ...)`
      static func headShower(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headShower, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-skateboard", bundle: ..., traitCollection: ...)`
      static func headSkateboard(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSkateboard, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-skeleton-hat", bundle: ..., traitCollection: ...)`
      static func headSkeletonHat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSkeletonHat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-skilift", bundle: ..., traitCollection: ...)`
      static func headSkilift(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSkilift, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-smile", bundle: ..., traitCollection: ...)`
      static func headSmile(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSmile, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-snowglobe", bundle: ..., traitCollection: ...)`
      static func headSnowglobe(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSnowglobe, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-snowmobile", bundle: ..., traitCollection: ...)`
      static func headSnowmobile(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSnowmobile, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-spaghetti", bundle: ..., traitCollection: ...)`
      static func headSpaghetti(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSpaghetti, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-sponge", bundle: ..., traitCollection: ...)`
      static func headSponge(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSponge, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-squid", bundle: ..., traitCollection: ...)`
      static func headSquid(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSquid, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-stapler", bundle: ..., traitCollection: ...)`
      static func headStapler(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headStapler, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-star-sparkles", bundle: ..., traitCollection: ...)`
      static func headStarSparkles(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headStarSparkles, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-steak", bundle: ..., traitCollection: ...)`
      static func headSteak(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSteak, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-sunset", bundle: ..., traitCollection: ...)`
      static func headSunset(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headSunset, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-taco-classic", bundle: ..., traitCollection: ...)`
      static func headTacoClassic(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headTacoClassic, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-taxi", bundle: ..., traitCollection: ...)`
      static func headTaxi(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headTaxi, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-thumbsup", bundle: ..., traitCollection: ...)`
      static func headThumbsup(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headThumbsup, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-toaster", bundle: ..., traitCollection: ...)`
      static func headToaster(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headToaster, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-toiletpaper-full", bundle: ..., traitCollection: ...)`
      static func headToiletpaperFull(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headToiletpaperFull, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-tooth", bundle: ..., traitCollection: ...)`
      static func headTooth(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headTooth, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-toothbrush-fresh", bundle: ..., traitCollection: ...)`
      static func headToothbrushFresh(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headToothbrushFresh, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-tornado", bundle: ..., traitCollection: ...)`
      static func headTornado(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headTornado, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-trashcan", bundle: ..., traitCollection: ...)`
      static func headTrashcan(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headTrashcan, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-turing", bundle: ..., traitCollection: ...)`
      static func headTuring(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headTuring, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-ufo", bundle: ..., traitCollection: ...)`
      static func headUfo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headUfo, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-undead", bundle: ..., traitCollection: ...)`
      static func headUndead(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headUndead, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-unicorn", bundle: ..., traitCollection: ...)`
      static func headUnicorn(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headUnicorn, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-vent", bundle: ..., traitCollection: ...)`
      static func headVent(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headVent, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-void", bundle: ..., traitCollection: ...)`
      static func headVoid(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headVoid, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-volcano", bundle: ..., traitCollection: ...)`
      static func headVolcano(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headVolcano, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-volleyball", bundle: ..., traitCollection: ...)`
      static func headVolleyball(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headVolleyball, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-wall", bundle: ..., traitCollection: ...)`
      static func headWall(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWall, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-wallet", bundle: ..., traitCollection: ...)`
      static func headWallet(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWallet, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-wallsafe", bundle: ..., traitCollection: ...)`
      static func headWallsafe(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWallsafe, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-washingmachine", bundle: ..., traitCollection: ...)`
      static func headWashingmachine(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWashingmachine, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-watch", bundle: ..., traitCollection: ...)`
      static func headWatch(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWatch, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-watermelon", bundle: ..., traitCollection: ...)`
      static func headWatermelon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWatermelon, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-wave", bundle: ..., traitCollection: ...)`
      static func headWave(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWave, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-weed", bundle: ..., traitCollection: ...)`
      static func headWeed(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWeed, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-weight", bundle: ..., traitCollection: ...)`
      static func headWeight(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWeight, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-werewolf", bundle: ..., traitCollection: ...)`
      static func headWerewolf(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWerewolf, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-whale", bundle: ..., traitCollection: ...)`
      static func headWhale(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWhale, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-whale-alive", bundle: ..., traitCollection: ...)`
      static func headWhaleAlive(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWhaleAlive, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-wine", bundle: ..., traitCollection: ...)`
      static func headWine(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWine, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-wizardhat", bundle: ..., traitCollection: ...)`
      static func headWizardhat(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headWizardhat, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "head-zebra", bundle: ..., traitCollection: ...)`
      static func headZebra(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.headsLessMouth.headZebra, compatibleWith: traitCollection)
      }
      #endif

      fileprivate init() {}
    }

    /// This `R.image.nounfetti` struct is generated, and contains static references to 120 images.
    struct nounfetti {
      /// Image `Noun-fetti_00000`.
      static let nounFetti_00000 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00000")
      /// Image `Noun-fetti_00001`.
      static let nounFetti_00001 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00001")
      /// Image `Noun-fetti_00002`.
      static let nounFetti_00002 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00002")
      /// Image `Noun-fetti_00003`.
      static let nounFetti_00003 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00003")
      /// Image `Noun-fetti_00004`.
      static let nounFetti_00004 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00004")
      /// Image `Noun-fetti_00005`.
      static let nounFetti_00005 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00005")
      /// Image `Noun-fetti_00006`.
      static let nounFetti_00006 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00006")
      /// Image `Noun-fetti_00007`.
      static let nounFetti_00007 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00007")
      /// Image `Noun-fetti_00008`.
      static let nounFetti_00008 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00008")
      /// Image `Noun-fetti_00009`.
      static let nounFetti_00009 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00009")
      /// Image `Noun-fetti_00010`.
      static let nounFetti_00010 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00010")
      /// Image `Noun-fetti_00011`.
      static let nounFetti_00011 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00011")
      /// Image `Noun-fetti_00012`.
      static let nounFetti_00012 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00012")
      /// Image `Noun-fetti_00013`.
      static let nounFetti_00013 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00013")
      /// Image `Noun-fetti_00014`.
      static let nounFetti_00014 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00014")
      /// Image `Noun-fetti_00015`.
      static let nounFetti_00015 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00015")
      /// Image `Noun-fetti_00016`.
      static let nounFetti_00016 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00016")
      /// Image `Noun-fetti_00017`.
      static let nounFetti_00017 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00017")
      /// Image `Noun-fetti_00018`.
      static let nounFetti_00018 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00018")
      /// Image `Noun-fetti_00019`.
      static let nounFetti_00019 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00019")
      /// Image `Noun-fetti_00020`.
      static let nounFetti_00020 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00020")
      /// Image `Noun-fetti_00021`.
      static let nounFetti_00021 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00021")
      /// Image `Noun-fetti_00022`.
      static let nounFetti_00022 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00022")
      /// Image `Noun-fetti_00023`.
      static let nounFetti_00023 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00023")
      /// Image `Noun-fetti_00024`.
      static let nounFetti_00024 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00024")
      /// Image `Noun-fetti_00025`.
      static let nounFetti_00025 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00025")
      /// Image `Noun-fetti_00026`.
      static let nounFetti_00026 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00026")
      /// Image `Noun-fetti_00027`.
      static let nounFetti_00027 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00027")
      /// Image `Noun-fetti_00028`.
      static let nounFetti_00028 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00028")
      /// Image `Noun-fetti_00029`.
      static let nounFetti_00029 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00029")
      /// Image `Noun-fetti_00030`.
      static let nounFetti_00030 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00030")
      /// Image `Noun-fetti_00031`.
      static let nounFetti_00031 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00031")
      /// Image `Noun-fetti_00032`.
      static let nounFetti_00032 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00032")
      /// Image `Noun-fetti_00033`.
      static let nounFetti_00033 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00033")
      /// Image `Noun-fetti_00034`.
      static let nounFetti_00034 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00034")
      /// Image `Noun-fetti_00035`.
      static let nounFetti_00035 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00035")
      /// Image `Noun-fetti_00036`.
      static let nounFetti_00036 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00036")
      /// Image `Noun-fetti_00037`.
      static let nounFetti_00037 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00037")
      /// Image `Noun-fetti_00038`.
      static let nounFetti_00038 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00038")
      /// Image `Noun-fetti_00039`.
      static let nounFetti_00039 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00039")
      /// Image `Noun-fetti_00040`.
      static let nounFetti_00040 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00040")
      /// Image `Noun-fetti_00041`.
      static let nounFetti_00041 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00041")
      /// Image `Noun-fetti_00042`.
      static let nounFetti_00042 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00042")
      /// Image `Noun-fetti_00043`.
      static let nounFetti_00043 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00043")
      /// Image `Noun-fetti_00044`.
      static let nounFetti_00044 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00044")
      /// Image `Noun-fetti_00045`.
      static let nounFetti_00045 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00045")
      /// Image `Noun-fetti_00046`.
      static let nounFetti_00046 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00046")
      /// Image `Noun-fetti_00047`.
      static let nounFetti_00047 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00047")
      /// Image `Noun-fetti_00048`.
      static let nounFetti_00048 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00048")
      /// Image `Noun-fetti_00049`.
      static let nounFetti_00049 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00049")
      /// Image `Noun-fetti_00050`.
      static let nounFetti_00050 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00050")
      /// Image `Noun-fetti_00051`.
      static let nounFetti_00051 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00051")
      /// Image `Noun-fetti_00052`.
      static let nounFetti_00052 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00052")
      /// Image `Noun-fetti_00053`.
      static let nounFetti_00053 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00053")
      /// Image `Noun-fetti_00054`.
      static let nounFetti_00054 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00054")
      /// Image `Noun-fetti_00055`.
      static let nounFetti_00055 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00055")
      /// Image `Noun-fetti_00056`.
      static let nounFetti_00056 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00056")
      /// Image `Noun-fetti_00057`.
      static let nounFetti_00057 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00057")
      /// Image `Noun-fetti_00058`.
      static let nounFetti_00058 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00058")
      /// Image `Noun-fetti_00059`.
      static let nounFetti_00059 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00059")
      /// Image `Noun-fetti_00060`.
      static let nounFetti_00060 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00060")
      /// Image `Noun-fetti_00061`.
      static let nounFetti_00061 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00061")
      /// Image `Noun-fetti_00062`.
      static let nounFetti_00062 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00062")
      /// Image `Noun-fetti_00063`.
      static let nounFetti_00063 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00063")
      /// Image `Noun-fetti_00064`.
      static let nounFetti_00064 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00064")
      /// Image `Noun-fetti_00065`.
      static let nounFetti_00065 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00065")
      /// Image `Noun-fetti_00066`.
      static let nounFetti_00066 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00066")
      /// Image `Noun-fetti_00067`.
      static let nounFetti_00067 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00067")
      /// Image `Noun-fetti_00068`.
      static let nounFetti_00068 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00068")
      /// Image `Noun-fetti_00069`.
      static let nounFetti_00069 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00069")
      /// Image `Noun-fetti_00070`.
      static let nounFetti_00070 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00070")
      /// Image `Noun-fetti_00071`.
      static let nounFetti_00071 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00071")
      /// Image `Noun-fetti_00072`.
      static let nounFetti_00072 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00072")
      /// Image `Noun-fetti_00073`.
      static let nounFetti_00073 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00073")
      /// Image `Noun-fetti_00074`.
      static let nounFetti_00074 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00074")
      /// Image `Noun-fetti_00075`.
      static let nounFetti_00075 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00075")
      /// Image `Noun-fetti_00076`.
      static let nounFetti_00076 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00076")
      /// Image `Noun-fetti_00077`.
      static let nounFetti_00077 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00077")
      /// Image `Noun-fetti_00078`.
      static let nounFetti_00078 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00078")
      /// Image `Noun-fetti_00079`.
      static let nounFetti_00079 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00079")
      /// Image `Noun-fetti_00080`.
      static let nounFetti_00080 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00080")
      /// Image `Noun-fetti_00081`.
      static let nounFetti_00081 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00081")
      /// Image `Noun-fetti_00082`.
      static let nounFetti_00082 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00082")
      /// Image `Noun-fetti_00083`.
      static let nounFetti_00083 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00083")
      /// Image `Noun-fetti_00084`.
      static let nounFetti_00084 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00084")
      /// Image `Noun-fetti_00085`.
      static let nounFetti_00085 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00085")
      /// Image `Noun-fetti_00086`.
      static let nounFetti_00086 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00086")
      /// Image `Noun-fetti_00087`.
      static let nounFetti_00087 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00087")
      /// Image `Noun-fetti_00088`.
      static let nounFetti_00088 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00088")
      /// Image `Noun-fetti_00089`.
      static let nounFetti_00089 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00089")
      /// Image `Noun-fetti_00090`.
      static let nounFetti_00090 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00090")
      /// Image `Noun-fetti_00091`.
      static let nounFetti_00091 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00091")
      /// Image `Noun-fetti_00092`.
      static let nounFetti_00092 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00092")
      /// Image `Noun-fetti_00093`.
      static let nounFetti_00093 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00093")
      /// Image `Noun-fetti_00094`.
      static let nounFetti_00094 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00094")
      /// Image `Noun-fetti_00095`.
      static let nounFetti_00095 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00095")
      /// Image `Noun-fetti_00096`.
      static let nounFetti_00096 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00096")
      /// Image `Noun-fetti_00097`.
      static let nounFetti_00097 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00097")
      /// Image `Noun-fetti_00098`.
      static let nounFetti_00098 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00098")
      /// Image `Noun-fetti_00099`.
      static let nounFetti_00099 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00099")
      /// Image `Noun-fetti_00100`.
      static let nounFetti_00100 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00100")
      /// Image `Noun-fetti_00101`.
      static let nounFetti_00101 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00101")
      /// Image `Noun-fetti_00102`.
      static let nounFetti_00102 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00102")
      /// Image `Noun-fetti_00103`.
      static let nounFetti_00103 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00103")
      /// Image `Noun-fetti_00104`.
      static let nounFetti_00104 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00104")
      /// Image `Noun-fetti_00105`.
      static let nounFetti_00105 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00105")
      /// Image `Noun-fetti_00106`.
      static let nounFetti_00106 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00106")
      /// Image `Noun-fetti_00107`.
      static let nounFetti_00107 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00107")
      /// Image `Noun-fetti_00108`.
      static let nounFetti_00108 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00108")
      /// Image `Noun-fetti_00109`.
      static let nounFetti_00109 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00109")
      /// Image `Noun-fetti_00110`.
      static let nounFetti_00110 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00110")
      /// Image `Noun-fetti_00111`.
      static let nounFetti_00111 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00111")
      /// Image `Noun-fetti_00112`.
      static let nounFetti_00112 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00112")
      /// Image `Noun-fetti_00113`.
      static let nounFetti_00113 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00113")
      /// Image `Noun-fetti_00114`.
      static let nounFetti_00114 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00114")
      /// Image `Noun-fetti_00115`.
      static let nounFetti_00115 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00115")
      /// Image `Noun-fetti_00116`.
      static let nounFetti_00116 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00116")
      /// Image `Noun-fetti_00117`.
      static let nounFetti_00117 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00117")
      /// Image `Noun-fetti_00118`.
      static let nounFetti_00118 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00118")
      /// Image `Noun-fetti_00119`.
      static let nounFetti_00119 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nounfetti/Noun-fetti_00119")

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00000", bundle: ..., traitCollection: ...)`
      static func nounFetti_00000(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00000, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00001", bundle: ..., traitCollection: ...)`
      static func nounFetti_00001(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00001, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00002", bundle: ..., traitCollection: ...)`
      static func nounFetti_00002(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00002, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00003", bundle: ..., traitCollection: ...)`
      static func nounFetti_00003(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00003, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00004", bundle: ..., traitCollection: ...)`
      static func nounFetti_00004(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00004, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00005", bundle: ..., traitCollection: ...)`
      static func nounFetti_00005(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00005, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00006", bundle: ..., traitCollection: ...)`
      static func nounFetti_00006(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00006, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00007", bundle: ..., traitCollection: ...)`
      static func nounFetti_00007(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00007, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00008", bundle: ..., traitCollection: ...)`
      static func nounFetti_00008(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00008, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00009", bundle: ..., traitCollection: ...)`
      static func nounFetti_00009(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00009, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00010", bundle: ..., traitCollection: ...)`
      static func nounFetti_00010(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00010, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00011", bundle: ..., traitCollection: ...)`
      static func nounFetti_00011(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00011, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00012", bundle: ..., traitCollection: ...)`
      static func nounFetti_00012(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00012, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00013", bundle: ..., traitCollection: ...)`
      static func nounFetti_00013(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00013, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00014", bundle: ..., traitCollection: ...)`
      static func nounFetti_00014(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00014, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00015", bundle: ..., traitCollection: ...)`
      static func nounFetti_00015(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00015, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00016", bundle: ..., traitCollection: ...)`
      static func nounFetti_00016(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00016, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00017", bundle: ..., traitCollection: ...)`
      static func nounFetti_00017(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00017, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00018", bundle: ..., traitCollection: ...)`
      static func nounFetti_00018(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00018, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00019", bundle: ..., traitCollection: ...)`
      static func nounFetti_00019(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00019, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00020", bundle: ..., traitCollection: ...)`
      static func nounFetti_00020(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00020, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00021", bundle: ..., traitCollection: ...)`
      static func nounFetti_00021(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00021, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00022", bundle: ..., traitCollection: ...)`
      static func nounFetti_00022(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00022, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00023", bundle: ..., traitCollection: ...)`
      static func nounFetti_00023(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00023, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00024", bundle: ..., traitCollection: ...)`
      static func nounFetti_00024(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00024, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00025", bundle: ..., traitCollection: ...)`
      static func nounFetti_00025(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00025, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00026", bundle: ..., traitCollection: ...)`
      static func nounFetti_00026(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00026, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00027", bundle: ..., traitCollection: ...)`
      static func nounFetti_00027(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00027, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00028", bundle: ..., traitCollection: ...)`
      static func nounFetti_00028(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00028, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00029", bundle: ..., traitCollection: ...)`
      static func nounFetti_00029(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00029, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00030", bundle: ..., traitCollection: ...)`
      static func nounFetti_00030(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00030, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00031", bundle: ..., traitCollection: ...)`
      static func nounFetti_00031(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00031, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00032", bundle: ..., traitCollection: ...)`
      static func nounFetti_00032(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00032, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00033", bundle: ..., traitCollection: ...)`
      static func nounFetti_00033(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00033, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00034", bundle: ..., traitCollection: ...)`
      static func nounFetti_00034(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00034, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00035", bundle: ..., traitCollection: ...)`
      static func nounFetti_00035(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00035, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00036", bundle: ..., traitCollection: ...)`
      static func nounFetti_00036(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00036, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00037", bundle: ..., traitCollection: ...)`
      static func nounFetti_00037(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00037, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00038", bundle: ..., traitCollection: ...)`
      static func nounFetti_00038(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00038, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00039", bundle: ..., traitCollection: ...)`
      static func nounFetti_00039(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00039, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00040", bundle: ..., traitCollection: ...)`
      static func nounFetti_00040(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00040, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00041", bundle: ..., traitCollection: ...)`
      static func nounFetti_00041(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00041, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00042", bundle: ..., traitCollection: ...)`
      static func nounFetti_00042(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00042, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00043", bundle: ..., traitCollection: ...)`
      static func nounFetti_00043(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00043, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00044", bundle: ..., traitCollection: ...)`
      static func nounFetti_00044(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00044, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00045", bundle: ..., traitCollection: ...)`
      static func nounFetti_00045(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00045, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00046", bundle: ..., traitCollection: ...)`
      static func nounFetti_00046(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00046, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00047", bundle: ..., traitCollection: ...)`
      static func nounFetti_00047(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00047, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00048", bundle: ..., traitCollection: ...)`
      static func nounFetti_00048(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00048, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00049", bundle: ..., traitCollection: ...)`
      static func nounFetti_00049(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00049, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00050", bundle: ..., traitCollection: ...)`
      static func nounFetti_00050(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00050, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00051", bundle: ..., traitCollection: ...)`
      static func nounFetti_00051(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00051, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00052", bundle: ..., traitCollection: ...)`
      static func nounFetti_00052(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00052, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00053", bundle: ..., traitCollection: ...)`
      static func nounFetti_00053(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00053, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00054", bundle: ..., traitCollection: ...)`
      static func nounFetti_00054(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00054, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00055", bundle: ..., traitCollection: ...)`
      static func nounFetti_00055(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00055, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00056", bundle: ..., traitCollection: ...)`
      static func nounFetti_00056(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00056, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00057", bundle: ..., traitCollection: ...)`
      static func nounFetti_00057(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00057, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00058", bundle: ..., traitCollection: ...)`
      static func nounFetti_00058(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00058, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00059", bundle: ..., traitCollection: ...)`
      static func nounFetti_00059(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00059, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00060", bundle: ..., traitCollection: ...)`
      static func nounFetti_00060(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00060, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00061", bundle: ..., traitCollection: ...)`
      static func nounFetti_00061(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00061, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00062", bundle: ..., traitCollection: ...)`
      static func nounFetti_00062(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00062, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00063", bundle: ..., traitCollection: ...)`
      static func nounFetti_00063(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00063, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00064", bundle: ..., traitCollection: ...)`
      static func nounFetti_00064(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00064, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00065", bundle: ..., traitCollection: ...)`
      static func nounFetti_00065(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00065, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00066", bundle: ..., traitCollection: ...)`
      static func nounFetti_00066(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00066, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00067", bundle: ..., traitCollection: ...)`
      static func nounFetti_00067(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00067, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00068", bundle: ..., traitCollection: ...)`
      static func nounFetti_00068(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00068, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00069", bundle: ..., traitCollection: ...)`
      static func nounFetti_00069(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00069, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00070", bundle: ..., traitCollection: ...)`
      static func nounFetti_00070(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00070, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00071", bundle: ..., traitCollection: ...)`
      static func nounFetti_00071(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00071, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00072", bundle: ..., traitCollection: ...)`
      static func nounFetti_00072(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00072, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00073", bundle: ..., traitCollection: ...)`
      static func nounFetti_00073(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00073, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00074", bundle: ..., traitCollection: ...)`
      static func nounFetti_00074(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00074, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00075", bundle: ..., traitCollection: ...)`
      static func nounFetti_00075(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00075, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00076", bundle: ..., traitCollection: ...)`
      static func nounFetti_00076(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00076, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00077", bundle: ..., traitCollection: ...)`
      static func nounFetti_00077(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00077, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00078", bundle: ..., traitCollection: ...)`
      static func nounFetti_00078(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00078, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00079", bundle: ..., traitCollection: ...)`
      static func nounFetti_00079(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00079, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00080", bundle: ..., traitCollection: ...)`
      static func nounFetti_00080(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00080, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00081", bundle: ..., traitCollection: ...)`
      static func nounFetti_00081(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00081, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00082", bundle: ..., traitCollection: ...)`
      static func nounFetti_00082(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00082, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00083", bundle: ..., traitCollection: ...)`
      static func nounFetti_00083(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00083, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00084", bundle: ..., traitCollection: ...)`
      static func nounFetti_00084(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00084, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00085", bundle: ..., traitCollection: ...)`
      static func nounFetti_00085(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00085, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00086", bundle: ..., traitCollection: ...)`
      static func nounFetti_00086(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00086, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00087", bundle: ..., traitCollection: ...)`
      static func nounFetti_00087(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00087, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00088", bundle: ..., traitCollection: ...)`
      static func nounFetti_00088(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00088, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00089", bundle: ..., traitCollection: ...)`
      static func nounFetti_00089(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00089, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00090", bundle: ..., traitCollection: ...)`
      static func nounFetti_00090(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00090, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00091", bundle: ..., traitCollection: ...)`
      static func nounFetti_00091(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00091, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00092", bundle: ..., traitCollection: ...)`
      static func nounFetti_00092(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00092, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00093", bundle: ..., traitCollection: ...)`
      static func nounFetti_00093(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00093, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00094", bundle: ..., traitCollection: ...)`
      static func nounFetti_00094(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00094, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00095", bundle: ..., traitCollection: ...)`
      static func nounFetti_00095(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00095, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00096", bundle: ..., traitCollection: ...)`
      static func nounFetti_00096(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00096, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00097", bundle: ..., traitCollection: ...)`
      static func nounFetti_00097(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00097, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00098", bundle: ..., traitCollection: ...)`
      static func nounFetti_00098(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00098, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00099", bundle: ..., traitCollection: ...)`
      static func nounFetti_00099(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00099, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00100", bundle: ..., traitCollection: ...)`
      static func nounFetti_00100(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00100, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00101", bundle: ..., traitCollection: ...)`
      static func nounFetti_00101(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00101, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00102", bundle: ..., traitCollection: ...)`
      static func nounFetti_00102(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00102, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00103", bundle: ..., traitCollection: ...)`
      static func nounFetti_00103(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00103, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00104", bundle: ..., traitCollection: ...)`
      static func nounFetti_00104(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00104, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00105", bundle: ..., traitCollection: ...)`
      static func nounFetti_00105(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00105, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00106", bundle: ..., traitCollection: ...)`
      static func nounFetti_00106(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00106, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00107", bundle: ..., traitCollection: ...)`
      static func nounFetti_00107(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00107, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00108", bundle: ..., traitCollection: ...)`
      static func nounFetti_00108(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00108, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00109", bundle: ..., traitCollection: ...)`
      static func nounFetti_00109(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00109, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00110", bundle: ..., traitCollection: ...)`
      static func nounFetti_00110(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00110, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00111", bundle: ..., traitCollection: ...)`
      static func nounFetti_00111(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00111, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00112", bundle: ..., traitCollection: ...)`
      static func nounFetti_00112(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00112, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00113", bundle: ..., traitCollection: ...)`
      static func nounFetti_00113(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00113, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00114", bundle: ..., traitCollection: ...)`
      static func nounFetti_00114(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00114, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00115", bundle: ..., traitCollection: ...)`
      static func nounFetti_00115(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00115, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00116", bundle: ..., traitCollection: ...)`
      static func nounFetti_00116(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00116, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00117", bundle: ..., traitCollection: ...)`
      static func nounFetti_00117(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00117, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00118", bundle: ..., traitCollection: ...)`
      static func nounFetti_00118(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00118, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "Noun-fetti_00119", bundle: ..., traitCollection: ...)`
      static func nounFetti_00119(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounfetti.nounFetti_00119, compatibleWith: traitCollection)
      }
      #endif

      fileprivate init() {}
    }

    /// This `R.image.nounsOnboarding1` struct is generated, and contains static references to 120 images.
    struct nounsOnboarding1 {
      /// Image `nouns-onboarding-1_000`.
      static let nounsOnboarding1_000 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_000")
      /// Image `nouns-onboarding-1_001`.
      static let nounsOnboarding1_001 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_001")
      /// Image `nouns-onboarding-1_002`.
      static let nounsOnboarding1_002 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_002")
      /// Image `nouns-onboarding-1_003`.
      static let nounsOnboarding1_003 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_003")
      /// Image `nouns-onboarding-1_004`.
      static let nounsOnboarding1_004 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_004")
      /// Image `nouns-onboarding-1_005`.
      static let nounsOnboarding1_005 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_005")
      /// Image `nouns-onboarding-1_006`.
      static let nounsOnboarding1_006 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_006")
      /// Image `nouns-onboarding-1_007`.
      static let nounsOnboarding1_007 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_007")
      /// Image `nouns-onboarding-1_008`.
      static let nounsOnboarding1_008 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_008")
      /// Image `nouns-onboarding-1_009`.
      static let nounsOnboarding1_009 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_009")
      /// Image `nouns-onboarding-1_010`.
      static let nounsOnboarding1_010 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_010")
      /// Image `nouns-onboarding-1_011`.
      static let nounsOnboarding1_011 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_011")
      /// Image `nouns-onboarding-1_012`.
      static let nounsOnboarding1_012 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_012")
      /// Image `nouns-onboarding-1_013`.
      static let nounsOnboarding1_013 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_013")
      /// Image `nouns-onboarding-1_014`.
      static let nounsOnboarding1_014 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_014")
      /// Image `nouns-onboarding-1_015`.
      static let nounsOnboarding1_015 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_015")
      /// Image `nouns-onboarding-1_016`.
      static let nounsOnboarding1_016 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_016")
      /// Image `nouns-onboarding-1_017`.
      static let nounsOnboarding1_017 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_017")
      /// Image `nouns-onboarding-1_018`.
      static let nounsOnboarding1_018 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_018")
      /// Image `nouns-onboarding-1_019`.
      static let nounsOnboarding1_019 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_019")
      /// Image `nouns-onboarding-1_020`.
      static let nounsOnboarding1_020 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_020")
      /// Image `nouns-onboarding-1_021`.
      static let nounsOnboarding1_021 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_021")
      /// Image `nouns-onboarding-1_022`.
      static let nounsOnboarding1_022 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_022")
      /// Image `nouns-onboarding-1_023`.
      static let nounsOnboarding1_023 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_023")
      /// Image `nouns-onboarding-1_024`.
      static let nounsOnboarding1_024 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_024")
      /// Image `nouns-onboarding-1_025`.
      static let nounsOnboarding1_025 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_025")
      /// Image `nouns-onboarding-1_026`.
      static let nounsOnboarding1_026 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_026")
      /// Image `nouns-onboarding-1_027`.
      static let nounsOnboarding1_027 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_027")
      /// Image `nouns-onboarding-1_028`.
      static let nounsOnboarding1_028 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_028")
      /// Image `nouns-onboarding-1_029`.
      static let nounsOnboarding1_029 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_029")
      /// Image `nouns-onboarding-1_030`.
      static let nounsOnboarding1_030 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_030")
      /// Image `nouns-onboarding-1_031`.
      static let nounsOnboarding1_031 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_031")
      /// Image `nouns-onboarding-1_032`.
      static let nounsOnboarding1_032 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_032")
      /// Image `nouns-onboarding-1_033`.
      static let nounsOnboarding1_033 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_033")
      /// Image `nouns-onboarding-1_034`.
      static let nounsOnboarding1_034 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_034")
      /// Image `nouns-onboarding-1_035`.
      static let nounsOnboarding1_035 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_035")
      /// Image `nouns-onboarding-1_036`.
      static let nounsOnboarding1_036 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_036")
      /// Image `nouns-onboarding-1_037`.
      static let nounsOnboarding1_037 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_037")
      /// Image `nouns-onboarding-1_038`.
      static let nounsOnboarding1_038 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_038")
      /// Image `nouns-onboarding-1_039`.
      static let nounsOnboarding1_039 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_039")
      /// Image `nouns-onboarding-1_040`.
      static let nounsOnboarding1_040 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_040")
      /// Image `nouns-onboarding-1_041`.
      static let nounsOnboarding1_041 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_041")
      /// Image `nouns-onboarding-1_042`.
      static let nounsOnboarding1_042 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_042")
      /// Image `nouns-onboarding-1_043`.
      static let nounsOnboarding1_043 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_043")
      /// Image `nouns-onboarding-1_044`.
      static let nounsOnboarding1_044 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_044")
      /// Image `nouns-onboarding-1_045`.
      static let nounsOnboarding1_045 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_045")
      /// Image `nouns-onboarding-1_046`.
      static let nounsOnboarding1_046 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_046")
      /// Image `nouns-onboarding-1_047`.
      static let nounsOnboarding1_047 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_047")
      /// Image `nouns-onboarding-1_048`.
      static let nounsOnboarding1_048 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_048")
      /// Image `nouns-onboarding-1_049`.
      static let nounsOnboarding1_049 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_049")
      /// Image `nouns-onboarding-1_050`.
      static let nounsOnboarding1_050 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_050")
      /// Image `nouns-onboarding-1_051`.
      static let nounsOnboarding1_051 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_051")
      /// Image `nouns-onboarding-1_052`.
      static let nounsOnboarding1_052 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_052")
      /// Image `nouns-onboarding-1_053`.
      static let nounsOnboarding1_053 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_053")
      /// Image `nouns-onboarding-1_054`.
      static let nounsOnboarding1_054 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_054")
      /// Image `nouns-onboarding-1_055`.
      static let nounsOnboarding1_055 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_055")
      /// Image `nouns-onboarding-1_056`.
      static let nounsOnboarding1_056 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_056")
      /// Image `nouns-onboarding-1_057`.
      static let nounsOnboarding1_057 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_057")
      /// Image `nouns-onboarding-1_058`.
      static let nounsOnboarding1_058 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_058")
      /// Image `nouns-onboarding-1_059`.
      static let nounsOnboarding1_059 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_059")
      /// Image `nouns-onboarding-1_060`.
      static let nounsOnboarding1_060 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_060")
      /// Image `nouns-onboarding-1_061`.
      static let nounsOnboarding1_061 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_061")
      /// Image `nouns-onboarding-1_062`.
      static let nounsOnboarding1_062 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_062")
      /// Image `nouns-onboarding-1_063`.
      static let nounsOnboarding1_063 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_063")
      /// Image `nouns-onboarding-1_064`.
      static let nounsOnboarding1_064 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_064")
      /// Image `nouns-onboarding-1_065`.
      static let nounsOnboarding1_065 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_065")
      /// Image `nouns-onboarding-1_066`.
      static let nounsOnboarding1_066 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_066")
      /// Image `nouns-onboarding-1_067`.
      static let nounsOnboarding1_067 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_067")
      /// Image `nouns-onboarding-1_068`.
      static let nounsOnboarding1_068 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_068")
      /// Image `nouns-onboarding-1_069`.
      static let nounsOnboarding1_069 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_069")
      /// Image `nouns-onboarding-1_070`.
      static let nounsOnboarding1_070 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_070")
      /// Image `nouns-onboarding-1_071`.
      static let nounsOnboarding1_071 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_071")
      /// Image `nouns-onboarding-1_072`.
      static let nounsOnboarding1_072 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_072")
      /// Image `nouns-onboarding-1_073`.
      static let nounsOnboarding1_073 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_073")
      /// Image `nouns-onboarding-1_074`.
      static let nounsOnboarding1_074 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_074")
      /// Image `nouns-onboarding-1_075`.
      static let nounsOnboarding1_075 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_075")
      /// Image `nouns-onboarding-1_076`.
      static let nounsOnboarding1_076 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_076")
      /// Image `nouns-onboarding-1_077`.
      static let nounsOnboarding1_077 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_077")
      /// Image `nouns-onboarding-1_078`.
      static let nounsOnboarding1_078 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_078")
      /// Image `nouns-onboarding-1_079`.
      static let nounsOnboarding1_079 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_079")
      /// Image `nouns-onboarding-1_080`.
      static let nounsOnboarding1_080 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_080")
      /// Image `nouns-onboarding-1_081`.
      static let nounsOnboarding1_081 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_081")
      /// Image `nouns-onboarding-1_082`.
      static let nounsOnboarding1_082 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_082")
      /// Image `nouns-onboarding-1_083`.
      static let nounsOnboarding1_083 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_083")
      /// Image `nouns-onboarding-1_084`.
      static let nounsOnboarding1_084 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_084")
      /// Image `nouns-onboarding-1_085`.
      static let nounsOnboarding1_085 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_085")
      /// Image `nouns-onboarding-1_086`.
      static let nounsOnboarding1_086 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_086")
      /// Image `nouns-onboarding-1_087`.
      static let nounsOnboarding1_087 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_087")
      /// Image `nouns-onboarding-1_088`.
      static let nounsOnboarding1_088 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_088")
      /// Image `nouns-onboarding-1_089`.
      static let nounsOnboarding1_089 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_089")
      /// Image `nouns-onboarding-1_090`.
      static let nounsOnboarding1_090 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_090")
      /// Image `nouns-onboarding-1_091`.
      static let nounsOnboarding1_091 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_091")
      /// Image `nouns-onboarding-1_092`.
      static let nounsOnboarding1_092 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_092")
      /// Image `nouns-onboarding-1_093`.
      static let nounsOnboarding1_093 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_093")
      /// Image `nouns-onboarding-1_094`.
      static let nounsOnboarding1_094 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_094")
      /// Image `nouns-onboarding-1_095`.
      static let nounsOnboarding1_095 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_095")
      /// Image `nouns-onboarding-1_096`.
      static let nounsOnboarding1_096 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_096")
      /// Image `nouns-onboarding-1_097`.
      static let nounsOnboarding1_097 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_097")
      /// Image `nouns-onboarding-1_098`.
      static let nounsOnboarding1_098 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_098")
      /// Image `nouns-onboarding-1_099`.
      static let nounsOnboarding1_099 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_099")
      /// Image `nouns-onboarding-1_100`.
      static let nounsOnboarding1_100 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_100")
      /// Image `nouns-onboarding-1_101`.
      static let nounsOnboarding1_101 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_101")
      /// Image `nouns-onboarding-1_102`.
      static let nounsOnboarding1_102 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_102")
      /// Image `nouns-onboarding-1_103`.
      static let nounsOnboarding1_103 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_103")
      /// Image `nouns-onboarding-1_104`.
      static let nounsOnboarding1_104 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_104")
      /// Image `nouns-onboarding-1_105`.
      static let nounsOnboarding1_105 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_105")
      /// Image `nouns-onboarding-1_106`.
      static let nounsOnboarding1_106 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_106")
      /// Image `nouns-onboarding-1_107`.
      static let nounsOnboarding1_107 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_107")
      /// Image `nouns-onboarding-1_108`.
      static let nounsOnboarding1_108 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_108")
      /// Image `nouns-onboarding-1_109`.
      static let nounsOnboarding1_109 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_109")
      /// Image `nouns-onboarding-1_110`.
      static let nounsOnboarding1_110 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_110")
      /// Image `nouns-onboarding-1_111`.
      static let nounsOnboarding1_111 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_111")
      /// Image `nouns-onboarding-1_112`.
      static let nounsOnboarding1_112 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_112")
      /// Image `nouns-onboarding-1_113`.
      static let nounsOnboarding1_113 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_113")
      /// Image `nouns-onboarding-1_114`.
      static let nounsOnboarding1_114 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_114")
      /// Image `nouns-onboarding-1_115`.
      static let nounsOnboarding1_115 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_115")
      /// Image `nouns-onboarding-1_116`.
      static let nounsOnboarding1_116 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_116")
      /// Image `nouns-onboarding-1_117`.
      static let nounsOnboarding1_117 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_117")
      /// Image `nouns-onboarding-1_118`.
      static let nounsOnboarding1_118 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_118")
      /// Image `nouns-onboarding-1_119`.
      static let nounsOnboarding1_119 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-1/nouns-onboarding-1_119")

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_000", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_000(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_000, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_001", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_001(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_001, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_002", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_002(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_002, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_003", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_003(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_003, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_004", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_004(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_004, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_005", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_005(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_005, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_006", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_006(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_006, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_007", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_007(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_007, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_008", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_008(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_008, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_009", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_009(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_009, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_010", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_010(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_010, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_011", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_011(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_011, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_012", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_012(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_012, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_013", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_013(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_013, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_014", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_014(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_014, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_015", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_015(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_015, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_016", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_016(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_016, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_017", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_017(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_017, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_018", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_018(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_018, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_019", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_019(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_019, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_020", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_020(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_020, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_021", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_021(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_021, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_022", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_022(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_022, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_023", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_023(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_023, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_024", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_024(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_024, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_025", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_025(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_025, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_026", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_026(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_026, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_027", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_027(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_027, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_028", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_028(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_028, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_029", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_029(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_029, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_030", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_030(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_030, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_031", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_031(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_031, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_032", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_032(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_032, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_033", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_033(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_033, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_034", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_034(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_034, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_035", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_035(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_035, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_036", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_036(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_036, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_037", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_037(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_037, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_038", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_038(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_038, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_039", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_039(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_039, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_040", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_040(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_040, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_041", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_041(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_041, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_042", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_042(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_042, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_043", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_043(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_043, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_044", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_044(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_044, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_045", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_045(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_045, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_046", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_046(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_046, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_047", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_047(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_047, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_048", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_048(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_048, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_049", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_049(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_049, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_050", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_050(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_050, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_051", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_051(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_051, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_052", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_052(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_052, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_053", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_053(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_053, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_054", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_054(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_054, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_055", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_055(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_055, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_056", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_056(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_056, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_057", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_057(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_057, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_058", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_058(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_058, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_059", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_059(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_059, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_060", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_060(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_060, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_061", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_061(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_061, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_062", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_062(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_062, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_063", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_063(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_063, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_064", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_064(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_064, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_065", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_065(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_065, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_066", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_066(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_066, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_067", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_067(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_067, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_068", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_068(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_068, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_069", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_069(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_069, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_070", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_070(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_070, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_071", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_071(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_071, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_072", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_072(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_072, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_073", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_073(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_073, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_074", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_074(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_074, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_075", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_075(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_075, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_076", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_076(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_076, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_077", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_077(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_077, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_078", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_078(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_078, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_079", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_079(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_079, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_080", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_080(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_080, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_081", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_081(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_081, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_082", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_082(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_082, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_083", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_083(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_083, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_084", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_084(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_084, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_085", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_085(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_085, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_086", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_086(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_086, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_087", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_087(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_087, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_088", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_088(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_088, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_089", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_089(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_089, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_090", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_090(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_090, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_091", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_091(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_091, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_092", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_092(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_092, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_093", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_093(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_093, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_094", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_094(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_094, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_095", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_095(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_095, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_096", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_096(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_096, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_097", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_097(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_097, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_098", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_098(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_098, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_099", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_099(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_099, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_100", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_100(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_100, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_101", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_101(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_101, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_102", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_102(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_102, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_103", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_103(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_103, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_104", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_104(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_104, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_105", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_105(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_105, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_106", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_106(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_106, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_107", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_107(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_107, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_108", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_108(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_108, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_109", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_109(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_109, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_110", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_110(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_110, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_111", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_111(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_111, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_112", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_112(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_112, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_113", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_113(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_113, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_114", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_114(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_114, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_115", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_115(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_115, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_116", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_116(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_116, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_117", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_117(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_117, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_118", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_118(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_118, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-1_119", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding1_119(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding1.nounsOnboarding1_119, compatibleWith: traitCollection)
      }
      #endif

      fileprivate init() {}
    }

    /// This `R.image.nounsOnboarding2` struct is generated, and contains static references to 120 images.
    struct nounsOnboarding2 {
      /// Image `nouns-onboarding-2_000`.
      static let nounsOnboarding2_000 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_000")
      /// Image `nouns-onboarding-2_001`.
      static let nounsOnboarding2_001 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_001")
      /// Image `nouns-onboarding-2_002`.
      static let nounsOnboarding2_002 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_002")
      /// Image `nouns-onboarding-2_003`.
      static let nounsOnboarding2_003 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_003")
      /// Image `nouns-onboarding-2_004`.
      static let nounsOnboarding2_004 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_004")
      /// Image `nouns-onboarding-2_005`.
      static let nounsOnboarding2_005 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_005")
      /// Image `nouns-onboarding-2_006`.
      static let nounsOnboarding2_006 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_006")
      /// Image `nouns-onboarding-2_007`.
      static let nounsOnboarding2_007 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_007")
      /// Image `nouns-onboarding-2_008`.
      static let nounsOnboarding2_008 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_008")
      /// Image `nouns-onboarding-2_009`.
      static let nounsOnboarding2_009 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_009")
      /// Image `nouns-onboarding-2_010`.
      static let nounsOnboarding2_010 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_010")
      /// Image `nouns-onboarding-2_011`.
      static let nounsOnboarding2_011 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_011")
      /// Image `nouns-onboarding-2_012`.
      static let nounsOnboarding2_012 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_012")
      /// Image `nouns-onboarding-2_013`.
      static let nounsOnboarding2_013 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_013")
      /// Image `nouns-onboarding-2_014`.
      static let nounsOnboarding2_014 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_014")
      /// Image `nouns-onboarding-2_015`.
      static let nounsOnboarding2_015 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_015")
      /// Image `nouns-onboarding-2_016`.
      static let nounsOnboarding2_016 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_016")
      /// Image `nouns-onboarding-2_017`.
      static let nounsOnboarding2_017 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_017")
      /// Image `nouns-onboarding-2_018`.
      static let nounsOnboarding2_018 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_018")
      /// Image `nouns-onboarding-2_019`.
      static let nounsOnboarding2_019 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_019")
      /// Image `nouns-onboarding-2_020`.
      static let nounsOnboarding2_020 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_020")
      /// Image `nouns-onboarding-2_021`.
      static let nounsOnboarding2_021 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_021")
      /// Image `nouns-onboarding-2_022`.
      static let nounsOnboarding2_022 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_022")
      /// Image `nouns-onboarding-2_023`.
      static let nounsOnboarding2_023 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_023")
      /// Image `nouns-onboarding-2_024`.
      static let nounsOnboarding2_024 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_024")
      /// Image `nouns-onboarding-2_025`.
      static let nounsOnboarding2_025 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_025")
      /// Image `nouns-onboarding-2_026`.
      static let nounsOnboarding2_026 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_026")
      /// Image `nouns-onboarding-2_027`.
      static let nounsOnboarding2_027 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_027")
      /// Image `nouns-onboarding-2_028`.
      static let nounsOnboarding2_028 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_028")
      /// Image `nouns-onboarding-2_029`.
      static let nounsOnboarding2_029 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_029")
      /// Image `nouns-onboarding-2_030`.
      static let nounsOnboarding2_030 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_030")
      /// Image `nouns-onboarding-2_031`.
      static let nounsOnboarding2_031 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_031")
      /// Image `nouns-onboarding-2_032`.
      static let nounsOnboarding2_032 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_032")
      /// Image `nouns-onboarding-2_033`.
      static let nounsOnboarding2_033 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_033")
      /// Image `nouns-onboarding-2_034`.
      static let nounsOnboarding2_034 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_034")
      /// Image `nouns-onboarding-2_035`.
      static let nounsOnboarding2_035 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_035")
      /// Image `nouns-onboarding-2_036`.
      static let nounsOnboarding2_036 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_036")
      /// Image `nouns-onboarding-2_037`.
      static let nounsOnboarding2_037 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_037")
      /// Image `nouns-onboarding-2_038`.
      static let nounsOnboarding2_038 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_038")
      /// Image `nouns-onboarding-2_039`.
      static let nounsOnboarding2_039 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_039")
      /// Image `nouns-onboarding-2_040`.
      static let nounsOnboarding2_040 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_040")
      /// Image `nouns-onboarding-2_041`.
      static let nounsOnboarding2_041 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_041")
      /// Image `nouns-onboarding-2_042`.
      static let nounsOnboarding2_042 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_042")
      /// Image `nouns-onboarding-2_043`.
      static let nounsOnboarding2_043 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_043")
      /// Image `nouns-onboarding-2_044`.
      static let nounsOnboarding2_044 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_044")
      /// Image `nouns-onboarding-2_045`.
      static let nounsOnboarding2_045 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_045")
      /// Image `nouns-onboarding-2_046`.
      static let nounsOnboarding2_046 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_046")
      /// Image `nouns-onboarding-2_047`.
      static let nounsOnboarding2_047 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_047")
      /// Image `nouns-onboarding-2_048`.
      static let nounsOnboarding2_048 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_048")
      /// Image `nouns-onboarding-2_049`.
      static let nounsOnboarding2_049 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_049")
      /// Image `nouns-onboarding-2_050`.
      static let nounsOnboarding2_050 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_050")
      /// Image `nouns-onboarding-2_051`.
      static let nounsOnboarding2_051 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_051")
      /// Image `nouns-onboarding-2_052`.
      static let nounsOnboarding2_052 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_052")
      /// Image `nouns-onboarding-2_053`.
      static let nounsOnboarding2_053 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_053")
      /// Image `nouns-onboarding-2_054`.
      static let nounsOnboarding2_054 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_054")
      /// Image `nouns-onboarding-2_055`.
      static let nounsOnboarding2_055 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_055")
      /// Image `nouns-onboarding-2_056`.
      static let nounsOnboarding2_056 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_056")
      /// Image `nouns-onboarding-2_057`.
      static let nounsOnboarding2_057 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_057")
      /// Image `nouns-onboarding-2_058`.
      static let nounsOnboarding2_058 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_058")
      /// Image `nouns-onboarding-2_059`.
      static let nounsOnboarding2_059 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_059")
      /// Image `nouns-onboarding-2_060`.
      static let nounsOnboarding2_060 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_060")
      /// Image `nouns-onboarding-2_061`.
      static let nounsOnboarding2_061 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_061")
      /// Image `nouns-onboarding-2_062`.
      static let nounsOnboarding2_062 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_062")
      /// Image `nouns-onboarding-2_063`.
      static let nounsOnboarding2_063 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_063")
      /// Image `nouns-onboarding-2_064`.
      static let nounsOnboarding2_064 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_064")
      /// Image `nouns-onboarding-2_065`.
      static let nounsOnboarding2_065 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_065")
      /// Image `nouns-onboarding-2_066`.
      static let nounsOnboarding2_066 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_066")
      /// Image `nouns-onboarding-2_067`.
      static let nounsOnboarding2_067 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_067")
      /// Image `nouns-onboarding-2_068`.
      static let nounsOnboarding2_068 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_068")
      /// Image `nouns-onboarding-2_069`.
      static let nounsOnboarding2_069 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_069")
      /// Image `nouns-onboarding-2_070`.
      static let nounsOnboarding2_070 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_070")
      /// Image `nouns-onboarding-2_071`.
      static let nounsOnboarding2_071 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_071")
      /// Image `nouns-onboarding-2_072`.
      static let nounsOnboarding2_072 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_072")
      /// Image `nouns-onboarding-2_073`.
      static let nounsOnboarding2_073 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_073")
      /// Image `nouns-onboarding-2_074`.
      static let nounsOnboarding2_074 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_074")
      /// Image `nouns-onboarding-2_075`.
      static let nounsOnboarding2_075 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_075")
      /// Image `nouns-onboarding-2_076`.
      static let nounsOnboarding2_076 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_076")
      /// Image `nouns-onboarding-2_077`.
      static let nounsOnboarding2_077 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_077")
      /// Image `nouns-onboarding-2_078`.
      static let nounsOnboarding2_078 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_078")
      /// Image `nouns-onboarding-2_079`.
      static let nounsOnboarding2_079 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_079")
      /// Image `nouns-onboarding-2_080`.
      static let nounsOnboarding2_080 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_080")
      /// Image `nouns-onboarding-2_081`.
      static let nounsOnboarding2_081 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_081")
      /// Image `nouns-onboarding-2_082`.
      static let nounsOnboarding2_082 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_082")
      /// Image `nouns-onboarding-2_083`.
      static let nounsOnboarding2_083 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_083")
      /// Image `nouns-onboarding-2_084`.
      static let nounsOnboarding2_084 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_084")
      /// Image `nouns-onboarding-2_085`.
      static let nounsOnboarding2_085 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_085")
      /// Image `nouns-onboarding-2_086`.
      static let nounsOnboarding2_086 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_086")
      /// Image `nouns-onboarding-2_087`.
      static let nounsOnboarding2_087 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_087")
      /// Image `nouns-onboarding-2_088`.
      static let nounsOnboarding2_088 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_088")
      /// Image `nouns-onboarding-2_089`.
      static let nounsOnboarding2_089 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_089")
      /// Image `nouns-onboarding-2_090`.
      static let nounsOnboarding2_090 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_090")
      /// Image `nouns-onboarding-2_091`.
      static let nounsOnboarding2_091 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_091")
      /// Image `nouns-onboarding-2_092`.
      static let nounsOnboarding2_092 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_092")
      /// Image `nouns-onboarding-2_093`.
      static let nounsOnboarding2_093 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_093")
      /// Image `nouns-onboarding-2_094`.
      static let nounsOnboarding2_094 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_094")
      /// Image `nouns-onboarding-2_095`.
      static let nounsOnboarding2_095 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_095")
      /// Image `nouns-onboarding-2_096`.
      static let nounsOnboarding2_096 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_096")
      /// Image `nouns-onboarding-2_097`.
      static let nounsOnboarding2_097 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_097")
      /// Image `nouns-onboarding-2_098`.
      static let nounsOnboarding2_098 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_098")
      /// Image `nouns-onboarding-2_099`.
      static let nounsOnboarding2_099 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_099")
      /// Image `nouns-onboarding-2_100`.
      static let nounsOnboarding2_100 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_100")
      /// Image `nouns-onboarding-2_101`.
      static let nounsOnboarding2_101 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_101")
      /// Image `nouns-onboarding-2_102`.
      static let nounsOnboarding2_102 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_102")
      /// Image `nouns-onboarding-2_103`.
      static let nounsOnboarding2_103 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_103")
      /// Image `nouns-onboarding-2_104`.
      static let nounsOnboarding2_104 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_104")
      /// Image `nouns-onboarding-2_105`.
      static let nounsOnboarding2_105 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_105")
      /// Image `nouns-onboarding-2_106`.
      static let nounsOnboarding2_106 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_106")
      /// Image `nouns-onboarding-2_107`.
      static let nounsOnboarding2_107 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_107")
      /// Image `nouns-onboarding-2_108`.
      static let nounsOnboarding2_108 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_108")
      /// Image `nouns-onboarding-2_109`.
      static let nounsOnboarding2_109 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_109")
      /// Image `nouns-onboarding-2_110`.
      static let nounsOnboarding2_110 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_110")
      /// Image `nouns-onboarding-2_111`.
      static let nounsOnboarding2_111 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_111")
      /// Image `nouns-onboarding-2_112`.
      static let nounsOnboarding2_112 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_112")
      /// Image `nouns-onboarding-2_113`.
      static let nounsOnboarding2_113 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_113")
      /// Image `nouns-onboarding-2_114`.
      static let nounsOnboarding2_114 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_114")
      /// Image `nouns-onboarding-2_115`.
      static let nounsOnboarding2_115 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_115")
      /// Image `nouns-onboarding-2_116`.
      static let nounsOnboarding2_116 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_116")
      /// Image `nouns-onboarding-2_117`.
      static let nounsOnboarding2_117 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_117")
      /// Image `nouns-onboarding-2_118`.
      static let nounsOnboarding2_118 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_118")
      /// Image `nouns-onboarding-2_119`.
      static let nounsOnboarding2_119 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-2/nouns-onboarding-2_119")

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_000", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_000(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_000, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_001", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_001(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_001, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_002", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_002(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_002, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_003", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_003(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_003, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_004", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_004(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_004, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_005", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_005(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_005, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_006", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_006(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_006, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_007", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_007(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_007, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_008", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_008(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_008, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_009", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_009(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_009, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_010", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_010(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_010, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_011", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_011(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_011, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_012", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_012(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_012, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_013", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_013(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_013, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_014", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_014(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_014, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_015", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_015(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_015, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_016", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_016(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_016, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_017", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_017(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_017, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_018", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_018(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_018, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_019", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_019(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_019, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_020", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_020(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_020, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_021", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_021(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_021, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_022", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_022(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_022, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_023", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_023(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_023, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_024", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_024(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_024, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_025", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_025(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_025, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_026", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_026(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_026, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_027", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_027(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_027, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_028", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_028(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_028, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_029", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_029(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_029, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_030", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_030(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_030, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_031", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_031(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_031, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_032", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_032(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_032, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_033", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_033(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_033, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_034", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_034(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_034, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_035", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_035(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_035, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_036", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_036(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_036, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_037", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_037(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_037, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_038", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_038(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_038, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_039", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_039(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_039, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_040", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_040(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_040, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_041", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_041(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_041, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_042", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_042(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_042, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_043", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_043(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_043, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_044", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_044(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_044, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_045", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_045(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_045, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_046", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_046(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_046, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_047", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_047(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_047, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_048", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_048(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_048, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_049", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_049(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_049, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_050", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_050(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_050, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_051", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_051(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_051, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_052", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_052(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_052, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_053", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_053(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_053, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_054", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_054(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_054, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_055", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_055(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_055, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_056", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_056(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_056, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_057", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_057(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_057, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_058", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_058(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_058, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_059", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_059(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_059, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_060", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_060(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_060, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_061", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_061(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_061, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_062", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_062(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_062, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_063", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_063(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_063, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_064", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_064(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_064, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_065", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_065(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_065, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_066", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_066(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_066, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_067", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_067(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_067, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_068", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_068(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_068, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_069", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_069(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_069, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_070", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_070(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_070, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_071", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_071(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_071, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_072", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_072(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_072, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_073", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_073(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_073, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_074", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_074(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_074, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_075", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_075(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_075, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_076", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_076(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_076, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_077", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_077(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_077, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_078", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_078(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_078, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_079", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_079(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_079, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_080", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_080(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_080, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_081", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_081(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_081, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_082", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_082(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_082, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_083", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_083(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_083, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_084", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_084(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_084, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_085", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_085(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_085, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_086", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_086(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_086, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_087", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_087(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_087, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_088", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_088(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_088, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_089", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_089(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_089, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_090", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_090(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_090, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_091", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_091(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_091, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_092", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_092(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_092, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_093", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_093(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_093, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_094", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_094(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_094, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_095", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_095(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_095, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_096", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_096(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_096, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_097", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_097(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_097, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_098", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_098(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_098, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_099", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_099(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_099, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_100", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_100(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_100, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_101", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_101(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_101, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_102", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_102(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_102, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_103", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_103(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_103, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_104", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_104(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_104, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_105", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_105(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_105, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_106", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_106(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_106, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_107", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_107(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_107, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_108", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_108(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_108, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_109", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_109(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_109, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_110", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_110(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_110, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_111", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_111(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_111, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_112", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_112(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_112, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_113", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_113(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_113, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_114", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_114(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_114, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_115", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_115(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_115, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_116", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_116(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_116, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_117", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_117(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_117, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_118", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_118(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_118, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-2_119", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding2_119(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding2.nounsOnboarding2_119, compatibleWith: traitCollection)
      }
      #endif

      fileprivate init() {}
    }

    /// This `R.image.nounsOnboarding3` struct is generated, and contains static references to 120 images.
    struct nounsOnboarding3 {
      /// Image `nouns-onboarding-3_000`.
      static let nounsOnboarding3_000 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_000")
      /// Image `nouns-onboarding-3_001`.
      static let nounsOnboarding3_001 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_001")
      /// Image `nouns-onboarding-3_002`.
      static let nounsOnboarding3_002 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_002")
      /// Image `nouns-onboarding-3_003`.
      static let nounsOnboarding3_003 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_003")
      /// Image `nouns-onboarding-3_004`.
      static let nounsOnboarding3_004 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_004")
      /// Image `nouns-onboarding-3_005`.
      static let nounsOnboarding3_005 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_005")
      /// Image `nouns-onboarding-3_006`.
      static let nounsOnboarding3_006 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_006")
      /// Image `nouns-onboarding-3_007`.
      static let nounsOnboarding3_007 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_007")
      /// Image `nouns-onboarding-3_008`.
      static let nounsOnboarding3_008 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_008")
      /// Image `nouns-onboarding-3_009`.
      static let nounsOnboarding3_009 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_009")
      /// Image `nouns-onboarding-3_010`.
      static let nounsOnboarding3_010 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_010")
      /// Image `nouns-onboarding-3_011`.
      static let nounsOnboarding3_011 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_011")
      /// Image `nouns-onboarding-3_012`.
      static let nounsOnboarding3_012 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_012")
      /// Image `nouns-onboarding-3_013`.
      static let nounsOnboarding3_013 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_013")
      /// Image `nouns-onboarding-3_014`.
      static let nounsOnboarding3_014 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_014")
      /// Image `nouns-onboarding-3_015`.
      static let nounsOnboarding3_015 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_015")
      /// Image `nouns-onboarding-3_016`.
      static let nounsOnboarding3_016 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_016")
      /// Image `nouns-onboarding-3_017`.
      static let nounsOnboarding3_017 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_017")
      /// Image `nouns-onboarding-3_018`.
      static let nounsOnboarding3_018 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_018")
      /// Image `nouns-onboarding-3_019`.
      static let nounsOnboarding3_019 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_019")
      /// Image `nouns-onboarding-3_020`.
      static let nounsOnboarding3_020 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_020")
      /// Image `nouns-onboarding-3_021`.
      static let nounsOnboarding3_021 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_021")
      /// Image `nouns-onboarding-3_022`.
      static let nounsOnboarding3_022 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_022")
      /// Image `nouns-onboarding-3_023`.
      static let nounsOnboarding3_023 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_023")
      /// Image `nouns-onboarding-3_024`.
      static let nounsOnboarding3_024 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_024")
      /// Image `nouns-onboarding-3_025`.
      static let nounsOnboarding3_025 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_025")
      /// Image `nouns-onboarding-3_026`.
      static let nounsOnboarding3_026 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_026")
      /// Image `nouns-onboarding-3_027`.
      static let nounsOnboarding3_027 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_027")
      /// Image `nouns-onboarding-3_028`.
      static let nounsOnboarding3_028 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_028")
      /// Image `nouns-onboarding-3_029`.
      static let nounsOnboarding3_029 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_029")
      /// Image `nouns-onboarding-3_030`.
      static let nounsOnboarding3_030 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_030")
      /// Image `nouns-onboarding-3_031`.
      static let nounsOnboarding3_031 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_031")
      /// Image `nouns-onboarding-3_032`.
      static let nounsOnboarding3_032 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_032")
      /// Image `nouns-onboarding-3_033`.
      static let nounsOnboarding3_033 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_033")
      /// Image `nouns-onboarding-3_034`.
      static let nounsOnboarding3_034 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_034")
      /// Image `nouns-onboarding-3_035`.
      static let nounsOnboarding3_035 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_035")
      /// Image `nouns-onboarding-3_036`.
      static let nounsOnboarding3_036 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_036")
      /// Image `nouns-onboarding-3_037`.
      static let nounsOnboarding3_037 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_037")
      /// Image `nouns-onboarding-3_038`.
      static let nounsOnboarding3_038 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_038")
      /// Image `nouns-onboarding-3_039`.
      static let nounsOnboarding3_039 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_039")
      /// Image `nouns-onboarding-3_040`.
      static let nounsOnboarding3_040 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_040")
      /// Image `nouns-onboarding-3_041`.
      static let nounsOnboarding3_041 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_041")
      /// Image `nouns-onboarding-3_042`.
      static let nounsOnboarding3_042 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_042")
      /// Image `nouns-onboarding-3_043`.
      static let nounsOnboarding3_043 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_043")
      /// Image `nouns-onboarding-3_044`.
      static let nounsOnboarding3_044 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_044")
      /// Image `nouns-onboarding-3_045`.
      static let nounsOnboarding3_045 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_045")
      /// Image `nouns-onboarding-3_046`.
      static let nounsOnboarding3_046 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_046")
      /// Image `nouns-onboarding-3_047`.
      static let nounsOnboarding3_047 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_047")
      /// Image `nouns-onboarding-3_048`.
      static let nounsOnboarding3_048 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_048")
      /// Image `nouns-onboarding-3_049`.
      static let nounsOnboarding3_049 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_049")
      /// Image `nouns-onboarding-3_050`.
      static let nounsOnboarding3_050 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_050")
      /// Image `nouns-onboarding-3_051`.
      static let nounsOnboarding3_051 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_051")
      /// Image `nouns-onboarding-3_052`.
      static let nounsOnboarding3_052 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_052")
      /// Image `nouns-onboarding-3_053`.
      static let nounsOnboarding3_053 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_053")
      /// Image `nouns-onboarding-3_054`.
      static let nounsOnboarding3_054 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_054")
      /// Image `nouns-onboarding-3_055`.
      static let nounsOnboarding3_055 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_055")
      /// Image `nouns-onboarding-3_056`.
      static let nounsOnboarding3_056 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_056")
      /// Image `nouns-onboarding-3_057`.
      static let nounsOnboarding3_057 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_057")
      /// Image `nouns-onboarding-3_058`.
      static let nounsOnboarding3_058 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_058")
      /// Image `nouns-onboarding-3_059`.
      static let nounsOnboarding3_059 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_059")
      /// Image `nouns-onboarding-3_060`.
      static let nounsOnboarding3_060 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_060")
      /// Image `nouns-onboarding-3_061`.
      static let nounsOnboarding3_061 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_061")
      /// Image `nouns-onboarding-3_062`.
      static let nounsOnboarding3_062 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_062")
      /// Image `nouns-onboarding-3_063`.
      static let nounsOnboarding3_063 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_063")
      /// Image `nouns-onboarding-3_064`.
      static let nounsOnboarding3_064 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_064")
      /// Image `nouns-onboarding-3_065`.
      static let nounsOnboarding3_065 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_065")
      /// Image `nouns-onboarding-3_066`.
      static let nounsOnboarding3_066 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_066")
      /// Image `nouns-onboarding-3_067`.
      static let nounsOnboarding3_067 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_067")
      /// Image `nouns-onboarding-3_068`.
      static let nounsOnboarding3_068 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_068")
      /// Image `nouns-onboarding-3_069`.
      static let nounsOnboarding3_069 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_069")
      /// Image `nouns-onboarding-3_070`.
      static let nounsOnboarding3_070 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_070")
      /// Image `nouns-onboarding-3_071`.
      static let nounsOnboarding3_071 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_071")
      /// Image `nouns-onboarding-3_072`.
      static let nounsOnboarding3_072 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_072")
      /// Image `nouns-onboarding-3_073`.
      static let nounsOnboarding3_073 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_073")
      /// Image `nouns-onboarding-3_074`.
      static let nounsOnboarding3_074 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_074")
      /// Image `nouns-onboarding-3_075`.
      static let nounsOnboarding3_075 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_075")
      /// Image `nouns-onboarding-3_076`.
      static let nounsOnboarding3_076 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_076")
      /// Image `nouns-onboarding-3_077`.
      static let nounsOnboarding3_077 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_077")
      /// Image `nouns-onboarding-3_078`.
      static let nounsOnboarding3_078 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_078")
      /// Image `nouns-onboarding-3_079`.
      static let nounsOnboarding3_079 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_079")
      /// Image `nouns-onboarding-3_080`.
      static let nounsOnboarding3_080 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_080")
      /// Image `nouns-onboarding-3_081`.
      static let nounsOnboarding3_081 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_081")
      /// Image `nouns-onboarding-3_082`.
      static let nounsOnboarding3_082 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_082")
      /// Image `nouns-onboarding-3_083`.
      static let nounsOnboarding3_083 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_083")
      /// Image `nouns-onboarding-3_084`.
      static let nounsOnboarding3_084 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_084")
      /// Image `nouns-onboarding-3_085`.
      static let nounsOnboarding3_085 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_085")
      /// Image `nouns-onboarding-3_086`.
      static let nounsOnboarding3_086 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_086")
      /// Image `nouns-onboarding-3_087`.
      static let nounsOnboarding3_087 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_087")
      /// Image `nouns-onboarding-3_088`.
      static let nounsOnboarding3_088 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_088")
      /// Image `nouns-onboarding-3_089`.
      static let nounsOnboarding3_089 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_089")
      /// Image `nouns-onboarding-3_090`.
      static let nounsOnboarding3_090 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_090")
      /// Image `nouns-onboarding-3_091`.
      static let nounsOnboarding3_091 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_091")
      /// Image `nouns-onboarding-3_092`.
      static let nounsOnboarding3_092 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_092")
      /// Image `nouns-onboarding-3_093`.
      static let nounsOnboarding3_093 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_093")
      /// Image `nouns-onboarding-3_094`.
      static let nounsOnboarding3_094 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_094")
      /// Image `nouns-onboarding-3_095`.
      static let nounsOnboarding3_095 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_095")
      /// Image `nouns-onboarding-3_096`.
      static let nounsOnboarding3_096 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_096")
      /// Image `nouns-onboarding-3_097`.
      static let nounsOnboarding3_097 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_097")
      /// Image `nouns-onboarding-3_098`.
      static let nounsOnboarding3_098 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_098")
      /// Image `nouns-onboarding-3_099`.
      static let nounsOnboarding3_099 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_099")
      /// Image `nouns-onboarding-3_100`.
      static let nounsOnboarding3_100 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_100")
      /// Image `nouns-onboarding-3_101`.
      static let nounsOnboarding3_101 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_101")
      /// Image `nouns-onboarding-3_102`.
      static let nounsOnboarding3_102 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_102")
      /// Image `nouns-onboarding-3_103`.
      static let nounsOnboarding3_103 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_103")
      /// Image `nouns-onboarding-3_104`.
      static let nounsOnboarding3_104 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_104")
      /// Image `nouns-onboarding-3_105`.
      static let nounsOnboarding3_105 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_105")
      /// Image `nouns-onboarding-3_106`.
      static let nounsOnboarding3_106 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_106")
      /// Image `nouns-onboarding-3_107`.
      static let nounsOnboarding3_107 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_107")
      /// Image `nouns-onboarding-3_108`.
      static let nounsOnboarding3_108 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_108")
      /// Image `nouns-onboarding-3_109`.
      static let nounsOnboarding3_109 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_109")
      /// Image `nouns-onboarding-3_110`.
      static let nounsOnboarding3_110 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_110")
      /// Image `nouns-onboarding-3_111`.
      static let nounsOnboarding3_111 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_111")
      /// Image `nouns-onboarding-3_112`.
      static let nounsOnboarding3_112 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_112")
      /// Image `nouns-onboarding-3_113`.
      static let nounsOnboarding3_113 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_113")
      /// Image `nouns-onboarding-3_114`.
      static let nounsOnboarding3_114 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_114")
      /// Image `nouns-onboarding-3_115`.
      static let nounsOnboarding3_115 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_115")
      /// Image `nouns-onboarding-3_116`.
      static let nounsOnboarding3_116 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_116")
      /// Image `nouns-onboarding-3_117`.
      static let nounsOnboarding3_117 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_117")
      /// Image `nouns-onboarding-3_118`.
      static let nounsOnboarding3_118 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_118")
      /// Image `nouns-onboarding-3_119`.
      static let nounsOnboarding3_119 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-3/nouns-onboarding-3_119")

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_000", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_000(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_000, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_001", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_001(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_001, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_002", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_002(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_002, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_003", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_003(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_003, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_004", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_004(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_004, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_005", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_005(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_005, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_006", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_006(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_006, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_007", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_007(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_007, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_008", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_008(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_008, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_009", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_009(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_009, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_010", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_010(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_010, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_011", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_011(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_011, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_012", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_012(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_012, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_013", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_013(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_013, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_014", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_014(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_014, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_015", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_015(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_015, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_016", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_016(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_016, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_017", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_017(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_017, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_018", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_018(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_018, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_019", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_019(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_019, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_020", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_020(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_020, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_021", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_021(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_021, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_022", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_022(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_022, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_023", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_023(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_023, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_024", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_024(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_024, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_025", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_025(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_025, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_026", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_026(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_026, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_027", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_027(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_027, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_028", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_028(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_028, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_029", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_029(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_029, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_030", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_030(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_030, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_031", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_031(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_031, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_032", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_032(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_032, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_033", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_033(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_033, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_034", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_034(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_034, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_035", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_035(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_035, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_036", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_036(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_036, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_037", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_037(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_037, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_038", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_038(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_038, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_039", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_039(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_039, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_040", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_040(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_040, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_041", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_041(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_041, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_042", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_042(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_042, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_043", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_043(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_043, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_044", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_044(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_044, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_045", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_045(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_045, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_046", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_046(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_046, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_047", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_047(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_047, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_048", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_048(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_048, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_049", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_049(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_049, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_050", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_050(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_050, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_051", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_051(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_051, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_052", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_052(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_052, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_053", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_053(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_053, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_054", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_054(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_054, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_055", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_055(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_055, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_056", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_056(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_056, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_057", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_057(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_057, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_058", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_058(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_058, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_059", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_059(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_059, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_060", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_060(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_060, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_061", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_061(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_061, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_062", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_062(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_062, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_063", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_063(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_063, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_064", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_064(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_064, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_065", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_065(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_065, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_066", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_066(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_066, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_067", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_067(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_067, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_068", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_068(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_068, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_069", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_069(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_069, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_070", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_070(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_070, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_071", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_071(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_071, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_072", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_072(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_072, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_073", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_073(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_073, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_074", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_074(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_074, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_075", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_075(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_075, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_076", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_076(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_076, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_077", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_077(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_077, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_078", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_078(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_078, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_079", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_079(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_079, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_080", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_080(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_080, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_081", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_081(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_081, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_082", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_082(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_082, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_083", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_083(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_083, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_084", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_084(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_084, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_085", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_085(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_085, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_086", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_086(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_086, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_087", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_087(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_087, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_088", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_088(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_088, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_089", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_089(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_089, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_090", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_090(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_090, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_091", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_091(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_091, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_092", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_092(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_092, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_093", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_093(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_093, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_094", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_094(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_094, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_095", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_095(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_095, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_096", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_096(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_096, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_097", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_097(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_097, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_098", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_098(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_098, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_099", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_099(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_099, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_100", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_100(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_100, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_101", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_101(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_101, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_102", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_102(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_102, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_103", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_103(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_103, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_104", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_104(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_104, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_105", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_105(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_105, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_106", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_106(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_106, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_107", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_107(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_107, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_108", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_108(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_108, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_109", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_109(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_109, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_110", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_110(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_110, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_111", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_111(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_111, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_112", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_112(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_112, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_113", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_113(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_113, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_114", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_114(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_114, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_115", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_115(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_115, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_116", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_116(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_116, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_117", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_117(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_117, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_118", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_118(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_118, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-3_119", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding3_119(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding3.nounsOnboarding3_119, compatibleWith: traitCollection)
      }
      #endif

      fileprivate init() {}
    }

    /// This `R.image.nounsOnboarding4` struct is generated, and contains static references to 120 images.
    struct nounsOnboarding4 {
      /// Image `nouns-onboarding-4_000`.
      static let nounsOnboarding4_000 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_000")
      /// Image `nouns-onboarding-4_001`.
      static let nounsOnboarding4_001 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_001")
      /// Image `nouns-onboarding-4_002`.
      static let nounsOnboarding4_002 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_002")
      /// Image `nouns-onboarding-4_003`.
      static let nounsOnboarding4_003 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_003")
      /// Image `nouns-onboarding-4_004`.
      static let nounsOnboarding4_004 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_004")
      /// Image `nouns-onboarding-4_005`.
      static let nounsOnboarding4_005 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_005")
      /// Image `nouns-onboarding-4_006`.
      static let nounsOnboarding4_006 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_006")
      /// Image `nouns-onboarding-4_007`.
      static let nounsOnboarding4_007 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_007")
      /// Image `nouns-onboarding-4_008`.
      static let nounsOnboarding4_008 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_008")
      /// Image `nouns-onboarding-4_009`.
      static let nounsOnboarding4_009 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_009")
      /// Image `nouns-onboarding-4_010`.
      static let nounsOnboarding4_010 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_010")
      /// Image `nouns-onboarding-4_011`.
      static let nounsOnboarding4_011 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_011")
      /// Image `nouns-onboarding-4_012`.
      static let nounsOnboarding4_012 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_012")
      /// Image `nouns-onboarding-4_013`.
      static let nounsOnboarding4_013 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_013")
      /// Image `nouns-onboarding-4_014`.
      static let nounsOnboarding4_014 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_014")
      /// Image `nouns-onboarding-4_015`.
      static let nounsOnboarding4_015 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_015")
      /// Image `nouns-onboarding-4_016`.
      static let nounsOnboarding4_016 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_016")
      /// Image `nouns-onboarding-4_017`.
      static let nounsOnboarding4_017 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_017")
      /// Image `nouns-onboarding-4_018`.
      static let nounsOnboarding4_018 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_018")
      /// Image `nouns-onboarding-4_019`.
      static let nounsOnboarding4_019 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_019")
      /// Image `nouns-onboarding-4_020`.
      static let nounsOnboarding4_020 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_020")
      /// Image `nouns-onboarding-4_021`.
      static let nounsOnboarding4_021 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_021")
      /// Image `nouns-onboarding-4_022`.
      static let nounsOnboarding4_022 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_022")
      /// Image `nouns-onboarding-4_023`.
      static let nounsOnboarding4_023 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_023")
      /// Image `nouns-onboarding-4_024`.
      static let nounsOnboarding4_024 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_024")
      /// Image `nouns-onboarding-4_025`.
      static let nounsOnboarding4_025 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_025")
      /// Image `nouns-onboarding-4_026`.
      static let nounsOnboarding4_026 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_026")
      /// Image `nouns-onboarding-4_027`.
      static let nounsOnboarding4_027 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_027")
      /// Image `nouns-onboarding-4_028`.
      static let nounsOnboarding4_028 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_028")
      /// Image `nouns-onboarding-4_029`.
      static let nounsOnboarding4_029 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_029")
      /// Image `nouns-onboarding-4_030`.
      static let nounsOnboarding4_030 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_030")
      /// Image `nouns-onboarding-4_031`.
      static let nounsOnboarding4_031 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_031")
      /// Image `nouns-onboarding-4_032`.
      static let nounsOnboarding4_032 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_032")
      /// Image `nouns-onboarding-4_033`.
      static let nounsOnboarding4_033 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_033")
      /// Image `nouns-onboarding-4_034`.
      static let nounsOnboarding4_034 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_034")
      /// Image `nouns-onboarding-4_035`.
      static let nounsOnboarding4_035 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_035")
      /// Image `nouns-onboarding-4_036`.
      static let nounsOnboarding4_036 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_036")
      /// Image `nouns-onboarding-4_037`.
      static let nounsOnboarding4_037 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_037")
      /// Image `nouns-onboarding-4_038`.
      static let nounsOnboarding4_038 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_038")
      /// Image `nouns-onboarding-4_039`.
      static let nounsOnboarding4_039 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_039")
      /// Image `nouns-onboarding-4_040`.
      static let nounsOnboarding4_040 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_040")
      /// Image `nouns-onboarding-4_041`.
      static let nounsOnboarding4_041 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_041")
      /// Image `nouns-onboarding-4_042`.
      static let nounsOnboarding4_042 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_042")
      /// Image `nouns-onboarding-4_043`.
      static let nounsOnboarding4_043 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_043")
      /// Image `nouns-onboarding-4_044`.
      static let nounsOnboarding4_044 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_044")
      /// Image `nouns-onboarding-4_045`.
      static let nounsOnboarding4_045 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_045")
      /// Image `nouns-onboarding-4_046`.
      static let nounsOnboarding4_046 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_046")
      /// Image `nouns-onboarding-4_047`.
      static let nounsOnboarding4_047 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_047")
      /// Image `nouns-onboarding-4_048`.
      static let nounsOnboarding4_048 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_048")
      /// Image `nouns-onboarding-4_049`.
      static let nounsOnboarding4_049 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_049")
      /// Image `nouns-onboarding-4_050`.
      static let nounsOnboarding4_050 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_050")
      /// Image `nouns-onboarding-4_051`.
      static let nounsOnboarding4_051 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_051")
      /// Image `nouns-onboarding-4_052`.
      static let nounsOnboarding4_052 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_052")
      /// Image `nouns-onboarding-4_053`.
      static let nounsOnboarding4_053 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_053")
      /// Image `nouns-onboarding-4_054`.
      static let nounsOnboarding4_054 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_054")
      /// Image `nouns-onboarding-4_055`.
      static let nounsOnboarding4_055 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_055")
      /// Image `nouns-onboarding-4_056`.
      static let nounsOnboarding4_056 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_056")
      /// Image `nouns-onboarding-4_057`.
      static let nounsOnboarding4_057 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_057")
      /// Image `nouns-onboarding-4_058`.
      static let nounsOnboarding4_058 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_058")
      /// Image `nouns-onboarding-4_059`.
      static let nounsOnboarding4_059 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_059")
      /// Image `nouns-onboarding-4_060`.
      static let nounsOnboarding4_060 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_060")
      /// Image `nouns-onboarding-4_061`.
      static let nounsOnboarding4_061 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_061")
      /// Image `nouns-onboarding-4_062`.
      static let nounsOnboarding4_062 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_062")
      /// Image `nouns-onboarding-4_063`.
      static let nounsOnboarding4_063 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_063")
      /// Image `nouns-onboarding-4_064`.
      static let nounsOnboarding4_064 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_064")
      /// Image `nouns-onboarding-4_065`.
      static let nounsOnboarding4_065 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_065")
      /// Image `nouns-onboarding-4_066`.
      static let nounsOnboarding4_066 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_066")
      /// Image `nouns-onboarding-4_067`.
      static let nounsOnboarding4_067 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_067")
      /// Image `nouns-onboarding-4_068`.
      static let nounsOnboarding4_068 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_068")
      /// Image `nouns-onboarding-4_069`.
      static let nounsOnboarding4_069 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_069")
      /// Image `nouns-onboarding-4_070`.
      static let nounsOnboarding4_070 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_070")
      /// Image `nouns-onboarding-4_071`.
      static let nounsOnboarding4_071 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_071")
      /// Image `nouns-onboarding-4_072`.
      static let nounsOnboarding4_072 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_072")
      /// Image `nouns-onboarding-4_073`.
      static let nounsOnboarding4_073 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_073")
      /// Image `nouns-onboarding-4_074`.
      static let nounsOnboarding4_074 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_074")
      /// Image `nouns-onboarding-4_075`.
      static let nounsOnboarding4_075 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_075")
      /// Image `nouns-onboarding-4_076`.
      static let nounsOnboarding4_076 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_076")
      /// Image `nouns-onboarding-4_077`.
      static let nounsOnboarding4_077 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_077")
      /// Image `nouns-onboarding-4_078`.
      static let nounsOnboarding4_078 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_078")
      /// Image `nouns-onboarding-4_079`.
      static let nounsOnboarding4_079 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_079")
      /// Image `nouns-onboarding-4_080`.
      static let nounsOnboarding4_080 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_080")
      /// Image `nouns-onboarding-4_081`.
      static let nounsOnboarding4_081 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_081")
      /// Image `nouns-onboarding-4_082`.
      static let nounsOnboarding4_082 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_082")
      /// Image `nouns-onboarding-4_083`.
      static let nounsOnboarding4_083 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_083")
      /// Image `nouns-onboarding-4_084`.
      static let nounsOnboarding4_084 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_084")
      /// Image `nouns-onboarding-4_085`.
      static let nounsOnboarding4_085 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_085")
      /// Image `nouns-onboarding-4_086`.
      static let nounsOnboarding4_086 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_086")
      /// Image `nouns-onboarding-4_087`.
      static let nounsOnboarding4_087 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_087")
      /// Image `nouns-onboarding-4_088`.
      static let nounsOnboarding4_088 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_088")
      /// Image `nouns-onboarding-4_089`.
      static let nounsOnboarding4_089 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_089")
      /// Image `nouns-onboarding-4_090`.
      static let nounsOnboarding4_090 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_090")
      /// Image `nouns-onboarding-4_091`.
      static let nounsOnboarding4_091 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_091")
      /// Image `nouns-onboarding-4_092`.
      static let nounsOnboarding4_092 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_092")
      /// Image `nouns-onboarding-4_093`.
      static let nounsOnboarding4_093 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_093")
      /// Image `nouns-onboarding-4_094`.
      static let nounsOnboarding4_094 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_094")
      /// Image `nouns-onboarding-4_095`.
      static let nounsOnboarding4_095 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_095")
      /// Image `nouns-onboarding-4_096`.
      static let nounsOnboarding4_096 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_096")
      /// Image `nouns-onboarding-4_097`.
      static let nounsOnboarding4_097 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_097")
      /// Image `nouns-onboarding-4_098`.
      static let nounsOnboarding4_098 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_098")
      /// Image `nouns-onboarding-4_099`.
      static let nounsOnboarding4_099 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_099")
      /// Image `nouns-onboarding-4_100`.
      static let nounsOnboarding4_100 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_100")
      /// Image `nouns-onboarding-4_101`.
      static let nounsOnboarding4_101 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_101")
      /// Image `nouns-onboarding-4_102`.
      static let nounsOnboarding4_102 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_102")
      /// Image `nouns-onboarding-4_103`.
      static let nounsOnboarding4_103 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_103")
      /// Image `nouns-onboarding-4_104`.
      static let nounsOnboarding4_104 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_104")
      /// Image `nouns-onboarding-4_105`.
      static let nounsOnboarding4_105 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_105")
      /// Image `nouns-onboarding-4_106`.
      static let nounsOnboarding4_106 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_106")
      /// Image `nouns-onboarding-4_107`.
      static let nounsOnboarding4_107 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_107")
      /// Image `nouns-onboarding-4_108`.
      static let nounsOnboarding4_108 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_108")
      /// Image `nouns-onboarding-4_109`.
      static let nounsOnboarding4_109 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_109")
      /// Image `nouns-onboarding-4_110`.
      static let nounsOnboarding4_110 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_110")
      /// Image `nouns-onboarding-4_111`.
      static let nounsOnboarding4_111 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_111")
      /// Image `nouns-onboarding-4_112`.
      static let nounsOnboarding4_112 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_112")
      /// Image `nouns-onboarding-4_113`.
      static let nounsOnboarding4_113 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_113")
      /// Image `nouns-onboarding-4_114`.
      static let nounsOnboarding4_114 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_114")
      /// Image `nouns-onboarding-4_115`.
      static let nounsOnboarding4_115 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_115")
      /// Image `nouns-onboarding-4_116`.
      static let nounsOnboarding4_116 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_116")
      /// Image `nouns-onboarding-4_117`.
      static let nounsOnboarding4_117 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_117")
      /// Image `nouns-onboarding-4_118`.
      static let nounsOnboarding4_118 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_118")
      /// Image `nouns-onboarding-4_119`.
      static let nounsOnboarding4_119 = Rswift.ImageResource(bundle: R.hostingBundle, name: "nouns-onboarding-4/nouns-onboarding-4_119")

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_000", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_000(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_000, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_001", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_001(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_001, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_002", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_002(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_002, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_003", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_003(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_003, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_004", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_004(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_004, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_005", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_005(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_005, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_006", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_006(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_006, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_007", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_007(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_007, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_008", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_008(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_008, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_009", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_009(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_009, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_010", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_010(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_010, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_011", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_011(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_011, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_012", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_012(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_012, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_013", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_013(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_013, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_014", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_014(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_014, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_015", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_015(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_015, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_016", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_016(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_016, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_017", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_017(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_017, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_018", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_018(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_018, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_019", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_019(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_019, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_020", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_020(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_020, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_021", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_021(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_021, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_022", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_022(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_022, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_023", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_023(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_023, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_024", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_024(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_024, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_025", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_025(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_025, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_026", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_026(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_026, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_027", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_027(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_027, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_028", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_028(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_028, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_029", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_029(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_029, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_030", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_030(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_030, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_031", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_031(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_031, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_032", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_032(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_032, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_033", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_033(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_033, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_034", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_034(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_034, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_035", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_035(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_035, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_036", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_036(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_036, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_037", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_037(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_037, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_038", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_038(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_038, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_039", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_039(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_039, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_040", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_040(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_040, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_041", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_041(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_041, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_042", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_042(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_042, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_043", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_043(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_043, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_044", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_044(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_044, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_045", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_045(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_045, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_046", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_046(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_046, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_047", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_047(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_047, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_048", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_048(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_048, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_049", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_049(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_049, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_050", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_050(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_050, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_051", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_051(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_051, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_052", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_052(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_052, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_053", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_053(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_053, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_054", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_054(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_054, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_055", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_055(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_055, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_056", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_056(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_056, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_057", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_057(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_057, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_058", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_058(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_058, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_059", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_059(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_059, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_060", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_060(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_060, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_061", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_061(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_061, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_062", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_062(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_062, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_063", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_063(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_063, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_064", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_064(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_064, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_065", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_065(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_065, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_066", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_066(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_066, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_067", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_067(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_067, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_068", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_068(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_068, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_069", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_069(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_069, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_070", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_070(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_070, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_071", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_071(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_071, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_072", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_072(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_072, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_073", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_073(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_073, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_074", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_074(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_074, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_075", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_075(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_075, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_076", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_076(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_076, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_077", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_077(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_077, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_078", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_078(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_078, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_079", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_079(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_079, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_080", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_080(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_080, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_081", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_081(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_081, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_082", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_082(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_082, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_083", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_083(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_083, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_084", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_084(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_084, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_085", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_085(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_085, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_086", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_086(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_086, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_087", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_087(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_087, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_088", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_088(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_088, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_089", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_089(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_089, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_090", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_090(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_090, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_091", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_091(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_091, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_092", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_092(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_092, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_093", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_093(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_093, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_094", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_094(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_094, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_095", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_095(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_095, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_096", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_096(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_096, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_097", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_097(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_097, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_098", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_098(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_098, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_099", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_099(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_099, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_100", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_100(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_100, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_101", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_101(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_101, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_102", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_102(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_102, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_103", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_103(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_103, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_104", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_104(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_104, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_105", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_105(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_105, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_106", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_106(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_106, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_107", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_107(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_107, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_108", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_108(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_108, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_109", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_109(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_109, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_110", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_110(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_110, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_111", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_111(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_111, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_112", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_112(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_112, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_113", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_113(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_113, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_114", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_114(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_114, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_115", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_115(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_115, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_116", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_116(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_116, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_117", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_117(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_117, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_118", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_118(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_118, compatibleWith: traitCollection)
      }
      #endif

      #if os(iOS) || os(tvOS)
      /// `UIImage(named: "nouns-onboarding-4_119", bundle: ..., traitCollection: ...)`
      static func nounsOnboarding4_119(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
        return UIKit.UIImage(resource: R.image.nounsOnboarding4.nounsOnboarding4_119, compatibleWith: traitCollection)
      }
      #endif

      fileprivate init() {}
    }

    fileprivate init() {}
  }

  /// This `R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    struct uiApplicationSceneManifest {
      static let _key = "UIApplicationSceneManifest"
      static let uiApplicationSupportsMultipleScenes = true

      fileprivate init() {}
    }

    fileprivate init() {}
  }

  /// This `R.string` struct is generated, and contains static references to 29 localization tables.
  struct string {
    /// This `R.string.aboutNouns` struct is generated, and contains static references to 3 localization keys.
    struct aboutNouns {
      /// Value: Learn more at nouns.wtf
      static let learnMore = Rswift.StringResource(key: "learn.more", tableName: "AboutNouns", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Nouns are an experimental attempt to improve the formation of on-chain avatar communities.   While some projects have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance and a treasury that can be used by the community for the creation of long-term value.
      static let nounsWtfDescription = Rswift.StringResource(key: "nouns.wtf.description", tableName: "AboutNouns", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: WTF?
      static let title = Rswift.StringResource(key: "title", tableName: "AboutNouns", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Learn more at nouns.wtf
      static func learnMore(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("learn.more", tableName: "AboutNouns", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AboutNouns", preferredLanguages: preferredLanguages) else {
          return "learn.more"
        }

        return NSLocalizedString("learn.more", tableName: "AboutNouns", bundle: bundle, comment: "")
      }

      /// Value: Nouns are an experimental attempt to improve the formation of on-chain avatar communities.   While some projects have attempted to bootstrap digital community and identity, Nouns attempt to bootstrap identity, community, governance and a treasury that can be used by the community for the creation of long-term value.
      static func nounsWtfDescription(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("nouns.wtf.description", tableName: "AboutNouns", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AboutNouns", preferredLanguages: preferredLanguages) else {
          return "nouns.wtf.description"
        }

        return NSLocalizedString("nouns.wtf.description", tableName: "AboutNouns", bundle: bundle, comment: "")
      }

      /// Value: WTF?
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "AboutNouns", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AboutNouns", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "AboutNouns", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.about` struct is generated, and contains static references to 4 localization keys.
    struct about {
      /// Value: About
      static let title = Rswift.StringResource(key: "title", tableName: "About", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Learn more at nouns.wtf
      static let learnMore = Rswift.StringResource(key: "learn.more", tableName: "About", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Treasury
      static let treasury = Rswift.StringResource(key: "treasury", tableName: "About", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: https://nouns.wtf
      static let aboutLink = Rswift.StringResource(key: "about.link", tableName: "About", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: About
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "About", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "About", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "About", bundle: bundle, comment: "")
      }

      /// Value: Learn more at nouns.wtf
      static func learnMore(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("learn.more", tableName: "About", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "About", preferredLanguages: preferredLanguages) else {
          return "learn.more"
        }

        return NSLocalizedString("learn.more", tableName: "About", bundle: bundle, comment: "")
      }

      /// Value: Treasury
      static func treasury(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("treasury", tableName: "About", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "About", preferredLanguages: preferredLanguages) else {
          return "treasury"
        }

        return NSLocalizedString("treasury", tableName: "About", bundle: bundle, comment: "")
      }

      /// Value: https://nouns.wtf
      static func aboutLink(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("about.link", tableName: "About", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "About", preferredLanguages: preferredLanguages) else {
          return "about.link"
        }

        return NSLocalizedString("about.link", tableName: "About", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.activity` struct is generated, and contains static references to 9 localization keys.
    struct activity {
      /// Value: Absent for
      static let absent = Rswift.StringResource(key: "absent", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Activity
      static let menuTitle = Rswift.StringResource(key: "menu.title", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Failed to load activity feed
      static let errorEmptyTitle = Rswift.StringResource(key: "error.empty.title", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Failed to load more activities
      static let errorLoadMoreTitle = Rswift.StringResource(key: "error.loadMore.title", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: No activity
      static let emptyState = Rswift.StringResource(key: "empty-state", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Proposal %s • %s
      static let proposalStatus = Rswift.StringResource(key: "proposal.status", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Untitled
      static let proposalUntitled = Rswift.StringResource(key: "proposal.untitled", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Vote Against
      static let against = Rswift.StringResource(key: "against", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Voted for
      static let `for` = Rswift.StringResource(key: "for", tableName: "Activity", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Absent for
      static func absent(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("absent", tableName: "Activity", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "absent"
        }

        return NSLocalizedString("absent", tableName: "Activity", bundle: bundle, comment: "")
      }

      /// Value: Activity
      static func menuTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("menu.title", tableName: "Activity", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "menu.title"
        }

        return NSLocalizedString("menu.title", tableName: "Activity", bundle: bundle, comment: "")
      }

      /// Value: Failed to load activity feed
      static func errorEmptyTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("error.empty.title", tableName: "Activity", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "error.empty.title"
        }

        return NSLocalizedString("error.empty.title", tableName: "Activity", bundle: bundle, comment: "")
      }

      /// Value: Failed to load more activities
      static func errorLoadMoreTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("error.loadMore.title", tableName: "Activity", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "error.loadMore.title"
        }

        return NSLocalizedString("error.loadMore.title", tableName: "Activity", bundle: bundle, comment: "")
      }

      /// Value: No activity
      static func emptyState(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("empty-state", tableName: "Activity", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "empty-state"
        }

        return NSLocalizedString("empty-state", tableName: "Activity", bundle: bundle, comment: "")
      }

      /// Value: Proposal %s • %s
      static func proposalStatus(_ value1: UnsafePointer<CChar>, _ value2: UnsafePointer<CChar>, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("proposal.status", tableName: "Activity", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1, value2)
        }

        guard let (locale, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "proposal.status"
        }

        let format = NSLocalizedString("proposal.status", tableName: "Activity", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1, value2)
      }

      /// Value: Untitled
      static func proposalUntitled(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("proposal.untitled", tableName: "Activity", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "proposal.untitled"
        }

        return NSLocalizedString("proposal.untitled", tableName: "Activity", bundle: bundle, comment: "")
      }

      /// Value: Vote Against
      static func against(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("against", tableName: "Activity", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "against"
        }

        return NSLocalizedString("against", tableName: "Activity", bundle: bundle, comment: "")
      }

      /// Value: Voted for
      static func `for`(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("for", tableName: "Activity", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Activity", preferredLanguages: preferredLanguages) else {
          return "for"
        }

        return NSLocalizedString("for", tableName: "Activity", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.appIcon` struct is generated, and contains static references to 1 localization keys.
    struct appIcon {
      /// Value: App icon
      static let title = Rswift.StringResource(key: "title", tableName: "AppIcon", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: App icon
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "AppIcon", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AppIcon", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "AppIcon", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.audioPermissionDialog` struct is generated, and contains static references to 4 localization keys.
    struct audioPermissionDialog {
      /// Value: Do it later
      static let ignore = Rswift.StringResource(key: "ignore", tableName: "AudioPermissionDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Enable microphone
      static let enable = Rswift.StringResource(key: "enable", tableName: "AudioPermissionDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Let's get talkin!
      static let title = Rswift.StringResource(key: "title", tableName: "AudioPermissionDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: To make your noun talk, the app needs your permission to use the microphone.
      static let body = Rswift.StringResource(key: "body", tableName: "AudioPermissionDialog", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Do it later
      static func ignore(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("ignore", tableName: "AudioPermissionDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AudioPermissionDialog", preferredLanguages: preferredLanguages) else {
          return "ignore"
        }

        return NSLocalizedString("ignore", tableName: "AudioPermissionDialog", bundle: bundle, comment: "")
      }

      /// Value: Enable microphone
      static func enable(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("enable", tableName: "AudioPermissionDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AudioPermissionDialog", preferredLanguages: preferredLanguages) else {
          return "enable"
        }

        return NSLocalizedString("enable", tableName: "AudioPermissionDialog", bundle: bundle, comment: "")
      }

      /// Value: Let's get talkin!
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "AudioPermissionDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AudioPermissionDialog", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "AudioPermissionDialog", bundle: bundle, comment: "")
      }

      /// Value: To make your noun talk, the app needs your permission to use the microphone.
      static func body(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("body", tableName: "AudioPermissionDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AudioPermissionDialog", preferredLanguages: preferredLanguages) else {
          return "body"
        }

        return NSLocalizedString("body", tableName: "AudioPermissionDialog", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.audioSettingsDialog` struct is generated, and contains static references to 4 localization keys.
    struct audioSettingsDialog {
      /// Value: Do it later
      static let ignore = Rswift.StringResource(key: "ignore", tableName: "AudioSettingsDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Enable Audio in Settings
      static let title = Rswift.StringResource(key: "title", tableName: "AudioSettingsDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Open Settings
      static let enable = Rswift.StringResource(key: "enable", tableName: "AudioSettingsDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: To access the play experience, you'll need to enable audio permissions through the Settings app.
      static let body = Rswift.StringResource(key: "body", tableName: "AudioSettingsDialog", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Do it later
      static func ignore(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("ignore", tableName: "AudioSettingsDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AudioSettingsDialog", preferredLanguages: preferredLanguages) else {
          return "ignore"
        }

        return NSLocalizedString("ignore", tableName: "AudioSettingsDialog", bundle: bundle, comment: "")
      }

      /// Value: Enable Audio in Settings
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "AudioSettingsDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AudioSettingsDialog", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "AudioSettingsDialog", bundle: bundle, comment: "")
      }

      /// Value: Open Settings
      static func enable(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("enable", tableName: "AudioSettingsDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AudioSettingsDialog", preferredLanguages: preferredLanguages) else {
          return "enable"
        }

        return NSLocalizedString("enable", tableName: "AudioSettingsDialog", bundle: bundle, comment: "")
      }

      /// Value: To access the play experience, you'll need to enable audio permissions through the Settings app.
      static func body(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("body", tableName: "AudioSettingsDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "AudioSettingsDialog", preferredLanguages: preferredLanguages) else {
          return "body"
        }

        return NSLocalizedString("body", tableName: "AudioSettingsDialog", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.bidHistory` struct is generated, and contains static references to 6 localization keys.
    struct bidHistory {
      /// Value: %s at %s
      static let blockDate = Rswift.StringResource(key: "block.date", tableName: "BidHistory", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Bid history
      static let menuTitle = Rswift.StringResource(key: "menu.title", tableName: "BidHistory", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Failed to load bid history
      static let errorEmptyTitle = Rswift.StringResource(key: "error.empty.title", tableName: "BidHistory", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Failed to load more bids
      static let errorLoadMoreTitle = Rswift.StringResource(key: "error.loadMore.title", tableName: "BidHistory", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: No bid history registered.
      static let emptyState = Rswift.StringResource(key: "empty-state", tableName: "BidHistory", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Unavailable
      static let blockUnavailable = Rswift.StringResource(key: "block.unavailable", tableName: "BidHistory", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: %s at %s
      static func blockDate(_ value1: UnsafePointer<CChar>, _ value2: UnsafePointer<CChar>, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("block.date", tableName: "BidHistory", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1, value2)
        }

        guard let (locale, bundle) = localeBundle(tableName: "BidHistory", preferredLanguages: preferredLanguages) else {
          return "block.date"
        }

        let format = NSLocalizedString("block.date", tableName: "BidHistory", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1, value2)
      }

      /// Value: Bid history
      static func menuTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("menu.title", tableName: "BidHistory", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "BidHistory", preferredLanguages: preferredLanguages) else {
          return "menu.title"
        }

        return NSLocalizedString("menu.title", tableName: "BidHistory", bundle: bundle, comment: "")
      }

      /// Value: Failed to load bid history
      static func errorEmptyTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("error.empty.title", tableName: "BidHistory", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "BidHistory", preferredLanguages: preferredLanguages) else {
          return "error.empty.title"
        }

        return NSLocalizedString("error.empty.title", tableName: "BidHistory", bundle: bundle, comment: "")
      }

      /// Value: Failed to load more bids
      static func errorLoadMoreTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("error.loadMore.title", tableName: "BidHistory", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "BidHistory", preferredLanguages: preferredLanguages) else {
          return "error.loadMore.title"
        }

        return NSLocalizedString("error.loadMore.title", tableName: "BidHistory", bundle: bundle, comment: "")
      }

      /// Value: No bid history registered.
      static func emptyState(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("empty-state", tableName: "BidHistory", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "BidHistory", preferredLanguages: preferredLanguages) else {
          return "empty-state"
        }

        return NSLocalizedString("empty-state", tableName: "BidHistory", bundle: bundle, comment: "")
      }

      /// Value: Unavailable
      static func blockUnavailable(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("block.unavailable", tableName: "BidHistory", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "BidHistory", preferredLanguages: preferredLanguages) else {
          return "block.unavailable"
        }

        return NSLocalizedString("block.unavailable", tableName: "BidHistory", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.createCoachmark` struct is generated, and contains static references to 2 localization keys.
    struct createCoachmark {
      /// Value: Shake to shuffle
      static let shake = Rswift.StringResource(key: "shake", tableName: "CreateCoachmark", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Swipe to pick %@
      static let swipe = Rswift.StringResource(key: "swipe", tableName: "CreateCoachmark", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Shake to shuffle
      static func shake(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("shake", tableName: "CreateCoachmark", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "CreateCoachmark", preferredLanguages: preferredLanguages) else {
          return "shake"
        }

        return NSLocalizedString("shake", tableName: "CreateCoachmark", bundle: bundle, comment: "")
      }

      /// Value: Swipe to pick %@
      static func swipe(_ value1: String, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("swipe", tableName: "CreateCoachmark", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1)
        }

        guard let (locale, bundle) = localeBundle(tableName: "CreateCoachmark", preferredLanguages: preferredLanguages) else {
          return "swipe"
        }

        let format = NSLocalizedString("swipe", tableName: "CreateCoachmark", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1)
      }

      fileprivate init() {}
    }

    /// This `R.string.createNounDialog` struct is generated, and contains static references to 5 localization keys.
    struct createNounDialog {
      /// Value: Born %s
      static let nounBirthdayLabel = Rswift.StringResource(key: "noun.birthday.label", tableName: "CreateNounDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Created by you
      static let ownerLabel = Rswift.StringResource(key: "owner.label", tableName: "CreateNounDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Name your noun!
      static let inputPlaceholder = Rswift.StringResource(key: "input.placeholder", tableName: "CreateNounDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Save & finish
      static let actionSave = Rswift.StringResource(key: "action.save", tableName: "CreateNounDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Share your noun
      static let actionShare = Rswift.StringResource(key: "action.share", tableName: "CreateNounDialog", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Born %s
      static func nounBirthdayLabel(_ value1: UnsafePointer<CChar>, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("noun.birthday.label", tableName: "CreateNounDialog", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1)
        }

        guard let (locale, bundle) = localeBundle(tableName: "CreateNounDialog", preferredLanguages: preferredLanguages) else {
          return "noun.birthday.label"
        }

        let format = NSLocalizedString("noun.birthday.label", tableName: "CreateNounDialog", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1)
      }

      /// Value: Created by you
      static func ownerLabel(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("owner.label", tableName: "CreateNounDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "CreateNounDialog", preferredLanguages: preferredLanguages) else {
          return "owner.label"
        }

        return NSLocalizedString("owner.label", tableName: "CreateNounDialog", bundle: bundle, comment: "")
      }

      /// Value: Name your noun!
      static func inputPlaceholder(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("input.placeholder", tableName: "CreateNounDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "CreateNounDialog", preferredLanguages: preferredLanguages) else {
          return "input.placeholder"
        }

        return NSLocalizedString("input.placeholder", tableName: "CreateNounDialog", bundle: bundle, comment: "")
      }

      /// Value: Save & finish
      static func actionSave(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("action.save", tableName: "CreateNounDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "CreateNounDialog", preferredLanguages: preferredLanguages) else {
          return "action.save"
        }

        return NSLocalizedString("action.save", tableName: "CreateNounDialog", bundle: bundle, comment: "")
      }

      /// Value: Share your noun
      static func actionShare(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("action.share", tableName: "CreateNounDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "CreateNounDialog", preferredLanguages: preferredLanguages) else {
          return "action.share"
        }

        return NSLocalizedString("action.share", tableName: "CreateNounDialog", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.create` struct is generated, and contains static references to 3 localization keys.
    struct create {
      /// Value: Build a completely custom noun
      static let subhealine = Rswift.StringResource(key: "subhealine", tableName: "Create", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Create
      static let title = Rswift.StringResource(key: "title", tableName: "Create", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Get going
      static let proceedTitle = Rswift.StringResource(key: "proceed.title", tableName: "Create", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Build a completely custom noun
      static func subhealine(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("subhealine", tableName: "Create", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Create", preferredLanguages: preferredLanguages) else {
          return "subhealine"
        }

        return NSLocalizedString("subhealine", tableName: "Create", bundle: bundle, comment: "")
      }

      /// Value: Create
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "Create", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Create", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "Create", bundle: bundle, comment: "")
      }

      /// Value: Get going
      static func proceedTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("proceed.title", tableName: "Create", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Create", preferredLanguages: preferredLanguages) else {
          return "proceed.title"
        }

        return NSLocalizedString("proceed.title", tableName: "Create", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.derivativeProjects` struct is generated, and contains static references to 4 localization keys.
    struct derivativeProjects {
      /// Value: Derivative projects
      static let title = Rswift.StringResource(key: "title", tableName: "DerivativeProjects", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Derivative projects take the DNA of Nouns to build something new, and are key to growing the Nouns community.
      static let message = Rswift.StringResource(key: "message", tableName: "DerivativeProjects", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Nouns Center
      static let nounsCenterTitle = Rswift.StringResource(key: "nouns-center.title", tableName: "DerivativeProjects", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: https://nouns.center/projects
      static let nounsCenterLink = Rswift.StringResource(key: "nouns-center.link", tableName: "DerivativeProjects", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Derivative projects
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "DerivativeProjects", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "DerivativeProjects", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "DerivativeProjects", bundle: bundle, comment: "")
      }

      /// Value: Derivative projects take the DNA of Nouns to build something new, and are key to growing the Nouns community.
      static func message(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("message", tableName: "DerivativeProjects", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "DerivativeProjects", preferredLanguages: preferredLanguages) else {
          return "message"
        }

        return NSLocalizedString("message", tableName: "DerivativeProjects", bundle: bundle, comment: "")
      }

      /// Value: Nouns Center
      static func nounsCenterTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("nouns-center.title", tableName: "DerivativeProjects", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "DerivativeProjects", preferredLanguages: preferredLanguages) else {
          return "nouns-center.title"
        }

        return NSLocalizedString("nouns-center.title", tableName: "DerivativeProjects", bundle: bundle, comment: "")
      }

      /// Value: https://nouns.center/projects
      static func nounsCenterLink(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("nouns-center.link", tableName: "DerivativeProjects", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "DerivativeProjects", preferredLanguages: preferredLanguages) else {
          return "nouns-center.link"
        }

        return NSLocalizedString("nouns-center.link", tableName: "DerivativeProjects", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.documentation` struct is generated, and contains static references to 4 localization keys.
    struct documentation {
      /// Value: Documentation
      static let title = Rswift.StringResource(key: "title", tableName: "Documentation", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Notion Docs
      static let notionDocs = Rswift.StringResource(key: "notion.docs", tableName: "Documentation", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Nouns are an experimental attempt to improve the formation of on-chain avatar communities
      static let message = Rswift.StringResource(key: "message", tableName: "Documentation", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: https://nouns.notion.site/Explore-Nouns-a2a9dceeb1d54e10b9cbf3f931c2266f
      static let notionLink = Rswift.StringResource(key: "notion.link", tableName: "Documentation", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Documentation
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "Documentation", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Documentation", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "Documentation", bundle: bundle, comment: "")
      }

      /// Value: Notion Docs
      static func notionDocs(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("notion.docs", tableName: "Documentation", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Documentation", preferredLanguages: preferredLanguages) else {
          return "notion.docs"
        }

        return NSLocalizedString("notion.docs", tableName: "Documentation", bundle: bundle, comment: "")
      }

      /// Value: Nouns are an experimental attempt to improve the formation of on-chain avatar communities
      static func message(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("message", tableName: "Documentation", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Documentation", preferredLanguages: preferredLanguages) else {
          return "message"
        }

        return NSLocalizedString("message", tableName: "Documentation", bundle: bundle, comment: "")
      }

      /// Value: https://nouns.notion.site/Explore-Nouns-a2a9dceeb1d54e10b9cbf3f931c2266f
      static func notionLink(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("notion.link", tableName: "Documentation", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Documentation", preferredLanguages: preferredLanguages) else {
          return "notion.link"
        }

        return NSLocalizedString("notion.link", tableName: "Documentation", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.explore` struct is generated, and contains static references to 7 localization keys.
    struct explore {
      /// Value: About
      static let about = Rswift.StringResource(key: "about", tableName: "Explore", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Dude, something’s wrong with the auction
      static let liveError = Rswift.StringResource(key: "live.error", tableName: "Explore", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Explore
      static let title = Rswift.StringResource(key: "title", tableName: "Explore", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Failed to load more auctions
      static let settledErrorLoadMore = Rswift.StringResource(key: "settled.error.loadMore", tableName: "Explore", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Failed to load settled auctions
      static let settledErrorEmpty = Rswift.StringResource(key: "settled.error.empty", tableName: "Explore", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Lame. Looks like wifi or cellular data is totally borked. Check your connection and try again.
      static let allErrorEmpty = Rswift.StringResource(key: "all.error.empty", tableName: "Explore", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Noun %s
      static let noun = Rswift.StringResource(key: "noun", tableName: "Explore", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: About
      static func about(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("about", tableName: "Explore", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Explore", preferredLanguages: preferredLanguages) else {
          return "about"
        }

        return NSLocalizedString("about", tableName: "Explore", bundle: bundle, comment: "")
      }

      /// Value: Dude, something’s wrong with the auction
      static func liveError(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("live.error", tableName: "Explore", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Explore", preferredLanguages: preferredLanguages) else {
          return "live.error"
        }

        return NSLocalizedString("live.error", tableName: "Explore", bundle: bundle, comment: "")
      }

      /// Value: Explore
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "Explore", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Explore", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "Explore", bundle: bundle, comment: "")
      }

      /// Value: Failed to load more auctions
      static func settledErrorLoadMore(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("settled.error.loadMore", tableName: "Explore", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Explore", preferredLanguages: preferredLanguages) else {
          return "settled.error.loadMore"
        }

        return NSLocalizedString("settled.error.loadMore", tableName: "Explore", bundle: bundle, comment: "")
      }

      /// Value: Failed to load settled auctions
      static func settledErrorEmpty(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("settled.error.empty", tableName: "Explore", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Explore", preferredLanguages: preferredLanguages) else {
          return "settled.error.empty"
        }

        return NSLocalizedString("settled.error.empty", tableName: "Explore", bundle: bundle, comment: "")
      }

      /// Value: Lame. Looks like wifi or cellular data is totally borked. Check your connection and try again.
      static func allErrorEmpty(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("all.error.empty", tableName: "Explore", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Explore", preferredLanguages: preferredLanguages) else {
          return "all.error.empty"
        }

        return NSLocalizedString("all.error.empty", tableName: "Explore", bundle: bundle, comment: "")
      }

      /// Value: Noun %s
      static func noun(_ value1: UnsafePointer<CChar>, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("noun", tableName: "Explore", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1)
        }

        guard let (locale, bundle) = localeBundle(tableName: "Explore", preferredLanguages: preferredLanguages) else {
          return "noun"
        }

        let format = NSLocalizedString("noun", tableName: "Explore", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1)
      }

      fileprivate init() {}
    }

    /// This `R.string.liveAuction` struct is generated, and contains static references to 5 localization keys.
    struct liveAuction {
      /// Value: %dh %dm %ds
      static let timeLeft = Rswift.StringResource(key: "time.left", tableName: "LiveAuction", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Current bid
      static let currentBid = Rswift.StringResource(key: "current.bid", tableName: "LiveAuction", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Remaining
      static let timeLeftLabel = Rswift.StringResource(key: "time.left.label", tableName: "LiveAuction", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Winner
      static let winner = Rswift.StringResource(key: "winner", tableName: "LiveAuction", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Winning bid
      static let winningBid = Rswift.StringResource(key: "winning.bid", tableName: "LiveAuction", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: %dh %dm %ds
      static func timeLeft(_ value1: Int, _ value2: Int, _ value3: Int, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("time.left", tableName: "LiveAuction", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1, value2, value3)
        }

        guard let (locale, bundle) = localeBundle(tableName: "LiveAuction", preferredLanguages: preferredLanguages) else {
          return "time.left"
        }

        let format = NSLocalizedString("time.left", tableName: "LiveAuction", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1, value2, value3)
      }

      /// Value: Current bid
      static func currentBid(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("current.bid", tableName: "LiveAuction", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "LiveAuction", preferredLanguages: preferredLanguages) else {
          return "current.bid"
        }

        return NSLocalizedString("current.bid", tableName: "LiveAuction", bundle: bundle, comment: "")
      }

      /// Value: Remaining
      static func timeLeftLabel(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("time.left.label", tableName: "LiveAuction", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "LiveAuction", preferredLanguages: preferredLanguages) else {
          return "time.left.label"
        }

        return NSLocalizedString("time.left.label", tableName: "LiveAuction", bundle: bundle, comment: "")
      }

      /// Value: Winner
      static func winner(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("winner", tableName: "LiveAuction", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "LiveAuction", preferredLanguages: preferredLanguages) else {
          return "winner"
        }

        return NSLocalizedString("winner", tableName: "LiveAuction", bundle: bundle, comment: "")
      }

      /// Value: Winning bid
      static func winningBid(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("winning.bid", tableName: "LiveAuction", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "LiveAuction", preferredLanguages: preferredLanguages) else {
          return "winning.bid"
        }

        return NSLocalizedString("winning.bid", tableName: "LiveAuction", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.localizable` struct is generated, and contains static references to 0 localization keys.
    struct localizable {
      fileprivate init() {}
    }

    /// This `R.string.notificationPermission` struct is generated, and contains static references to 4 localization keys.
    struct notificationPermission {
      /// Value: Do it later
      static let ignore = Rswift.StringResource(key: "ignore", tableName: "NotificationPermission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Every day a new Noun is randomly created as the previous Noun is auctioned off. Get notified when this glorious hour approaches!
      static let body = Rswift.StringResource(key: "body", tableName: "NotificationPermission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Turn on notifications
      static let enable = Rswift.StringResource(key: "enable", tableName: "NotificationPermission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Wanna know when it’s noun o’clock?
      static let title = Rswift.StringResource(key: "title", tableName: "NotificationPermission", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Do it later
      static func ignore(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("ignore", tableName: "NotificationPermission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NotificationPermission", preferredLanguages: preferredLanguages) else {
          return "ignore"
        }

        return NSLocalizedString("ignore", tableName: "NotificationPermission", bundle: bundle, comment: "")
      }

      /// Value: Every day a new Noun is randomly created as the previous Noun is auctioned off. Get notified when this glorious hour approaches!
      static func body(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("body", tableName: "NotificationPermission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NotificationPermission", preferredLanguages: preferredLanguages) else {
          return "body"
        }

        return NSLocalizedString("body", tableName: "NotificationPermission", bundle: bundle, comment: "")
      }

      /// Value: Turn on notifications
      static func enable(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("enable", tableName: "NotificationPermission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NotificationPermission", preferredLanguages: preferredLanguages) else {
          return "enable"
        }

        return NSLocalizedString("enable", tableName: "NotificationPermission", bundle: bundle, comment: "")
      }

      /// Value: Wanna know when it’s noun o’clock?
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "NotificationPermission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NotificationPermission", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "NotificationPermission", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.nounDAOInfo` struct is generated, and contains static references to 3 localization keys.
    struct nounDAOInfo {
      /// Value: Each noun is a member of the Nouns DAO and entitled to one vote in all governance matters. This means, once Noun %@ was owned by %@, they could vote on proposals to the DAO and this is their voting activity.
      static let description = Rswift.StringResource(key: "description", tableName: "NounDAOInfo", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Each noun is a member of the Nouns DAO and entitled to one vote in all governance matters. This means, once a noun has an owner, the owner could vote on proposals to the DAO and this page would show their voting activity.
      static let descriptionNoOwner = Rswift.StringResource(key: "descriptionNoOwner", tableName: "NounDAOInfo", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: What is this?
      static let title = Rswift.StringResource(key: "title", tableName: "NounDAOInfo", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Each noun is a member of the Nouns DAO and entitled to one vote in all governance matters. This means, once Noun %@ was owned by %@, they could vote on proposals to the DAO and this is their voting activity.
      static func description(_ value1: String, _ value2: String, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("description", tableName: "NounDAOInfo", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1, value2)
        }

        guard let (locale, bundle) = localeBundle(tableName: "NounDAOInfo", preferredLanguages: preferredLanguages) else {
          return "description"
        }

        let format = NSLocalizedString("description", tableName: "NounDAOInfo", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1, value2)
      }

      /// Value: Each noun is a member of the Nouns DAO and entitled to one vote in all governance matters. This means, once a noun has an owner, the owner could vote on proposals to the DAO and this page would show their voting activity.
      static func descriptionNoOwner(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("descriptionNoOwner", tableName: "NounDAOInfo", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDAOInfo", preferredLanguages: preferredLanguages) else {
          return "descriptionNoOwner"
        }

        return NSLocalizedString("descriptionNoOwner", tableName: "NounDAOInfo", bundle: bundle, comment: "")
      }

      /// Value: What is this?
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "NounDAOInfo", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDAOInfo", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "NounDAOInfo", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.nounDeleteDialog` struct is generated, and contains static references to 4 localization keys.
    struct nounDeleteDialog {
      /// Value: Are you sure you want to leave and lose the precious Nouniness you’ve created?
      static let message = Rswift.StringResource(key: "message", tableName: "NounDeleteDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: For reals?
      static let title = Rswift.StringResource(key: "title", tableName: "NounDeleteDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: No, I want to keep creating
      static let nounCancelAction = Rswift.StringResource(key: "noun.cancel.action", tableName: "NounDeleteDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Yeah, get rid of it
      static let nounDeleteAction = Rswift.StringResource(key: "noun.delete.action", tableName: "NounDeleteDialog", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Are you sure you want to leave and lose the precious Nouniness you’ve created?
      static func message(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("message", tableName: "NounDeleteDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDeleteDialog", preferredLanguages: preferredLanguages) else {
          return "message"
        }

        return NSLocalizedString("message", tableName: "NounDeleteDialog", bundle: bundle, comment: "")
      }

      /// Value: For reals?
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "NounDeleteDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDeleteDialog", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "NounDeleteDialog", bundle: bundle, comment: "")
      }

      /// Value: No, I want to keep creating
      static func nounCancelAction(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("noun.cancel.action", tableName: "NounDeleteDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDeleteDialog", preferredLanguages: preferredLanguages) else {
          return "noun.cancel.action"
        }

        return NSLocalizedString("noun.cancel.action", tableName: "NounDeleteDialog", bundle: bundle, comment: "")
      }

      /// Value: Yeah, get rid of it
      static func nounDeleteAction(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("noun.delete.action", tableName: "NounDeleteDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDeleteDialog", preferredLanguages: preferredLanguages) else {
          return "noun.delete.action"
        }

        return NSLocalizedString("noun.delete.action", tableName: "NounDeleteDialog", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.nounDiscardEditDialog` struct is generated, and contains static references to 4 localization keys.
    struct nounDiscardEditDialog {
      /// Value: Are you sure you want to get rid of this edit and lose the awesomeness?
      static let message = Rswift.StringResource(key: "message", tableName: "NounDiscardEditDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Leavin'?
      static let title = Rswift.StringResource(key: "title", tableName: "NounDiscardEditDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: No, I want to keep editing
      static let nounCancelAction = Rswift.StringResource(key: "noun.cancel.action", tableName: "NounDiscardEditDialog", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Yeah, get rid of the edit
      static let nounDeleteAction = Rswift.StringResource(key: "noun.delete.action", tableName: "NounDiscardEditDialog", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Are you sure you want to get rid of this edit and lose the awesomeness?
      static func message(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("message", tableName: "NounDiscardEditDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDiscardEditDialog", preferredLanguages: preferredLanguages) else {
          return "message"
        }

        return NSLocalizedString("message", tableName: "NounDiscardEditDialog", bundle: bundle, comment: "")
      }

      /// Value: Leavin'?
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "NounDiscardEditDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDiscardEditDialog", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "NounDiscardEditDialog", bundle: bundle, comment: "")
      }

      /// Value: No, I want to keep editing
      static func nounCancelAction(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("noun.cancel.action", tableName: "NounDiscardEditDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDiscardEditDialog", preferredLanguages: preferredLanguages) else {
          return "noun.cancel.action"
        }

        return NSLocalizedString("noun.cancel.action", tableName: "NounDiscardEditDialog", bundle: bundle, comment: "")
      }

      /// Value: Yeah, get rid of the edit
      static func nounDeleteAction(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("noun.delete.action", tableName: "NounDiscardEditDialog", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounDiscardEditDialog", preferredLanguages: preferredLanguages) else {
          return "noun.delete.action"
        }

        return NSLocalizedString("noun.delete.action", tableName: "NounDiscardEditDialog", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.nounPlayground` struct is generated, and contains static references to 3 localization keys.
    struct nounPlayground {
      /// Value: Hold to record
      static let holdToRecordCoachmark = Rswift.StringResource(key: "hold-to-record.coachmark", tableName: "NounPlayground", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: I’m recording…
      static let voiceStateRecording = Rswift.StringResource(key: "voice.state.recording", tableName: "NounPlayground", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Say something!
      static let voiceStateNotRecording = Rswift.StringResource(key: "voice.state.not-recording", tableName: "NounPlayground", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Hold to record
      static func holdToRecordCoachmark(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("hold-to-record.coachmark", tableName: "NounPlayground", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounPlayground", preferredLanguages: preferredLanguages) else {
          return "hold-to-record.coachmark"
        }

        return NSLocalizedString("hold-to-record.coachmark", tableName: "NounPlayground", bundle: bundle, comment: "")
      }

      /// Value: I’m recording…
      static func voiceStateRecording(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("voice.state.recording", tableName: "NounPlayground", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounPlayground", preferredLanguages: preferredLanguages) else {
          return "voice.state.recording"
        }

        return NSLocalizedString("voice.state.recording", tableName: "NounPlayground", bundle: bundle, comment: "")
      }

      /// Value: Say something!
      static func voiceStateNotRecording(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("voice.state.not-recording", tableName: "NounPlayground", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounPlayground", preferredLanguages: preferredLanguages) else {
          return "voice.state.not-recording"
        }

        return NSLocalizedString("voice.state.not-recording", tableName: "NounPlayground", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.nounProfile` struct is generated, and contains static references to 11 localization keys.
    struct nounProfile {
      /// Value: %dh %dm %ds
      static let auctionUnsettledTimeLeft = Rswift.StringResource(key: "auction.unsettled.time-left", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Activity
      static let auctionSettledGovernanceNounder = Rswift.StringResource(key: "auction.settled.governance.nounder", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Bid history
      static let auctionUnsettledGovernance = Rswift.StringResource(key: "auction.unsettled.governance", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Bid history & activity
      static let auctionSettledGovernance = Rswift.StringResource(key: "auction.settled.governance", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Born %s
      static let birthday = Rswift.StringResource(key: "birthday", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Current bid
      static let auctionUnsettledLastBid = Rswift.StringResource(key: "auction.unsettled.last-bid", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Ends in
      static let auctionUnsettledTimeLeftLabel = Rswift.StringResource(key: "auction.unsettled.time-left.label", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Held by
      static let heldBy = Rswift.StringResource(key: "held-by", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Nounders
      static let nounders = Rswift.StringResource(key: "nounders", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Won for
      static let bidWinner = Rswift.StringResource(key: "bid-winner", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: nounders.eth
      static let noundersEth = Rswift.StringResource(key: "nounders.eth", tableName: "NounProfile", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: %dh %dm %ds
      static func auctionUnsettledTimeLeft(_ value1: Int, _ value2: Int, _ value3: Int, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("auction.unsettled.time-left", tableName: "NounProfile", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1, value2, value3)
        }

        guard let (locale, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "auction.unsettled.time-left"
        }

        let format = NSLocalizedString("auction.unsettled.time-left", tableName: "NounProfile", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1, value2, value3)
      }

      /// Value: Activity
      static func auctionSettledGovernanceNounder(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("auction.settled.governance.nounder", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "auction.settled.governance.nounder"
        }

        return NSLocalizedString("auction.settled.governance.nounder", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      /// Value: Bid history
      static func auctionUnsettledGovernance(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("auction.unsettled.governance", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "auction.unsettled.governance"
        }

        return NSLocalizedString("auction.unsettled.governance", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      /// Value: Bid history & activity
      static func auctionSettledGovernance(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("auction.settled.governance", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "auction.settled.governance"
        }

        return NSLocalizedString("auction.settled.governance", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      /// Value: Born %s
      static func birthday(_ value1: UnsafePointer<CChar>, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("birthday", tableName: "NounProfile", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1)
        }

        guard let (locale, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "birthday"
        }

        let format = NSLocalizedString("birthday", tableName: "NounProfile", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1)
      }

      /// Value: Current bid
      static func auctionUnsettledLastBid(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("auction.unsettled.last-bid", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "auction.unsettled.last-bid"
        }

        return NSLocalizedString("auction.unsettled.last-bid", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      /// Value: Ends in
      static func auctionUnsettledTimeLeftLabel(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("auction.unsettled.time-left.label", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "auction.unsettled.time-left.label"
        }

        return NSLocalizedString("auction.unsettled.time-left.label", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      /// Value: Held by
      static func heldBy(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("held-by", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "held-by"
        }

        return NSLocalizedString("held-by", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      /// Value: Nounders
      static func nounders(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("nounders", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "nounders"
        }

        return NSLocalizedString("nounders", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      /// Value: Won for
      static func bidWinner(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("bid-winner", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "bid-winner"
        }

        return NSLocalizedString("bid-winner", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      /// Value: nounders.eth
      static func noundersEth(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("nounders.eth", tableName: "NounProfile", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "NounProfile", preferredLanguages: preferredLanguages) else {
          return "nounders.eth"
        }

        return NSLocalizedString("nounders.eth", tableName: "NounProfile", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.offchainNounActions` struct is generated, and contains static references to 6 localization keys.
    struct offchainNounActions {
      /// Value: Delete your noun
      static let delete = Rswift.StringResource(key: "delete", tableName: "offchain.noun.actions", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Edit your noun
      static let edit = Rswift.StringResource(key: "edit", tableName: "offchain.noun.actions", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: More Actions
      static let title = Rswift.StringResource(key: "title", tableName: "offchain.noun.actions", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Play with you noun
      static let play = Rswift.StringResource(key: "play", tableName: "offchain.noun.actions", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Rename your noun
      static let rename = Rswift.StringResource(key: "rename", tableName: "offchain.noun.actions", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Use this dope new name
      static let useName = Rswift.StringResource(key: "use.name", tableName: "offchain.noun.actions", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Delete your noun
      static func delete(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("delete", tableName: "offchain.noun.actions", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "offchain.noun.actions", preferredLanguages: preferredLanguages) else {
          return "delete"
        }

        return NSLocalizedString("delete", tableName: "offchain.noun.actions", bundle: bundle, comment: "")
      }

      /// Value: Edit your noun
      static func edit(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("edit", tableName: "offchain.noun.actions", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "offchain.noun.actions", preferredLanguages: preferredLanguages) else {
          return "edit"
        }

        return NSLocalizedString("edit", tableName: "offchain.noun.actions", bundle: bundle, comment: "")
      }

      /// Value: More Actions
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "offchain.noun.actions", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "offchain.noun.actions", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "offchain.noun.actions", bundle: bundle, comment: "")
      }

      /// Value: Play with you noun
      static func play(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("play", tableName: "offchain.noun.actions", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "offchain.noun.actions", preferredLanguages: preferredLanguages) else {
          return "play"
        }

        return NSLocalizedString("play", tableName: "offchain.noun.actions", bundle: bundle, comment: "")
      }

      /// Value: Rename your noun
      static func rename(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("rename", tableName: "offchain.noun.actions", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "offchain.noun.actions", preferredLanguages: preferredLanguages) else {
          return "rename"
        }

        return NSLocalizedString("rename", tableName: "offchain.noun.actions", bundle: bundle, comment: "")
      }

      /// Value: Use this dope new name
      static func useName(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("use.name", tableName: "offchain.noun.actions", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "offchain.noun.actions", preferredLanguages: preferredLanguages) else {
          return "use.name"
        }

        return NSLocalizedString("use.name", tableName: "offchain.noun.actions", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.onboarding` struct is generated, and contains static references to 4 localization keys.
    struct onboarding {
      /// Value: Then give it something to say
      static let play = Rswift.StringResource(key: "play", tableName: "Onboarding", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: There are many to explore
      static let explore = Rswift.StringResource(key: "explore", tableName: "Onboarding", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: This is a noun
      static let introduction = Rswift.StringResource(key: "introduction", tableName: "Onboarding", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: You can create your very own
      static let create = Rswift.StringResource(key: "create", tableName: "Onboarding", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Then give it something to say
      static func play(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("play", tableName: "Onboarding", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Onboarding", preferredLanguages: preferredLanguages) else {
          return "play"
        }

        return NSLocalizedString("play", tableName: "Onboarding", bundle: bundle, comment: "")
      }

      /// Value: There are many to explore
      static func explore(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("explore", tableName: "Onboarding", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Onboarding", preferredLanguages: preferredLanguages) else {
          return "explore"
        }

        return NSLocalizedString("explore", tableName: "Onboarding", bundle: bundle, comment: "")
      }

      /// Value: This is a noun
      static func introduction(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("introduction", tableName: "Onboarding", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Onboarding", preferredLanguages: preferredLanguages) else {
          return "introduction"
        }

        return NSLocalizedString("introduction", tableName: "Onboarding", bundle: bundle, comment: "")
      }

      /// Value: You can create your very own
      static func create(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("create", tableName: "Onboarding", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Onboarding", preferredLanguages: preferredLanguages) else {
          return "create"
        }

        return NSLocalizedString("create", tableName: "Onboarding", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.playExperience` struct is generated, and contains static references to 10 localization keys.
    struct playExperience {
      /// Value: Create a noun
      static let createNoun = Rswift.StringResource(key: "create.noun", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Get going
      static let proceedTitle = Rswift.StringResource(key: "proceed.title", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Give your noun something to say!
      static let subheadline = Rswift.StringResource(key: "subheadline", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: New
      static let createNounAction = Rswift.StringResource(key: "create-noun.action", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Pick a noun, yo
      static let chooseNoun = Rswift.StringResource(key: "choose.noun", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Play
      static let title = Rswift.StringResource(key: "title", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Swipe to pick a noun
      static let chooseCoachmark = Rswift.StringResource(key: "choose.coachmark", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Yo, you don't have any nouns. Create one and give it something to say!
      static let createNounSpeechBubble = Rswift.StringResource(key: "create.noun.speech.bubble", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: You need a noun!
      static let noNouns = Rswift.StringResource(key: "no.nouns", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: sup home slice
      static let speechBubble = Rswift.StringResource(key: "speech.bubble", tableName: "PlayExperience", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Create a noun
      static func createNoun(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("create.noun", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "create.noun"
        }

        return NSLocalizedString("create.noun", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: Get going
      static func proceedTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("proceed.title", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "proceed.title"
        }

        return NSLocalizedString("proceed.title", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: Give your noun something to say!
      static func subheadline(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("subheadline", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "subheadline"
        }

        return NSLocalizedString("subheadline", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: New
      static func createNounAction(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("create-noun.action", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "create-noun.action"
        }

        return NSLocalizedString("create-noun.action", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: Pick a noun, yo
      static func chooseNoun(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("choose.noun", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "choose.noun"
        }

        return NSLocalizedString("choose.noun", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: Play
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: Swipe to pick a noun
      static func chooseCoachmark(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("choose.coachmark", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "choose.coachmark"
        }

        return NSLocalizedString("choose.coachmark", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: Yo, you don't have any nouns. Create one and give it something to say!
      static func createNounSpeechBubble(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("create.noun.speech.bubble", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "create.noun.speech.bubble"
        }

        return NSLocalizedString("create.noun.speech.bubble", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: You need a noun!
      static func noNouns(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("no.nouns", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "no.nouns"
        }

        return NSLocalizedString("no.nouns", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      /// Value: sup home slice
      static func speechBubble(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("speech.bubble", tableName: "PlayExperience", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "PlayExperience", preferredLanguages: preferredLanguages) else {
          return "speech.bubble"
        }

        return NSLocalizedString("speech.bubble", tableName: "PlayExperience", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.proposal` struct is generated, and contains static references to 4 localization keys.
    struct proposal {
      /// Value: Nouns are an experimental attempt to improve the formation of on-chain avatar communities
      static let message = Rswift.StringResource(key: "message", tableName: "Proposal", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Proposal %s
      static let identifier = Rswift.StringResource(key: "identifier", tableName: "Proposal", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Proposals
      static let title = Rswift.StringResource(key: "title", tableName: "Proposal", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: See all proposals
      static let seeAll = Rswift.StringResource(key: "see.all", tableName: "Proposal", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Nouns are an experimental attempt to improve the formation of on-chain avatar communities
      static func message(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("message", tableName: "Proposal", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Proposal", preferredLanguages: preferredLanguages) else {
          return "message"
        }

        return NSLocalizedString("message", tableName: "Proposal", bundle: bundle, comment: "")
      }

      /// Value: Proposal %s
      static func identifier(_ value1: UnsafePointer<CChar>, preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          let format = NSLocalizedString("identifier", tableName: "Proposal", bundle: hostingBundle, comment: "")
          return String(format: format, locale: applicationLocale, value1)
        }

        guard let (locale, bundle) = localeBundle(tableName: "Proposal", preferredLanguages: preferredLanguages) else {
          return "identifier"
        }

        let format = NSLocalizedString("identifier", tableName: "Proposal", bundle: bundle, comment: "")
        return String(format: format, locale: locale, value1)
      }

      /// Value: Proposals
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "Proposal", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Proposal", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "Proposal", bundle: bundle, comment: "")
      }

      /// Value: See all proposals
      static func seeAll(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("see.all", tableName: "Proposal", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Proposal", preferredLanguages: preferredLanguages) else {
          return "see.all"
        }

        return NSLocalizedString("see.all", tableName: "Proposal", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.settingsNotificationPermission` struct is generated, and contains static references to 7 localization keys.
    struct settingsNotificationPermission {
      /// Value: Go to iOS Settings
      static let enableNotificationAction = Rswift.StringResource(key: "enable-notification.action", tableName: "Settings.Notification.Permission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Here’s how:
      static let instructionTitle = Rswift.StringResource(key: "instruction.title", tableName: "Settings.Notification.Permission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Push Notifications
      static let title = Rswift.StringResource(key: "title", tableName: "Settings.Notification.Permission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Tap “Notifications”
      static let instructionStep1 = Rswift.StringResource(key: "instruction.step.1", tableName: "Settings.Notification.Permission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: To get notifications about nouns, you’ll need to turn them on in your iOS settings.
      static let motivationContent = Rswift.StringResource(key: "motivation.content", tableName: "Settings.Notification.Permission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Turn on notifications?
      static let motivationTitle = Rswift.StringResource(key: "motivation.title", tableName: "Settings.Notification.Permission", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Turn “Allow Notifications” on
      static let instructionStep2 = Rswift.StringResource(key: "instruction.step.2", tableName: "Settings.Notification.Permission", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Go to iOS Settings
      static func enableNotificationAction(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("enable-notification.action", tableName: "Settings.Notification.Permission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings.Notification.Permission", preferredLanguages: preferredLanguages) else {
          return "enable-notification.action"
        }

        return NSLocalizedString("enable-notification.action", tableName: "Settings.Notification.Permission", bundle: bundle, comment: "")
      }

      /// Value: Here’s how:
      static func instructionTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("instruction.title", tableName: "Settings.Notification.Permission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings.Notification.Permission", preferredLanguages: preferredLanguages) else {
          return "instruction.title"
        }

        return NSLocalizedString("instruction.title", tableName: "Settings.Notification.Permission", bundle: bundle, comment: "")
      }

      /// Value: Push Notifications
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "Settings.Notification.Permission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings.Notification.Permission", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "Settings.Notification.Permission", bundle: bundle, comment: "")
      }

      /// Value: Tap “Notifications”
      static func instructionStep1(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("instruction.step.1", tableName: "Settings.Notification.Permission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings.Notification.Permission", preferredLanguages: preferredLanguages) else {
          return "instruction.step.1"
        }

        return NSLocalizedString("instruction.step.1", tableName: "Settings.Notification.Permission", bundle: bundle, comment: "")
      }

      /// Value: To get notifications about nouns, you’ll need to turn them on in your iOS settings.
      static func motivationContent(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("motivation.content", tableName: "Settings.Notification.Permission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings.Notification.Permission", preferredLanguages: preferredLanguages) else {
          return "motivation.content"
        }

        return NSLocalizedString("motivation.content", tableName: "Settings.Notification.Permission", bundle: bundle, comment: "")
      }

      /// Value: Turn on notifications?
      static func motivationTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("motivation.title", tableName: "Settings.Notification.Permission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings.Notification.Permission", preferredLanguages: preferredLanguages) else {
          return "motivation.title"
        }

        return NSLocalizedString("motivation.title", tableName: "Settings.Notification.Permission", bundle: bundle, comment: "")
      }

      /// Value: Turn “Allow Notifications” on
      static func instructionStep2(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("instruction.step.2", tableName: "Settings.Notification.Permission", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings.Notification.Permission", preferredLanguages: preferredLanguages) else {
          return "instruction.step.2"
        }

        return NSLocalizedString("instruction.step.2", tableName: "Settings.Notification.Permission", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.settings` struct is generated, and contains static references to 9 localization keys.
    struct settings {
      /// Value: App Icon
      static let appIconTitle = Rswift.StringResource(key: "app.icon.title", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Default
      static let appIconDefault = Rswift.StringResource(key: "app.icon.default", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Every day a new noun is released to auction, and as the timer runs down, bidding can get wild. Get notified when this glorious hour approaches.
      static let notificationNote = Rswift.StringResource(key: "notification.note", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: New Noun
      static let newNounNotificationTitle = Rswift.StringResource(key: "new-noun.notification.title", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Noun O’Clock
      static let nounOclockNotificationTitle = Rswift.StringResource(key: "noun-oclock.notification.title", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Settings
      static let title = Rswift.StringResource(key: "title", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Share with friends
      static let shareFriends = Rswift.StringResource(key: "share.friends", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: System
      static let themeSystem = Rswift.StringResource(key: "theme.system", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Theme
      static let themeTitle = Rswift.StringResource(key: "theme.title", tableName: "Settings", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: App Icon
      static func appIconTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("app.icon.title", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "app.icon.title"
        }

        return NSLocalizedString("app.icon.title", tableName: "Settings", bundle: bundle, comment: "")
      }

      /// Value: Default
      static func appIconDefault(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("app.icon.default", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "app.icon.default"
        }

        return NSLocalizedString("app.icon.default", tableName: "Settings", bundle: bundle, comment: "")
      }

      /// Value: Every day a new noun is released to auction, and as the timer runs down, bidding can get wild. Get notified when this glorious hour approaches.
      static func notificationNote(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("notification.note", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "notification.note"
        }

        return NSLocalizedString("notification.note", tableName: "Settings", bundle: bundle, comment: "")
      }

      /// Value: New Noun
      static func newNounNotificationTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("new-noun.notification.title", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "new-noun.notification.title"
        }

        return NSLocalizedString("new-noun.notification.title", tableName: "Settings", bundle: bundle, comment: "")
      }

      /// Value: Noun O’Clock
      static func nounOclockNotificationTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("noun-oclock.notification.title", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "noun-oclock.notification.title"
        }

        return NSLocalizedString("noun-oclock.notification.title", tableName: "Settings", bundle: bundle, comment: "")
      }

      /// Value: Settings
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "Settings", bundle: bundle, comment: "")
      }

      /// Value: Share with friends
      static func shareFriends(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("share.friends", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "share.friends"
        }

        return NSLocalizedString("share.friends", tableName: "Settings", bundle: bundle, comment: "")
      }

      /// Value: System
      static func themeSystem(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("theme.system", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "theme.system"
        }

        return NSLocalizedString("theme.system", tableName: "Settings", bundle: bundle, comment: "")
      }

      /// Value: Theme
      static func themeTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("theme.title", tableName: "Settings", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Settings", preferredLanguages: preferredLanguages) else {
          return "theme.title"
        }

        return NSLocalizedString("theme.title", tableName: "Settings", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.shared` struct is generated, and contains static references to 14 localization keys.
    struct shared {
      /// Value: Accessory
      static let accessory = Rswift.StringResource(key: "accessory", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Background
      static let background = Rswift.StringResource(key: "background", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Body
      static let body = Rswift.StringResource(key: "body", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Done
      static let done = Rswift.StringResource(key: "done", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Glasses
      static let glasses = Rswift.StringResource(key: "glasses", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Head
      static let head = Rswift.StringResource(key: "head", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Learn more
      static let learnMore = Rswift.StringResource(key: "learn.more", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: N/A
      static let notApplicable = Rswift.StringResource(key: "not.applicable", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Remix
      static let remix = Rswift.StringResource(key: "remix", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Share
      static let share = Rswift.StringResource(key: "share", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Try Again
      static let tryAgain = Rswift.StringResource(key: "try.again", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Unavailable
      static let unavailable = Rswift.StringResource(key: "unavailable", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Untitled
      static let untitled = Rswift.StringResource(key: "untitled", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: https://nouns.wtf
      static let nounsWebsite = Rswift.StringResource(key: "nouns.website", tableName: "Shared", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Accessory
      static func accessory(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("accessory", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "accessory"
        }

        return NSLocalizedString("accessory", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Background
      static func background(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("background", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "background"
        }

        return NSLocalizedString("background", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Body
      static func body(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("body", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "body"
        }

        return NSLocalizedString("body", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Done
      static func done(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("done", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "done"
        }

        return NSLocalizedString("done", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Glasses
      static func glasses(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("glasses", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "glasses"
        }

        return NSLocalizedString("glasses", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Head
      static func head(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("head", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "head"
        }

        return NSLocalizedString("head", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Learn more
      static func learnMore(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("learn.more", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "learn.more"
        }

        return NSLocalizedString("learn.more", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: N/A
      static func notApplicable(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("not.applicable", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "not.applicable"
        }

        return NSLocalizedString("not.applicable", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Remix
      static func remix(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("remix", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "remix"
        }

        return NSLocalizedString("remix", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Share
      static func share(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("share", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "share"
        }

        return NSLocalizedString("share", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Try Again
      static func tryAgain(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("try.again", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "try.again"
        }

        return NSLocalizedString("try.again", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Unavailable
      static func unavailable(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("unavailable", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "unavailable"
        }

        return NSLocalizedString("unavailable", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: Untitled
      static func untitled(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("untitled", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "untitled"
        }

        return NSLocalizedString("untitled", tableName: "Shared", bundle: bundle, comment: "")
      }

      /// Value: https://nouns.wtf
      static func nounsWebsite(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("nouns.website", tableName: "Shared", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Shared", preferredLanguages: preferredLanguages) else {
          return "nouns.website"
        }

        return NSLocalizedString("nouns.website", tableName: "Shared", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    /// This `R.string.spaces` struct is generated, and contains static references to 10 localization keys.
    struct spaces {
      /// Value: Discord
      static let discordTitle = Rswift.StringResource(key: "discord.title", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Discourse
      static let discourseTitle = Rswift.StringResource(key: "discourse.title", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Etherscan
      static let etherscanTitle = Rswift.StringResource(key: "etherscan.title", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Nouns are an experimental attempt to improve the formation of on-chain avatar communities
      static let message = Rswift.StringResource(key: "message", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Spaces
      static let title = Rswift.StringResource(key: "title", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: Twitter
      static let twitterTitle = Rswift.StringResource(key: "twitter.title", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: https://discord.gg/nouns
      static let discordLink = Rswift.StringResource(key: "discord.link", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: https://discourse.nouns.wtf
      static let discourseLink = Rswift.StringResource(key: "discourse.link", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: https://etherscan.io/address/0x9C8fF314C9Bc7F6e59A9d9225Fb22946427eDC03
      static let etherscanLink = Rswift.StringResource(key: "etherscan.link", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)
      /// Value: https://twitter.com/nounsdao
      static let twitterLink = Rswift.StringResource(key: "twitter.link", tableName: "Spaces", bundle: R.hostingBundle, locales: [], comment: nil)

      /// Value: Discord
      static func discordTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("discord.title", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "discord.title"
        }

        return NSLocalizedString("discord.title", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: Discourse
      static func discourseTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("discourse.title", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "discourse.title"
        }

        return NSLocalizedString("discourse.title", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: Etherscan
      static func etherscanTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("etherscan.title", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "etherscan.title"
        }

        return NSLocalizedString("etherscan.title", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: Nouns are an experimental attempt to improve the formation of on-chain avatar communities
      static func message(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("message", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "message"
        }

        return NSLocalizedString("message", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: Spaces
      static func title(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("title", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "title"
        }

        return NSLocalizedString("title", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: Twitter
      static func twitterTitle(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("twitter.title", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "twitter.title"
        }

        return NSLocalizedString("twitter.title", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: https://discord.gg/nouns
      static func discordLink(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("discord.link", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "discord.link"
        }

        return NSLocalizedString("discord.link", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: https://discourse.nouns.wtf
      static func discourseLink(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("discourse.link", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "discourse.link"
        }

        return NSLocalizedString("discourse.link", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: https://etherscan.io/address/0x9C8fF314C9Bc7F6e59A9d9225Fb22946427eDC03
      static func etherscanLink(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("etherscan.link", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "etherscan.link"
        }

        return NSLocalizedString("etherscan.link", tableName: "Spaces", bundle: bundle, comment: "")
      }

      /// Value: https://twitter.com/nounsdao
      static func twitterLink(preferredLanguages: [String]? = nil) -> String {
        guard let preferredLanguages = preferredLanguages else {
          return NSLocalizedString("twitter.link", tableName: "Spaces", bundle: hostingBundle, comment: "")
        }

        guard let (_, bundle) = localeBundle(tableName: "Spaces", preferredLanguages: preferredLanguages) else {
          return "twitter.link"
        }

        return NSLocalizedString("twitter.link", tableName: "Spaces", bundle: bundle, comment: "")
      }

      fileprivate init() {}
    }

    fileprivate init() {}
  }

  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      try _R.validate()
    }

    fileprivate init() {}
  }

  fileprivate class Class {}

  fileprivate init() {}
}

struct _R: Rswift.Validatable {
  static func validate() throws {
    #if os(iOS) || os(tvOS)
    try storyboard.validate()
    #endif
  }

  #if os(iOS) || os(tvOS)
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      #if os(iOS) || os(tvOS)
      try launchScreen.validate()
      #endif
    }

    #if os(iOS) || os(tvOS)
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UIViewController

      let bundle = R.hostingBundle
      let name = "LaunchScreen"

      static func validate() throws {
        if UIKit.UIImage(named: "glasses", in: R.hostingBundle, compatibleWith: nil) == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'glasses' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
        if #available(iOS 11.0, tvOS 11.0, *) {
          if UIKit.UIColor(named: "launch.screen.background", in: R.hostingBundle, compatibleWith: nil) == nil { throw Rswift.ValidationError(description: "[R.swift] Color named 'launch.screen.background' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
        }
      }

      fileprivate init() {}
    }
    #endif

    fileprivate init() {}
  }
  #endif

  fileprivate init() {}
}
